
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv src/top.sv src/top1.sv src/memory_control.sv src/mux.sv src/pc.sv src/ram.sv src/register_file.sv src/request_unit.sv src/request.sv src/ru_ram.sv src/signExtender.sv src/writeToReg.sv src/control.sv src/alu.sv src/ssdec.sv src/request_ram.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/top.sv
Parsing SystemVerilog input from `src/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/top1.sv
Parsing SystemVerilog input from `src/top1.sv' to AST representation.
Generating RTLIL representation for module `\top1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/memory_control.sv
Parsing SystemVerilog input from `src/memory_control.sv' to AST representation.
Generating RTLIL representation for module `\memory_control'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/mux.sv
Parsing SystemVerilog input from `src/mux.sv' to AST representation.
Generating RTLIL representation for module `\mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/pc.sv
Parsing SystemVerilog input from `src/pc.sv' to AST representation.
Generating RTLIL representation for module `\pc'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/ram.sv
Parsing SystemVerilog input from `src/ram.sv' to AST representation.
Generating RTLIL representation for module `\ram'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/register_file.sv
Parsing SystemVerilog input from `src/register_file.sv' to AST representation.
Generating RTLIL representation for module `\register_file'.
Warning: Replacing memory \nxt_register with list of registers. See src/register_file.sv:60
Warning: Replacing memory \register with list of registers. See src/register_file.sv:47
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/request_unit.sv
Parsing SystemVerilog input from `src/request_unit.sv' to AST representation.
Generating RTLIL representation for module `\request_unit'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/request.sv
Parsing SystemVerilog input from `src/request.sv' to AST representation.
Generating RTLIL representation for module `\request'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/ru_ram.sv
Parsing SystemVerilog input from `src/ru_ram.sv' to AST representation.
Generating RTLIL representation for module `\ru_ram'.
Warning: Replacing memory \memory with list of registers. See src/ru_ram.sv:0
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/signExtender.sv
Parsing SystemVerilog input from `src/signExtender.sv' to AST representation.
Generating RTLIL representation for module `\signExtender'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/writeToReg.sv
Parsing SystemVerilog input from `src/writeToReg.sv' to AST representation.
Generating RTLIL representation for module `\writeToReg'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/control.sv
Parsing SystemVerilog input from `src/control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/alu.sv
Parsing SystemVerilog input from `src/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/ssdec.sv
Parsing SystemVerilog input from `src/ssdec.sv' to AST representation.
Generating RTLIL representation for module `\ssdec'.
Warning: Replacing memory \seg7 with list of registers. See src/ssdec.sv:9
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/request_ram.sv
Parsing SystemVerilog input from `src/request_ram.sv' to AST representation.
Generating RTLIL representation for module `\request_ram'.
Warning: Replacing memory \memory with list of registers. See src/request_ram.sv:25
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

21. Executing SYNTH_ICE40 pass.

21.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

21.2. Executing HIERARCHY pass (managing design hierarchy).

21.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

21.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

21.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

21.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

21.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removing unused module `\request_ram'.
Removing unused module `\ram'.
Removed 4 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

21.3. Executing PROC pass (convert processes to netlists).

21.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\memory_control.$proc$src/memory_control.sv:0$27'.
Cleaned up 1 empty switch.

21.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$578 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$567 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$564 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$561 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$558 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$555 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$540 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$529 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$526 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$523 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$520 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$517 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$753 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$725 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$src/ssdec.sv:0$277 in module ssdec.
Marked 1 switch rules as full_case in process $proc$src/ssdec.sv:0$277 in module ssdec.
Marked 11 switch rules as full_case in process $proc$src/alu.sv:0$255 in module alu.
Removed 2 dead cases from process $proc$src/control.sv:0$250 in module control.
Marked 9 switch rules as full_case in process $proc$src/control.sv:0$250 in module control.
Marked 1 switch rules as full_case in process $proc$src/writeToReg.sv:0$246 in module writeToReg.
Marked 4 switch rules as full_case in process $proc$src/signExtender.sv:0$221 in module signExtender.
Removed 1 dead cases from process $proc$src/ru_ram.sv:0$217 in module ru_ram.
Marked 1 switch rules as full_case in process $proc$src/ru_ram.sv:0$217 in module ru_ram.
Removed 2 dead cases from process $proc$src/ru_ram.sv:0$212 in module ru_ram.
Marked 3 switch rules as full_case in process $proc$src/ru_ram.sv:0$212 in module ru_ram.
Marked 2 switch rules as full_case in process $proc$src/ru_ram.sv:75$205 in module ru_ram.
Marked 4 switch rules as full_case in process $proc$src/request_unit.sv:0$187 in module request_unit.
Marked 1 switch rules as full_case in process $proc$src/request_unit.sv:21$185 in module request_unit.
Removed 1 dead cases from process $proc$src/register_file.sv:0$182 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$182 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$179 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$179 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$171 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/register_file.sv:0$171 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:43$101 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/pc.sv:0$36 in module pc.
Marked 1 switch rules as full_case in process $proc$src/pc.sv:32$34 in module pc.
Marked 1 switch rules as full_case in process $proc$src/mux.sv:0$33 in module mux.
Marked 3 switch rules as full_case in process $proc$src/memory_control.sv:0$27 in module memory_control.
Marked 1 switch rules as full_case in process $proc$src/memory_control.sv:11$25 in module memory_control.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 9 dead cases.

21.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 52 redundant assignments.
Promoted 172 assignments to connections.

21.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$588'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$584'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$577'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$573'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$563'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$557'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$554'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$552'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$546'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$535'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$525'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$516'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$514'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$772'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$771'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$770'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$769'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$768'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$767'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$752'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$751'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$750'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$749'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$748'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$747'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$746'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$745'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$744'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

21.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$564'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$558'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$526'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$520'.
Found async reset \nRst in `\ru_ram.$proc$src/ru_ram.sv:75$205'.
Found async reset \nRST in `\request_unit.$proc$src/request_unit.sv:21$185'.
Found async reset \nRST in `\register_file.$proc$src/register_file.sv:43$101'.
Found async reset \nRST in `\pc.$proc$src/pc.sv:32$34'.
Found async reset \nRST in `\memory_control.$proc$src/memory_control.sv:11$25'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

21.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~85 debug messages>

21.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$588'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$584'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$578'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$577'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$573'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$567'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$564'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$563'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$561'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$558'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$557'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$555'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$554'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$553'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$552'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$551'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$546'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$540'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$535'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$529'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$526'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$525'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$523'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$520'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$517'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$516'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$515'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$514'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$513'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$772'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$771'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$770'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$769'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$768'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$767'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$752'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$751'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$750'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$749'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$748'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$747'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$746'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$745'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$744'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$277'.
     1/1: $1$mem2reg_rd$\seg7$src/ssdec.sv:26$274_DATA[6:0]$279
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$276'.
Creating decoders for process `\alu.$proc$src/alu.sv:0$255'.
     1/13: $3\ALUResult[31:0]
     2/13: $2\ALUResult[31:0]
     3/13: $9\zero[0:0]
     4/13: $8\zero[0:0]
     5/13: $7\zero[0:0]
     6/13: $6\zero[0:0]
     7/13: $5\zero[0:0]
     8/13: $4\zero[0:0]
     9/13: $3\zero[0:0]
    10/13: $2\zero[0:0]
    11/13: $1\zero[0:0]
    12/13: $1\negative[0:0]
    13/13: $1\ALUResult[31:0]
Creating decoders for process `\control.$proc$src/control.sv:0$250'.
     1/23: $9\cuOP[5:0]
     2/23: $6\aluOP[3:0]
     3/23: $8\cuOP[5:0]
     4/23: $5\aluOP[3:0]
     5/23: $7\cuOP[5:0]
     6/23: $4\aluOP[3:0]
     7/23: $6\cuOP[5:0]
     8/23: $3\aluOP[3:0]
     9/23: $5\cuOP[5:0]
    10/23: $2\aluOP[3:0]
    11/23: $4\cuOP[5:0]
    12/23: $3\cuOP[5:0]
    13/23: $2\cuOP[5:0]
    14/23: $1\regWrite[0:0]
    15/23: $1\rd[4:0]
    16/23: $1\imm[19:0]
    17/23: $1\cuOP[5:0]
    18/23: $1\reg_2[4:0]
    19/23: $1\reg_1[4:0]
    20/23: $1\aluOP[3:0]
    21/23: $1\memRead[0:0]
    22/23: $1\memWrite[0:0]
    23/23: $1\aluSrc[0:0]
Creating decoders for process `\writeToReg.$proc$src/writeToReg.sv:0$246'.
     1/1: $1\writeData[31:0]
Creating decoders for process `\signExtender.$proc$src/signExtender.sv:0$221'.
     1/4: $4\immOut[31:0]
     2/4: $3\immOut[31:0]
     3/4: $2\immOut[31:0]
     4/4: $1\immOut[31:0]
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$217'.
     1/1: $1$mem2reg_rd$\memory$src/ru_ram.sv:109$204_DATA[31:0]$219
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
     1/5: $2\nxt_memory[31:0]
     2/5: $1\nxt_memory[31:0]
     3/5: $1\next_state[0:0]
     4/5: $1\busy[0:0]
     5/5: $1$mem2reg_rd$\memory$src/ru_ram.sv:87$203_DATA[31:0]$216
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
     1/35: $0\state[0:0]
     2/35: $1$mem2reg_wr$\memory$src/ru_ram.sv:80$202_ADDR[4:0]$209
     3/35: $1$mem2reg_wr$\memory$src/ru_ram.sv:80$202_DATA[31:0]$210
     4/35: $1\memory[6][31:0]
     5/35: $1\memory[5][31:0]
     6/35: $1\memory[4][31:0]
     7/35: $1\memory[3][31:0]
     8/35: $1\memory[2][31:0]
     9/35: $1\memory[1][31:0]
    10/35: $1\memory[0][31:0]
    11/35: $0\memory[31][31:0]
    12/35: $0\memory[30][31:0]
    13/35: $0\memory[29][31:0]
    14/35: $0\memory[28][31:0]
    15/35: $0\memory[27][31:0]
    16/35: $0\memory[26][31:0]
    17/35: $0\memory[25][31:0]
    18/35: $0\memory[24][31:0]
    19/35: $0\memory[23][31:0]
    20/35: $0\memory[22][31:0]
    21/35: $0\memory[21][31:0]
    22/35: $0\memory[20][31:0]
    23/35: $0\memory[19][31:0]
    24/35: $0\memory[18][31:0]
    25/35: $0\memory[17][31:0]
    26/35: $0\memory[16][31:0]
    27/35: $0\memory[15][31:0]
    28/35: $0\memory[14][31:0]
    29/35: $0\memory[13][31:0]
    30/35: $0\memory[12][31:0]
    31/35: $0\memory[11][31:0]
    32/35: $0\memory[10][31:0]
    33/35: $0\memory[9][31:0]
    34/35: $0\memory[8][31:0]
    35/35: $0\memory[7][31:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:0$187'.
     1/8: $4\nxt_dmmWen[0:0]
     2/8: $4\nxt_dmmRen[0:0]
     3/8: $3\nxt_dmmWen[0:0]
     4/8: $3\nxt_dmmRen[0:0]
     5/8: $2\nxt_dmmWen[0:0]
     6/8: $2\nxt_dmmRen[0:0]
     7/8: $1\nxt_dmmWen[0:0]
     8/8: $1\nxt_dmmRen[0:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:21$185'.
     1/2: $0\dmmWen[0:0]
     2/2: $0\dmmRen[0:0]
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$182'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:69$100_DATA[31:0]$184
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$179'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:68$99_DATA[31:0]$181
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$171'.
     1/66: $2\nxt_register[0][31:0]
     2/66: $2\nxt_register[31][31:0]
     3/66: $2\nxt_register[30][31:0]
     4/66: $2\nxt_register[29][31:0]
     5/66: $2\nxt_register[28][31:0]
     6/66: $2\nxt_register[27][31:0]
     7/66: $2\nxt_register[26][31:0]
     8/66: $2\nxt_register[25][31:0]
     9/66: $2\nxt_register[24][31:0]
    10/66: $2\nxt_register[23][31:0]
    11/66: $2\nxt_register[22][31:0]
    12/66: $2\nxt_register[21][31:0]
    13/66: $2\nxt_register[20][31:0]
    14/66: $2\nxt_register[19][31:0]
    15/66: $2\nxt_register[18][31:0]
    16/66: $2\nxt_register[17][31:0]
    17/66: $2\nxt_register[16][31:0]
    18/66: $2\nxt_register[15][31:0]
    19/66: $2\nxt_register[14][31:0]
    20/66: $2\nxt_register[13][31:0]
    21/66: $2\nxt_register[12][31:0]
    22/66: $2\nxt_register[11][31:0]
    23/66: $2\nxt_register[10][31:0]
    24/66: $2\nxt_register[9][31:0]
    25/66: $2\nxt_register[8][31:0]
    26/66: $2\nxt_register[7][31:0]
    27/66: $2\nxt_register[6][31:0]
    28/66: $2\nxt_register[5][31:0]
    29/66: $2\nxt_register[4][31:0]
    30/66: $2\nxt_register[3][31:0]
    31/66: $2\nxt_register[2][31:0]
    32/66: $2\nxt_register[1][31:0]
    33/66: $1\nxt_register[31][31:0]
    34/66: $1\nxt_register[30][31:0]
    35/66: $1\nxt_register[29][31:0]
    36/66: $1\nxt_register[28][31:0]
    37/66: $1\nxt_register[27][31:0]
    38/66: $1\nxt_register[26][31:0]
    39/66: $1\nxt_register[25][31:0]
    40/66: $1\nxt_register[24][31:0]
    41/66: $1\nxt_register[23][31:0]
    42/66: $1\nxt_register[22][31:0]
    43/66: $1\nxt_register[21][31:0]
    44/66: $1\nxt_register[20][31:0]
    45/66: $1\nxt_register[19][31:0]
    46/66: $1\nxt_register[18][31:0]
    47/66: $1\nxt_register[17][31:0]
    48/66: $1\nxt_register[16][31:0]
    49/66: $1\nxt_register[15][31:0]
    50/66: $1\nxt_register[14][31:0]
    51/66: $1\nxt_register[13][31:0]
    52/66: $1\nxt_register[12][31:0]
    53/66: $1\nxt_register[11][31:0]
    54/66: $1\nxt_register[10][31:0]
    55/66: $1\nxt_register[9][31:0]
    56/66: $1\nxt_register[8][31:0]
    57/66: $1\nxt_register[7][31:0]
    58/66: $1\nxt_register[6][31:0]
    59/66: $1\nxt_register[5][31:0]
    60/66: $1\nxt_register[4][31:0]
    61/66: $1\nxt_register[3][31:0]
    62/66: $1\nxt_register[2][31:0]
    63/66: $1\nxt_register[1][31:0]
    64/66: $1\nxt_register[0][31:0]
    65/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_ADDR[4:0]$177
    66/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_DATA[31:0]$178
Creating decoders for process `\register_file.$proc$src/register_file.sv:43$101'.
     1/66: $1$fordecl_block$94.i[31:0]$170
     2/66: $0\register[31][31:0]
     3/66: $0\register[30][31:0]
     4/66: $0\register[29][31:0]
     5/66: $0\register[28][31:0]
     6/66: $0\register[27][31:0]
     7/66: $0\register[26][31:0]
     8/66: $0\register[25][31:0]
     9/66: $0\register[24][31:0]
    10/66: $0\register[23][31:0]
    11/66: $0\register[22][31:0]
    12/66: $0\register[21][31:0]
    13/66: $0\register[20][31:0]
    14/66: $0\register[19][31:0]
    15/66: $0\register[18][31:0]
    16/66: $0\register[17][31:0]
    17/66: $0\register[16][31:0]
    18/66: $0\register[15][31:0]
    19/66: $0\register[14][31:0]
    20/66: $0\register[13][31:0]
    21/66: $0\register[12][31:0]
    22/66: $0\register[11][31:0]
    23/66: $0\register[10][31:0]
    24/66: $0\register[9][31:0]
    25/66: $0\register[8][31:0]
    26/66: $0\register[7][31:0]
    27/66: $0\register[6][31:0]
    28/66: $0\register[5][31:0]
    29/66: $0\register[4][31:0]
    30/66: $0\register[3][31:0]
    31/66: $0\register[2][31:0]
    32/66: $0\register[1][31:0]
    33/66: $1$fordecl_block$90.$for_loop$91[31].$fordecl_block$92.j[31:0]$169
    34/66: $1$fordecl_block$90.$for_loop$91[30].$fordecl_block$92.j[31:0]$168
    35/66: $1$fordecl_block$90.$for_loop$91[29].$fordecl_block$92.j[31:0]$167
    36/66: $1$fordecl_block$90.$for_loop$91[28].$fordecl_block$92.j[31:0]$166
    37/66: $1$fordecl_block$90.$for_loop$91[27].$fordecl_block$92.j[31:0]$165
    38/66: $1$fordecl_block$90.$for_loop$91[26].$fordecl_block$92.j[31:0]$164
    39/66: $1$fordecl_block$90.$for_loop$91[25].$fordecl_block$92.j[31:0]$163
    40/66: $1$fordecl_block$90.$for_loop$91[24].$fordecl_block$92.j[31:0]$162
    41/66: $1$fordecl_block$90.$for_loop$91[23].$fordecl_block$92.j[31:0]$161
    42/66: $1$fordecl_block$90.$for_loop$91[22].$fordecl_block$92.j[31:0]$160
    43/66: $1$fordecl_block$90.$for_loop$91[21].$fordecl_block$92.j[31:0]$159
    44/66: $1$fordecl_block$90.$for_loop$91[20].$fordecl_block$92.j[31:0]$158
    45/66: $1$fordecl_block$90.$for_loop$91[19].$fordecl_block$92.j[31:0]$157
    46/66: $1$fordecl_block$90.$for_loop$91[18].$fordecl_block$92.j[31:0]$156
    47/66: $1$fordecl_block$90.$for_loop$91[17].$fordecl_block$92.j[31:0]$155
    48/66: $1$fordecl_block$90.$for_loop$91[16].$fordecl_block$92.j[31:0]$154
    49/66: $1$fordecl_block$90.$for_loop$91[15].$fordecl_block$92.j[31:0]$153
    50/66: $1$fordecl_block$90.$for_loop$91[14].$fordecl_block$92.j[31:0]$152
    51/66: $1$fordecl_block$90.$for_loop$91[13].$fordecl_block$92.j[31:0]$151
    52/66: $1$fordecl_block$90.$for_loop$91[12].$fordecl_block$92.j[31:0]$150
    53/66: $1$fordecl_block$90.$for_loop$91[11].$fordecl_block$92.j[31:0]$149
    54/66: $1$fordecl_block$90.$for_loop$91[10].$fordecl_block$92.j[31:0]$148
    55/66: $1$fordecl_block$90.$for_loop$91[9].$fordecl_block$92.j[31:0]$147
    56/66: $1$fordecl_block$90.$for_loop$91[8].$fordecl_block$92.j[31:0]$146
    57/66: $1$fordecl_block$90.$for_loop$91[7].$fordecl_block$92.j[31:0]$145
    58/66: $1$fordecl_block$90.$for_loop$91[6].$fordecl_block$92.j[31:0]$144
    59/66: $1$fordecl_block$90.$for_loop$91[5].$fordecl_block$92.j[31:0]$143
    60/66: $1$fordecl_block$90.$for_loop$91[4].$fordecl_block$92.j[31:0]$142
    61/66: $1$fordecl_block$90.$for_loop$91[3].$fordecl_block$92.j[31:0]$141
    62/66: $1$fordecl_block$90.$for_loop$91[2].$fordecl_block$92.j[31:0]$140
    63/66: $1$fordecl_block$90.$for_loop$91[1].$fordecl_block$92.j[31:0]$139
    64/66: $1$fordecl_block$90.$for_loop$91[0].$fordecl_block$92.j[31:0]$138
    65/66: $1$fordecl_block$90.i[31:0]$137
    66/66: $0\register[0][31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:0$36'.
     1/2: $2\next_pc[31:0]
     2/2: $1\next_pc[31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:32$34'.
     1/1: $0\PC[31:0]
Creating decoders for process `\mux.$proc$src/mux.sv:0$33'.
     1/1: $1\out[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:0$27'.
     1/20: $3\i_wait[0:0]
     2/20: $4\imemload[31:0]
     3/20: $3\Ren[0:0]
     4/20: $3\ramaddr[31:0]
     5/20: $3\Wen[0:0]
     6/20: $2\d_wait[0:0]
     7/20: $2\ramstore[31:0]
     8/20: $2\Wen[0:0]
     9/20: $2\ramaddr[31:0]
    10/20: $2\i_wait[0:0]
    11/20: $2\Ren[0:0]
    12/20: $3\imemload[31:0]
    13/20: $1\d_wait[0:0]
    14/20: $1\dmmload[31:0]
    15/20: $1\Ren[0:0]
    16/20: $1\ramaddr[31:0]
    17/20: $1\i_wait[0:0]
    18/20: $1\Wen[0:0]
    19/20: $1\ramstore[31:0]
    20/20: $2\imemload[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:11$25'.
     1/3: $0\prev_imemload[31:0]
     2/3: $0\prev_dmmstore[31:0]
     3/3: $0\prev_dmmaddr[31:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

21.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ssdec.$mem2reg_rd$\seg7$src/ssdec.sv:26$274_DATA' from process `\ssdec.$proc$src/ssdec.sv:0$277'.
No latch inferred for signal `\ssdec.\seg7[0]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[1]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[2]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[3]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[4]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[5]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[6]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[7]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[8]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[9]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[10]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[11]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[12]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[13]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[14]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\ssdec.\seg7[15]' from process `\ssdec.$proc$src/ssdec.sv:0$276'.
No latch inferred for signal `\alu.\zero' from process `\alu.$proc$src/alu.sv:0$255'.
No latch inferred for signal `\alu.\negative' from process `\alu.$proc$src/alu.sv:0$255'.
No latch inferred for signal `\alu.\ALUResult' from process `\alu.$proc$src/alu.sv:0$255'.
No latch inferred for signal `\control.\regWrite' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\aluSrc' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\memWrite' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\memRead' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\aluOP' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\cuOP' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\imm' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\reg_1' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\reg_2' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\control.\rd' from process `\control.$proc$src/control.sv:0$250'.
No latch inferred for signal `\writeToReg.\writeData' from process `\writeToReg.$proc$src/writeToReg.sv:0$246'.
No latch inferred for signal `\signExtender.\immOut' from process `\signExtender.$proc$src/signExtender.sv:0$221'.
No latch inferred for signal `\ru_ram.$mem2reg_rd$\memory$src/ru_ram.sv:109$204_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$217'.
No latch inferred for signal `\ru_ram.\display' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\busy' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\next_state' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.$mem2reg_rd$\memory$src/ru_ram.sv:87$203_ADDR' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.$mem2reg_rd$\memory$src/ru_ram.sv:87$203_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\request_unit.\nxt_dmmRen' from process `\request_unit.$proc$src/request_unit.sv:0$187'.
No latch inferred for signal `\request_unit.\nxt_dmmWen' from process `\request_unit.$proc$src/request_unit.sv:0$187'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:69$100_DATA' from process `\register_file.$proc$src/register_file.sv:0$182'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:68$99_DATA' from process `\register_file.$proc$src/register_file.sv:0$179'.
No latch inferred for signal `\register_file.$fordecl_block$96.i' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[0]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[1]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[2]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[3]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[4]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[5]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[6]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[7]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[8]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[9]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[10]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[11]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[12]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[13]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[14]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[15]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[16]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[17]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[18]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[19]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[20]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[21]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[22]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[23]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[24]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[25]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[26]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[27]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[28]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[29]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[30]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[31]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_ADDR' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_DATA' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\pc.\next_pc' from process `\pc.$proc$src/pc.sv:0$36'.
No latch inferred for signal `\mux.\out' from process `\mux.$proc$src/mux.sv:0$33'.
No latch inferred for signal `\memory_control.\imemload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramaddr' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramstore' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Wen' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\dmmload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Ren' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\d_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\i_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.

21.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585'.
  created $adff cell `$procdff$3638' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$578'.
  created $dff cell `$procdff$3639' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574'.
  created $adff cell `$procdff$3640' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$567'.
  created $dff cell `$procdff$3641' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$564'.
  created $adff cell `$procdff$3642' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$561'.
  created $dff cell `$procdff$3643' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$558'.
  created $adff cell `$procdff$3644' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$555'.
  created $dff cell `$procdff$3645' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$553'.
  created $dff cell `$procdff$3646' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$551'.
  created $dff cell `$procdff$3647' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547'.
  created $adff cell `$procdff$3648' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$540'.
  created $dff cell `$procdff$3649' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536'.
  created $adff cell `$procdff$3650' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$529'.
  created $dff cell `$procdff$3651' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$526'.
  created $adff cell `$procdff$3652' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$523'.
  created $dff cell `$procdff$3653' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$520'.
  created $adff cell `$procdff$3654' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$517'.
  created $dff cell `$procdff$3655' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$515'.
  created $dff cell `$procdff$3656' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$513'.
  created $dff cell `$procdff$3657' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3658' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3659' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3660' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3661' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3662' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
  created $dff cell `$procdff$3663' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3664' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3665' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3666' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3667' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3668' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3669' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3670' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3671' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
  created $dff cell `$procdff$3672' with positive edge clock.
Creating register for signal `\ru_ram.\state' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3673' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[0]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3674' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[1]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3675' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[2]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3676' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[3]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3677' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[4]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3678' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[5]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3679' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[6]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3680' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[7]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3683' with positive edge clock.
Creating register for signal `\ru_ram.\memory[8]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3686' with positive edge clock.
Creating register for signal `\ru_ram.\memory[9]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3689' with positive edge clock.
Creating register for signal `\ru_ram.\memory[10]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3692' with positive edge clock.
Creating register for signal `\ru_ram.\memory[11]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3695' with positive edge clock.
Creating register for signal `\ru_ram.\memory[12]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3698' with positive edge clock.
Creating register for signal `\ru_ram.\memory[13]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3701' with positive edge clock.
Creating register for signal `\ru_ram.\memory[14]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3704' with positive edge clock.
Creating register for signal `\ru_ram.\memory[15]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3707' with positive edge clock.
Creating register for signal `\ru_ram.\memory[16]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3710' with positive edge clock.
Creating register for signal `\ru_ram.\memory[17]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3713' with positive edge clock.
Creating register for signal `\ru_ram.\memory[18]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3716' with positive edge clock.
Creating register for signal `\ru_ram.\memory[19]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3719' with positive edge clock.
Creating register for signal `\ru_ram.\memory[20]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3722' with positive edge clock.
Creating register for signal `\ru_ram.\memory[21]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3725' with positive edge clock.
Creating register for signal `\ru_ram.\memory[22]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3728' with positive edge clock.
Creating register for signal `\ru_ram.\memory[23]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3731' with positive edge clock.
Creating register for signal `\ru_ram.\memory[24]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3734' with positive edge clock.
Creating register for signal `\ru_ram.\memory[25]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3737' with positive edge clock.
Creating register for signal `\ru_ram.\memory[26]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3740' with positive edge clock.
Creating register for signal `\ru_ram.\memory[27]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3743' with positive edge clock.
Creating register for signal `\ru_ram.\memory[28]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3746' with positive edge clock.
Creating register for signal `\ru_ram.\memory[29]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3749' with positive edge clock.
Creating register for signal `\ru_ram.\memory[30]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3752' with positive edge clock.
Creating register for signal `\ru_ram.\memory[31]' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $dff cell `$procdff$3755' with positive edge clock.
Creating register for signal `\ru_ram.$mem2reg_wr$\memory$src/ru_ram.sv:80$202_ADDR' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3756' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.$mem2reg_wr$\memory$src/ru_ram.sv:80$202_DATA' using process `\ru_ram.$proc$src/ru_ram.sv:75$205'.
  created $adff cell `$procdff$3757' with positive edge clock and negative level reset.
Creating register for signal `\request_unit.\dmmRen' using process `\request_unit.$proc$src/request_unit.sv:21$185'.
  created $adff cell `$procdff$3758' with positive edge clock and negative level reset.
Creating register for signal `\request_unit.\dmmWen' using process `\request_unit.$proc$src/request_unit.sv:21$185'.
  created $adff cell `$procdff$3759' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.i' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3760' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[0].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3761' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[1].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3762' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[2].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3763' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[3].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3764' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[4].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3765' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[5].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3766' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[6].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3767' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[7].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3768' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[8].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3769' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[9].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3770' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[10].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3771' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[11].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3772' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[12].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3773' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[13].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3774' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[14].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3775' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[15].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3776' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[16].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3777' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[17].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3778' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[18].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3779' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[19].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3780' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[20].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3781' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[21].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3782' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[22].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3783' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[23].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3784' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[24].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3785' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[25].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3786' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[26].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3787' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[27].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3788' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[28].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3789' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[29].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3790' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[30].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3791' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[31].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3792' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$94.i' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $dff cell `$procdff$3795' with positive edge clock.
Creating register for signal `\register_file.\register[0]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3796' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[1]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3797' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[2]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3798' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[3]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3799' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[4]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3800' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[5]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3801' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[6]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3802' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[7]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3803' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[8]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3804' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[9]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3805' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[10]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3806' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[11]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3807' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[12]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3808' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[13]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3809' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[14]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3810' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[15]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3811' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[16]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3812' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[17]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3813' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[18]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3814' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[19]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3815' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[20]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3816' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[21]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3817' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[22]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3818' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[23]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3819' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[24]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3820' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[25]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3821' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[26]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3822' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[27]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3823' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[28]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3824' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[29]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3825' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[30]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3826' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[31]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$3827' with positive edge clock and negative level reset.
Creating register for signal `\pc.\PC' using process `\pc.$proc$src/pc.sv:32$34'.
  created $adff cell `$procdff$3828' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmaddr' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$3829' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmstore' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$3830' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_imemload' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$3831' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$3832' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$3833' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$3834' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$3835' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$3836' with positive edge clock.

21.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

21.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$588'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$585'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$584'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$578'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$578'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$577'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$574'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$573'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$567'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$567'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$564'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$563'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$561'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$561'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$558'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$557'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$555'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$555'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$554'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$553'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$553'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$552'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$551'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$547'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$546'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$540'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$540'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$536'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$535'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$529'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$529'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$526'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$525'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$523'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$523'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$520'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$517'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$517'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$516'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$515'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$515'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$514'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$513'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$772'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$771'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$770'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$769'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$768'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$767'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$753'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$752'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$751'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$750'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$749'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$748'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$747'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$746'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$745'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$744'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$725'.
Found and cleaned up 1 empty switch in `\ssdec.$proc$src/ssdec.sv:0$277'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$277'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$276'.
Found and cleaned up 11 empty switches in `\alu.$proc$src/alu.sv:0$255'.
Removing empty process `alu.$proc$src/alu.sv:0$255'.
Found and cleaned up 9 empty switches in `\control.$proc$src/control.sv:0$250'.
Removing empty process `control.$proc$src/control.sv:0$250'.
Found and cleaned up 1 empty switch in `\writeToReg.$proc$src/writeToReg.sv:0$246'.
Removing empty process `writeToReg.$proc$src/writeToReg.sv:0$246'.
Found and cleaned up 4 empty switches in `\signExtender.$proc$src/signExtender.sv:0$221'.
Removing empty process `signExtender.$proc$src/signExtender.sv:0$221'.
Found and cleaned up 1 empty switch in `\ru_ram.$proc$src/ru_ram.sv:0$217'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$217'.
Found and cleaned up 3 empty switches in `\ru_ram.$proc$src/ru_ram.sv:0$212'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$212'.
Found and cleaned up 1 empty switch in `\ru_ram.$proc$src/ru_ram.sv:75$205'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:75$205'.
Found and cleaned up 4 empty switches in `\request_unit.$proc$src/request_unit.sv:0$187'.
Removing empty process `request_unit.$proc$src/request_unit.sv:0$187'.
Removing empty process `request_unit.$proc$src/request_unit.sv:21$185'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$182'.
Removing empty process `register_file.$proc$src/register_file.sv:0$182'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$179'.
Removing empty process `register_file.$proc$src/register_file.sv:0$179'.
Found and cleaned up 2 empty switches in `\register_file.$proc$src/register_file.sv:0$171'.
Removing empty process `register_file.$proc$src/register_file.sv:0$171'.
Removing empty process `register_file.$proc$src/register_file.sv:43$101'.
Found and cleaned up 2 empty switches in `\pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:32$34'.
Found and cleaned up 1 empty switch in `\mux.$proc$src/mux.sv:0$33'.
Removing empty process `mux.$proc$src/mux.sv:0$33'.
Found and cleaned up 3 empty switches in `\memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:11$25'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 85 empty switches.

21.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module ssdec.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~12 debug messages>
Optimizing module control.
<suppressed ~11 debug messages>
Optimizing module writeToReg.
<suppressed ~1 debug messages>
Optimizing module signExtender.
<suppressed ~1 debug messages>
Optimizing module ru_ram.
<suppressed ~14 debug messages>
Optimizing module request.
Optimizing module request_unit.
Optimizing module register_file.
<suppressed ~35 debug messages>
Optimizing module pc.
<suppressed ~9 debug messages>
Optimizing module mux.
Optimizing module memory_control.
Optimizing module top1.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

21.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module ssdec.
Deleting now unused module alu.
Deleting now unused module control.
Deleting now unused module writeToReg.
Deleting now unused module signExtender.
Deleting now unused module ru_ram.
Deleting now unused module request.
Deleting now unused module request_unit.
Deleting now unused module register_file.
Deleting now unused module pc.
Deleting now unused module mux.
Deleting now unused module memory_control.
Deleting now unused module top1.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~21 debug messages>

21.5. Executing TRIBUF pass.

21.6. Executing DEMINOUT pass (demote inout ports to input or output).

21.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~152 debug messages>

21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 189 unused cells and 1061 unused wires.
<suppressed ~219 debug messages>

21.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\right [2] is used but has no driver.
Warning: Wire ice40hx8k.\right [1] is used but has no driver.
Warning: Wire ice40hx8k.\right [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 64 problems.

21.10. Executing OPT pass (performing simple optimizations).

21.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3549 debug messages>
Removed a total of 1183 cells.

21.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\top_inst.\top.\ru.\m1.$procmux$3565: \top_inst.top.ru.r1.dmmWen -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3348.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2340.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3096.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2592.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2844.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3384.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1077.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1084.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1092.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1101.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1111.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1122.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1134.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1147.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1161.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1176.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2376.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3132.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1218.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1220.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1226.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1228.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2628.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1241.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1243.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1256.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1258.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2880.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1270.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1282.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1289.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1291.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1298.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1300.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2412.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1313.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3168.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1326.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2664.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1336.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2916.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1349.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1364.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2448.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3204.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2700.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2952.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1519.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3240.
    dead port 33/33 on $pmux $flatten\top_inst.\top.\rram.$procmux$1530.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2484.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2988.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2736.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3276.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2520.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3024.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2772.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2304.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3511.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3514.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3520.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3523.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3538.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3541.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3547.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3550.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3562.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3568.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3574.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3580.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$3592.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2126.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2131.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2138.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2140.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2146.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2148.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2154.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$2160.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1456.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1459.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1462.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1468.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1471.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1477.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3312.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2556.
    dead port 1/2 on $mux $flatten\top_inst.\top.\testpc.$procmux$3499.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3060.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2808.
Removed 90 multiplexer ports.
<suppressed ~101 debug messages>

21.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2379: { $flatten\top_inst.\top.\DUT.$procmux$2275_CMP $auto$opt_reduce.cc:134:opt_pmux$3859 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3135: { $flatten\top_inst.\top.\DUT.$procmux$2296_CMP $auto$opt_reduce.cc:134:opt_pmux$3861 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2631: { $flatten\top_inst.\top.\DUT.$procmux$2282_CMP $auto$opt_reduce.cc:134:opt_pmux$3863 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3099: { $flatten\top_inst.\top.\DUT.$procmux$2295_CMP $auto$opt_reduce.cc:134:opt_pmux$3865 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2883: { $flatten\top_inst.\top.\DUT.$procmux$2289_CMP $auto$opt_reduce.cc:134:opt_pmux$3867 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2595: { $flatten\top_inst.\top.\DUT.$procmux$2281_CMP $auto$opt_reduce.cc:134:opt_pmux$3869 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2415: { $flatten\top_inst.\top.\DUT.$procmux$2276_CMP $auto$opt_reduce.cc:134:opt_pmux$3871 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3171: { $flatten\top_inst.\top.\DUT.$procmux$2297_CMP $auto$opt_reduce.cc:134:opt_pmux$3873 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2847: { $flatten\top_inst.\top.\DUT.$procmux$2288_CMP $auto$opt_reduce.cc:134:opt_pmux$3875 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3351: { $flatten\top_inst.\top.\DUT.$procmux$2302_CMP $auto$opt_reduce.cc:134:opt_pmux$3877 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2667: { $flatten\top_inst.\top.\DUT.$procmux$2283_CMP $auto$opt_reduce.cc:134:opt_pmux$3879 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2919: { $flatten\top_inst.\top.\DUT.$procmux$2290_CMP $auto$opt_reduce.cc:134:opt_pmux$3881 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1367: $auto$opt_reduce.cc:134:opt_pmux$3883
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1376: $auto$opt_reduce.cc:134:opt_pmux$3885
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2451: { $flatten\top_inst.\top.\DUT.$procmux$2277_CMP $auto$opt_reduce.cc:134:opt_pmux$3887 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1386: { $auto$opt_reduce.cc:134:opt_pmux$3893 $auto$opt_reduce.cc:134:opt_pmux$3891 $auto$opt_reduce.cc:134:opt_pmux$3889 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3207: { $flatten\top_inst.\top.\DUT.$procmux$2298_CMP $auto$opt_reduce.cc:134:opt_pmux$3895 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1407: $auto$opt_reduce.cc:134:opt_pmux$3897
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2955: { $flatten\top_inst.\top.\DUT.$procmux$2291_CMP $auto$opt_reduce.cc:134:opt_pmux$3899 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2703: { $flatten\top_inst.\top.\DUT.$procmux$2284_CMP $auto$opt_reduce.cc:134:opt_pmux$3901 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1412: $auto$opt_reduce.cc:134:opt_pmux$3903
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1437: $auto$opt_reduce.cc:134:opt_pmux$3905
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1524: $auto$opt_reduce.cc:134:opt_pmux$3907
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3243: { $flatten\top_inst.\top.\DUT.$procmux$2299_CMP $auto$opt_reduce.cc:134:opt_pmux$3909 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2487: { $flatten\top_inst.\top.\DUT.$procmux$2278_CMP $auto$opt_reduce.cc:134:opt_pmux$3911 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2271: { $auto$opt_reduce.cc:134:opt_pmux$3913 $flatten\top_inst.\top.\DUT.$procmux$2272_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2991: { $flatten\top_inst.\top.\DUT.$procmux$2292_CMP $auto$opt_reduce.cc:134:opt_pmux$3915 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2739: { $flatten\top_inst.\top.\DUT.$procmux$2285_CMP $auto$opt_reduce.cc:134:opt_pmux$3917 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3279: { $flatten\top_inst.\top.\DUT.$procmux$2300_CMP $auto$opt_reduce.cc:134:opt_pmux$3919 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2523: { $flatten\top_inst.\top.\DUT.$procmux$2279_CMP $auto$opt_reduce.cc:134:opt_pmux$3921 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3027: { $flatten\top_inst.\top.\DUT.$procmux$2293_CMP $auto$opt_reduce.cc:134:opt_pmux$3923 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2775: { $flatten\top_inst.\top.\DUT.$procmux$2286_CMP $auto$opt_reduce.cc:134:opt_pmux$3925 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2307: { $flatten\top_inst.\top.\DUT.$procmux$2273_CMP $auto$opt_reduce.cc:134:opt_pmux$3927 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3315: { $flatten\top_inst.\top.\DUT.$procmux$2301_CMP $auto$opt_reduce.cc:134:opt_pmux$3929 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2559: { $flatten\top_inst.\top.\DUT.$procmux$2280_CMP $auto$opt_reduce.cc:134:opt_pmux$3931 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\write.$procmux$1442: { $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$188_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$189_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$191_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$193_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$195_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$244_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$243_Y $auto$opt_reduce.cc:134:opt_pmux$3933 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3063: { $flatten\top_inst.\top.\DUT.$procmux$2294_CMP $auto$opt_reduce.cc:134:opt_pmux$3935 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2343: { $flatten\top_inst.\top.\DUT.$procmux$2274_CMP $auto$opt_reduce.cc:134:opt_pmux$3937 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2811: { $flatten\top_inst.\top.\DUT.$procmux$2287_CMP $auto$opt_reduce.cc:134:opt_pmux$3939 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 39 changes.

21.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

21.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\top_inst.\top.\DUT.$procdff$3796 ($adff) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 9 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 10 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 11 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 12 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 13 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 14 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 15 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 16 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 17 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 18 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 19 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 20 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 21 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 22 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 23 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 24 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 25 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 26 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 27 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 28 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 29 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 30 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 31 on $flatten\top_inst.\top.\DUT.$procdff$3796 ($dlatch) from module ice40hx8k.

21.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1317 unused wires.
<suppressed ~42 debug messages>

21.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

21.10.9. Rerunning OPT passes. (Maybe there is more to do..)

21.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

21.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\testpc.$procmux$3490: { $flatten\top_inst.\top.\testpc.$procmux$3498_CMP $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$222_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$223_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$224_Y $auto$opt_reduce.cc:134:opt_pmux$3943 $auto$opt_reduce.cc:134:opt_pmux$3941 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

21.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\rram.$procdff$3673 ($adff) from module ice40hx8k.

21.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

21.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

21.10.16. Rerunning OPT passes. (Maybe there is more to do..)

21.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$1521.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$1521.
Removed 2 multiplexer ports.
<suppressed ~101 debug messages>

21.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

21.10.20. Executing OPT_DFF pass (perform DFF optimizations).

21.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

21.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.10.23. Rerunning OPT passes. (Maybe there is more to do..)

21.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

21.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.10.27. Executing OPT_DFF pass (perform DFF optimizations).

21.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.10.30. Finished OPT passes. (There is nothing left to do.)

21.11. Executing FSM pass (extract and optimize FSM).

21.11.1. Executing FSM_DETECT pass (finding FSMs in design).

21.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

21.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

21.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

21.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

21.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

21.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

21.12. Executing OPT pass (performing simple optimizations).

21.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

21.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$3663 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$882_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$3662 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$3661 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$823_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$3659 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$855_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$3658 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$893_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3978 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$891_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\top.\testpc.$procdff$3828 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0], Q = \top_inst.top.testpc.PC).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3755 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[31]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3752 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[30]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3749 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[29]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3746 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[28]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3743 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[27]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3740 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[26]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3737 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[25]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3734 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[24]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3731 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[23]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3728 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[22]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3725 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[21]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3722 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[20]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3719 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[19]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3716 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[18]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3713 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[17]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3710 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[16]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3707 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[15]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3704 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[14]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3701 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[13]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3698 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[12]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3695 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[11]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3692 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[10]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3689 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[9]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3686 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[8]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3683 ($dff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[7]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3680 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[6]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3679 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[5]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3678 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[4]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3677 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[3]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3676 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[2]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3675 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[1]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$3674 ($adff) from module ice40hx8k (D = \top_inst.top.rram.nxt_memory, Q = \top_inst.top.rram.memory[0]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3827 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[31][31:0], Q = \top_inst.top.DUT.register[31]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3826 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[30][31:0], Q = \top_inst.top.DUT.register[30]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3825 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[29][31:0], Q = \top_inst.top.DUT.register[29]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3824 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[28][31:0], Q = \top_inst.top.DUT.register[28]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3823 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[27][31:0], Q = \top_inst.top.DUT.register[27]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3822 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[26][31:0], Q = \top_inst.top.DUT.register[26]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3821 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[25][31:0], Q = \top_inst.top.DUT.register[25]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3820 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[24][31:0], Q = \top_inst.top.DUT.register[24]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3819 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[23][31:0], Q = \top_inst.top.DUT.register[23]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3818 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[22][31:0], Q = \top_inst.top.DUT.register[22]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3817 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[21][31:0], Q = \top_inst.top.DUT.register[21]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3816 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[20][31:0], Q = \top_inst.top.DUT.register[20]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3815 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[19][31:0], Q = \top_inst.top.DUT.register[19]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3814 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[18][31:0], Q = \top_inst.top.DUT.register[18]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3813 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[17][31:0], Q = \top_inst.top.DUT.register[17]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3812 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[16][31:0], Q = \top_inst.top.DUT.register[16]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3811 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[15][31:0], Q = \top_inst.top.DUT.register[15]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3810 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[14][31:0], Q = \top_inst.top.DUT.register[14]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3809 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[13][31:0], Q = \top_inst.top.DUT.register[13]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3808 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[12][31:0], Q = \top_inst.top.DUT.register[12]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3807 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[11][31:0], Q = \top_inst.top.DUT.register[11]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3806 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[10][31:0], Q = \top_inst.top.DUT.register[10]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3805 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[9][31:0], Q = \top_inst.top.DUT.register[9]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3804 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[8][31:0], Q = \top_inst.top.DUT.register[8]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3803 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[7][31:0], Q = \top_inst.top.DUT.register[7]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3802 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[6][31:0], Q = \top_inst.top.DUT.register[6]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3801 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[5][31:0], Q = \top_inst.top.DUT.register[5]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3800 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[4][31:0], Q = \top_inst.top.DUT.register[4]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3799 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[3][31:0], Q = \top_inst.top.DUT.register[3]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3798 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[2][31:0], Q = \top_inst.top.DUT.register[2]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$3797 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[1][31:0], Q = \top_inst.top.DUT.register[1]).

21.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 94 unused cells and 94 unused wires.
<suppressed ~127 debug messages>

21.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~35 debug messages>

21.12.9. Rerunning OPT passes. (Maybe there is more to do..)

21.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

21.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2271: $flatten\top_inst.\top.\DUT.$procmux$2272_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2307: $flatten\top_inst.\top.\DUT.$procmux$2273_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2343: $flatten\top_inst.\top.\DUT.$procmux$2274_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2379: $flatten\top_inst.\top.\DUT.$procmux$2275_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2415: $flatten\top_inst.\top.\DUT.$procmux$2276_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2451: $flatten\top_inst.\top.\DUT.$procmux$2277_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2487: $flatten\top_inst.\top.\DUT.$procmux$2278_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2523: $flatten\top_inst.\top.\DUT.$procmux$2279_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2559: $flatten\top_inst.\top.\DUT.$procmux$2280_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2595: $flatten\top_inst.\top.\DUT.$procmux$2281_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2631: $flatten\top_inst.\top.\DUT.$procmux$2282_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2667: $flatten\top_inst.\top.\DUT.$procmux$2283_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2703: $flatten\top_inst.\top.\DUT.$procmux$2284_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2739: $flatten\top_inst.\top.\DUT.$procmux$2285_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2775: $flatten\top_inst.\top.\DUT.$procmux$2286_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2811: $flatten\top_inst.\top.\DUT.$procmux$2287_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2847: $flatten\top_inst.\top.\DUT.$procmux$2288_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2883: $flatten\top_inst.\top.\DUT.$procmux$2289_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2919: $flatten\top_inst.\top.\DUT.$procmux$2290_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2955: $flatten\top_inst.\top.\DUT.$procmux$2291_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2991: $flatten\top_inst.\top.\DUT.$procmux$2292_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3027: $flatten\top_inst.\top.\DUT.$procmux$2293_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3063: $flatten\top_inst.\top.\DUT.$procmux$2294_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3099: $flatten\top_inst.\top.\DUT.$procmux$2295_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3135: $flatten\top_inst.\top.\DUT.$procmux$2296_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3171: $flatten\top_inst.\top.\DUT.$procmux$2297_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3207: $flatten\top_inst.\top.\DUT.$procmux$2298_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3243: $flatten\top_inst.\top.\DUT.$procmux$2299_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3279: $flatten\top_inst.\top.\DUT.$procmux$2300_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3315: $flatten\top_inst.\top.\DUT.$procmux$2301_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3351: $flatten\top_inst.\top.\DUT.$procmux$2302_CMP
  Optimizing cells in module \ice40hx8k.
Performed a total of 31 changes.

21.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

21.12.13. Executing OPT_DFF pass (perform DFF optimizations).

21.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

21.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.12.16. Rerunning OPT passes. (Maybe there is more to do..)

21.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

21.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.12.20. Executing OPT_DFF pass (perform DFF optimizations).

21.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.12.23. Finished OPT passes. (There is nothing left to do.)

21.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$760 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$764 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$754 ($gt).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1065_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1066_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1068_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1069_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1070_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1071_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1065_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1066_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1068_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1069_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1070_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1071_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1065_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1066_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1068_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1069_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1070_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1071_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1065_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1066_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1068_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1069_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1070_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1071_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$222 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1177_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1162_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1123_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1112_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1102_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1093_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1082 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1078_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1075 ($mux).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2302_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2301_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2300_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2299_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2298_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2297_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2296_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2295_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2294_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2293_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2292_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2291_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2290_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2289_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2288_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2232_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2231_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2230_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2229_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2228_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2227_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2226_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2225_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2224_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2223_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2222_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2221_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2220_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2219_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2218_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2199_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2198_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2197_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2196_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2195_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2194_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2193_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2192_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2191_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2190_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2189_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2188_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2187_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2186_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$2185_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1374_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1373_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1350_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1337_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1292_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1287 ($mux).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1268_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1267_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1263_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1254 ($mux).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1239 ($mux).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1221_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1216 ($mux).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$procmux$3498_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
Removed top 5 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$244 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$241 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$239 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$237 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$235 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$234 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$232 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$230 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$226 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$224 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$223 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$3604 ($mux).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$188 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$189 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$191 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$193 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$195 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$197 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$198 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$200 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1513_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1512_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1511_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1510_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1509_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1508_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1507_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1506_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1505_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1504_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1503_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1502_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1501_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1500_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1499_CMP0 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$3571 ($mux).
Removed top 25 bits (of 32) from FF cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procdff$3829 ($adff).
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$2\ALUResult[31:0].
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$3\ALUResult[31:0].
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$5\aluOP[3:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$6\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$8\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$9\cuOP[5:0].
Removed top 25 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$2\ramaddr[31:0].
Removed top 1 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$3\imemload[31:0].
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755_Y.

21.14. Executing PEEPOPT pass (run peephole optimizers).

21.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

21.16. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ice40hx8k that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$sshr$src/alu.sv:37$258 ($sshr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3941 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$223_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$224_Y $flatten\top_inst.\top.\arith.$procmux$1162_CMP $auto$opt_reduce.cc:134:opt_pmux$3943 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shr$src/alu.sv:45$260 ($shr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3941 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$223_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$224_Y $flatten\top_inst.\top.\arith.$procmux$1148_CMP $auto$opt_reduce.cc:134:opt_pmux$3943 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shl$src/alu.sv:29$256 ($shl):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3941 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$223_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$224_Y $flatten\top_inst.\top.\arith.$procmux$1177_CMP $auto$opt_reduce.cc:134:opt_pmux$3943 }.
    No candidates found.

21.17. Executing TECHMAP pass (map to technology primitives).

21.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

21.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

21.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

21.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$262 ($add).
  creating $macc model for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$264 ($sub).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
  creating $macc model for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$247 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761.
  creating $alu model for $macc $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$247.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$264.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$262.
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$273 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$272 ($lt): new $alu
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$754 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$754: $auto$alumacc.cc:485:replace_alu$4284
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$272: $auto$alumacc.cc:485:replace_alu$4289
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$273: $auto$alumacc.cc:485:replace_alu$4302
  creating $alu cell for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$262: $auto$alumacc.cc:485:replace_alu$4313
  creating $alu cell for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$264: $auto$alumacc.cc:485:replace_alu$4316
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37: $auto$alumacc.cc:485:replace_alu$4319
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39: $auto$alumacc.cc:485:replace_alu$4322
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42: $auto$alumacc.cc:485:replace_alu$4325
  creating $alu cell for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$247: $auto$alumacc.cc:485:replace_alu$4328
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$761: $auto$alumacc.cc:485:replace_alu$4331
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$755: $auto$alumacc.cc:485:replace_alu$4334
  created 11 $alu and 0 $macc cells.

21.21. Executing OPT pass (performing simple optimizations).

21.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5 debug messages>

21.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

21.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\arith.$procmux$1191: { $flatten\top_inst.\top.\arith.$procmux$1177_CMP $flatten\top_inst.\top.\arith.$procmux$1162_CMP $flatten\top_inst.\top.\arith.$procmux$1148_CMP $flatten\top_inst.\top.\arith.$procmux$1135_CMP $flatten\top_inst.\top.\arith.$procmux$1123_CMP $flatten\top_inst.\top.\arith.$procmux$1112_CMP $flatten\top_inst.\top.\arith.$procmux$1102_CMP $flatten\top_inst.\top.\arith.$procmux$1093_CMP }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

21.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

21.21.6. Executing OPT_DFF pass (perform DFF optimizations).

21.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

21.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.21.9. Rerunning OPT passes. (Maybe there is more to do..)

21.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

21.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.21.13. Executing OPT_DFF pass (perform DFF optimizations).

21.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.21.16. Finished OPT passes. (There is nothing left to do.)

21.22. Executing MEMORY pass.

21.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

21.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

21.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

21.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

21.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

21.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

21.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

21.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

21.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).

21.25. Executing TECHMAP pass (map to technology primitives).

21.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

21.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

21.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

21.26. Executing ICE40_BRAMINIT pass.

21.27. Executing OPT pass (performing simple optimizations).

21.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~124 debug messages>

21.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

21.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$3834 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$3944 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$877_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Adding SRST signal on $auto$ff.cc:266:slice$3960 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$818_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$3969 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$850_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3980 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [0], Q = \top_inst.top.testpc.PC [0]).
Adding EN signal on $auto$ff.cc:266:slice$3980 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [1], Q = \top_inst.top.testpc.PC [1]).
Setting constant 0-bit at position 0 on $procdff$3834 ($dlatch) from module ice40hx8k.

21.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 11 unused cells and 70 unused wires.
<suppressed ~17 debug messages>

21.27.5. Rerunning OPT passes. (Removed registers in this run.)

21.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

21.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

21.27.8. Executing OPT_DFF pass (perform DFF optimizations).

21.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

21.27.10. Finished fast OPT passes.

21.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

21.29. Executing OPT pass (performing simple optimizations).

21.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

21.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\controller.$procmux$1224:
      Old ports: A=4'0110, B=4'1001, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0]
      New ports: A=2'10, B=2'01, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1:0]
      New connections: $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [3:2] = { $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [0] $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1] }
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1261:
      Old ports: A={ 5'01110 $auto$wreduce.cc:461:run$4270 [0] }, B={ 41'01111110000010000110010010010101111010001 $auto$wreduce.cc:461:run$4271 [0] }, Y=$flatten\top_inst.\top.\controller.$7\cuOP[5:0]
      New ports: A={ 4'0110 $auto$wreduce.cc:461:run$4270 [0] }, B={ 34'0111110000100011010010101011101001 $auto$wreduce.cc:461:run$4271 [0] }, Y={ $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [4] = $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1304:
      Old ports: A=6'010010, B={ 41'01001101010001011001011101100001100101101 $auto$wreduce.cc:461:run$4271 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0]
      New ports: A=4'0010, B={ 27'001101000110011110001001101 $auto$wreduce.cc:461:run$4271 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0] [3:0]
      New connections: $flatten\top_inst.\top.\controller.$5\cuOP[5:0] [5:4] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1332:
      Old ports: A=6'100110, B=18'001111010000010001, Y=$flatten\top_inst.\top.\controller.$4\cuOP[5:0]
      New ports: A=5'10010, B=15'001110100001001, Y={ $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [5:3] $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1:0] }
      New connections: $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [2] = $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1343:
      Old ports: A=6'100110, B=30'001010001011001100001101001110, Y=$flatten\top_inst.\top.\controller.$3\cuOP[5:0]
      New ports: A=5'10110, B=25'0101001011011000110101110, Y={ $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1357:
      Old ports: A=6'100110, B=36'000100000101000110000111001000001001, Y=$flatten\top_inst.\top.\controller.$2\cuOP[5:0]
      New ports: A=5'10110, B=30'001000010100110001110100001001, Y={ $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1453:
      Old ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm 12'000000000000 }, Y=$flatten\top_inst.\top.\signex.$4\immOut[31:0]
      New ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm [19:12] \top_inst.top.signex.imm [10:0] 12'000000000000 }, Y={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$4\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y
      New ports: A=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$834:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$834_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1465:
      Old ports: A=$flatten\top_inst.\top.\signex.$4\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y=$flatten\top_inst.\top.\signex.$3\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$3\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$839:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$834_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$839_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$834_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$839_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1474:
      Old ports: A=$flatten\top_inst.\top.\signex.$3\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y=$flatten\top_inst.\top.\signex.$2\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y={ $flatten\top_inst.\top.\signex.$2\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$2\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$2\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
  Optimizing cells in module \ice40hx8k.
Performed a total of 15 changes.

21.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.29.6. Executing OPT_DFF pass (perform DFF optimizations).

21.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.29.9. Rerunning OPT passes. (Maybe there is more to do..)

21.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

21.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$3953 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:461:run$4277 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

21.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.29.16. Rerunning OPT passes. (Maybe there is more to do..)

21.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

21.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.29.20. Executing OPT_DFF pass (perform DFF optimizations).

21.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.29.23. Finished OPT passes. (There is nothing left to do.)

21.30. Executing ICE40_WRAPCARRY pass (wrap carries).

21.31. Executing TECHMAP pass (map to technology primitives).

21.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

21.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

21.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c83925f608704c3fa34790ddcfce9302bdcd7533\_90_pmux for cells of type $pmux.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$ccbcf9cf459c8d68b04688a9a5245ee9d295a0be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$b8fb36dbb218c8f6b30171c756a8f8357614d906\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$104d3d1e82b09b030a785dad8a5e608a6d4401f7\_90_pmux for cells of type $pmux.
Using template $paramod$aa21a8cfcdb2d038c61c16c25c37cdf209d597be\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$8e2cd9e836d46c40867c8d0d57053a4e1c3bcdbc\_90_pmux for cells of type $pmux.
Using template $paramod$77db613179eb70c5e4e5c5aca72d602a7c6017b6\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$ae63dc3b50d8e8327f3f28c91126b1f0b8c3a12c\_90_pmux for cells of type $pmux.
Using template $paramod$a2dfbfccaf255934df30ecabbf39af44cb16e7a1\_90_pmux for cells of type $pmux.
Using template $paramod$d7d291546b4dfc9bc743ff469017e2c721a2385d\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_80_ice40_alu for cells of type $alu.
Using template $paramod$bf8e268f26361094a16ad6650df0ad1ca719658a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~2831 debug messages>

21.32. Executing OPT pass (performing simple optimizations).

21.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2966 debug messages>

21.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~7119 debug messages>
Removed a total of 2373 cells.

21.32.3. Executing OPT_DFF pass (perform DFF optimizations).

21.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 200 unused cells and 3151 unused wires.
<suppressed ~201 debug messages>

21.32.5. Finished fast OPT passes.

21.33. Executing ICE40_OPT pass (performing simple optimizations).

21.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$4284.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4284.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$4325.slice[0].carry: CO=\top_inst.top.testpc.PC [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$4331.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$4334.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

21.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~18 debug messages>

21.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.33.4. Executing OPT_DFF pass (perform DFF optimizations).

21.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

21.33.6. Rerunning OPT passes. (Removed registers in this run.)

21.33.7. Running ICE40 specific optimizations.

21.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.33.10. Executing OPT_DFF pass (perform DFF optimizations).

21.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.33.12. Finished OPT passes. (There is nothing left to do.)

21.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

21.35. Executing TECHMAP pass (map to technology primitives).

21.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

21.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
No more expansions possible.
<suppressed ~2174 debug messages>

21.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$4325.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$4331.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$4334.slice[0].carry ($lut).

21.38. Executing ICE40_OPT pass (performing simple optimizations).

21.38.1. Running ICE40 specific optimizations.

21.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~269 debug messages>

21.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~789 debug messages>
Removed a total of 263 cells.

21.38.4. Executing OPT_DFF pass (perform DFF optimizations).

21.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 12299 unused wires.
<suppressed ~1 debug messages>

21.38.6. Rerunning OPT passes. (Removed registers in this run.)

21.38.7. Running ICE40 specific optimizations.

21.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.38.10. Executing OPT_DFF pass (perform DFF optimizations).

21.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.38.12. Finished OPT passes. (There is nothing left to do.)

21.39. Executing TECHMAP pass (map to technology primitives).

21.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

21.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

21.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

21.41. Executing ABC9 pass.

21.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ice40hx8k.
Found 0 SCCs.

21.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.5. Executing PROC pass (convert processes to netlists).

21.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

21.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

21.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

21.41.5.4. Executing PROC_INIT pass (extract init attributes).

21.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

21.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

21.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

21.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

21.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

21.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

21.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

21.41.5.12. Executing OPT_EXPR pass (perform const folding).

21.41.6. Executing TECHMAP pass (map to technology primitives).

21.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

21.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~129 debug messages>

21.41.7. Executing OPT pass (performing simple optimizations).

21.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFR.
Optimizing module SB_DFFES.
Optimizing module SB_DFFER.

21.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFER'.
Removed a total of 0 cells.

21.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

21.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFR.
  Optimizing cells in module \SB_DFFES.
  Optimizing cells in module \SB_DFFER.
Performed a total of 0 changes.

21.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFER'.
Removed a total of 0 cells.

21.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

21.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFR..
Finding unused cells or wires in module \SB_DFFES..
Finding unused cells or wires in module \SB_DFFER..

21.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

21.41.7.9. Finished OPT passes. (There is nothing left to do.)

21.41.8. Executing TECHMAP pass (map to technology primitives).

21.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

21.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFES for cells of type SB_DFFES.
Using template SB_DFFR for cells of type SB_DFFR.
No more expansions possible.
<suppressed ~1324 debug messages>

21.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

21.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~854 debug messages>

21.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

21.41.13. Executing TECHMAP pass (map to technology primitives).

21.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

21.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~150 debug messages>

21.41.14. Executing OPT pass (performing simple optimizations).

21.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

21.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

21.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

21.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

21.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

21.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

21.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

21.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

21.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

21.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

21.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

21.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

21.41.14.16. Finished OPT passes. (There is nothing left to do.)

21.41.15. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

21.41.16. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 5769 cells with 26064 new cells, skipped 9094 cells.
  replaced 3 cell types:
    4773 $_OR_
      66 $_XOR_
     930 $_MUX_
  not replaced 16 cell types:
      21 $scopeinfo
     435 $_NOT_
    4035 $_AND_
       1 SB_PLL40_CORE
     814 SB_DFFE
      71 SB_DFFR
      15 SB_DFFESR
    1179 SB_DFFER
       4 SB_DFFESS
      69 SB_DFFES
     833 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
     279 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
      19 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
    1179 SB_DFFER_$abc9_byp
      69 SB_DFFES_$abc9_byp
      71 SB_DFFR_$abc9_byp

21.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

21.41.16.3. Executing XAIGER backend.
<suppressed ~2163 debug messages>
Extracted 11796 AND gates and 35774 wires from module `ice40hx8k' to a netlist network with 2176 inputs and 1175 outputs.

21.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

21.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1175  and =   11277  lev =   77 (6.61)  mem = 0.30 MB  box = 2450  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1175  and =   17315  lev =   57 (4.82)  mem = 0.36 MB  ch = 1070  box = 2418  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   17315.  Ch =   897.  Total mem =    3.85 MB. Peak cut mem =    0.19 MB.
ABC: P:  Del = 17421.00.  Ar =    6426.0.  Edge =    24019.  Cut =   114816.  T =     0.02 sec
ABC: P:  Del = 17393.00.  Ar =    5915.0.  Edge =    23324.  Cut =   110631.  T =     0.02 sec
ABC: P:  Del = 17393.00.  Ar =    4859.0.  Edge =    15483.  Cut =   118978.  T =     0.02 sec
ABC: F:  Del = 17393.00.  Ar =    4049.0.  Edge =    14179.  Cut =    91251.  T =     0.01 sec
ABC: A:  Del = 17393.00.  Ar =    3806.0.  Edge =    13510.  Cut =    89068.  T =     0.03 sec
ABC: A:  Del = 17393.00.  Ar =    3774.0.  Edge =    13458.  Cut =    89553.  T =     0.03 sec
ABC: Total time =     0.12 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   2176/   1175  and =   10253  lev =   61 (4.96)  mem = 0.28 MB  box = 2418  bb = 2171
ABC: Mapping (K=4)  :  lut =   3740  edge =   13336  lev =   28 (2.52)  levB =   54  mem = 0.16 MB
ABC: LUT = 3740 : 2=503 13.4 %  3=618 16.5 %  4=2619 70.0 %  Ave = 3.57
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 4.80 seconds, total: 4.80 seconds

21.41.16.6. Executing AIGER frontend.
<suppressed ~6746 debug messages>
Removed 12218 unused cells and 22940 unused wires.

21.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     3761
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      247
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:     1179
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:       69
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:       71
ABC RESULTS:           input signals:     1352
ABC RESULTS:          output signals:      942
Removing temp directory.

21.41.17. Executing TECHMAP pass (map to technology primitives).

21.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

21.41.17.2. Continuing TECHMAP pass.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
No more expansions possible.
<suppressed ~1575 debug messages>

21.42. Executing ICE40_WRAPCARRY pass (wrap carries).

21.43. Executing TECHMAP pass (map to technology primitives).

21.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

21.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 153 unused cells and 49626 unused wires.

21.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4062
  1-LUT               21
  2-LUT              507
  3-LUT              872
  4-LUT             2662
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Eliminating LUTs.
Number of LUTs:     4062
  1-LUT               21
  2-LUT              507
  3-LUT              872
  4-LUT             2662
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Combining LUTs.
Number of LUTs:     4059
  1-LUT               21
  2-LUT              505
  3-LUT              868
  4-LUT             2665
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Eliminated 0 LUTs.
Combined 3 LUTs.
<suppressed ~27514 debug messages>

21.45. Executing TECHMAP pass (map to technology primitives).

21.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

21.45.2. Continuing TECHMAP pass.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$6b7c9c56fc2a32a479d463d5f3b0d3f4673b67f1\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$bfdb610ade4e2c5ba72a4b13dceaa15c26ff149f\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$52d96bfa17866bab828b9f1286c638d27fce0ef0\$lut for cells of type $lut.
Using template $paramod$35747c4193cc59c2095f0a415365bd2a443730a2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$a47ab8a9401965088c690edab226b5e61dd268e6\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$06e62c2045624c211a1abe4f2f36c8f22c688165\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$077caa0fe67e147edfc4c4dc820ac55adfc6d436\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$23da582b86241546eace0c8bedadb42614eea4c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$02750f8d568bd99efbda01449a05e084a3143ca8\$lut for cells of type $lut.
Using template $paramod$2f17e1be43f3ac07ddcc5afec3b8e6a34320bd15\$lut for cells of type $lut.
Using template $paramod$b1680225cc6a5792caa95f54b8b3218fae21705d\$lut for cells of type $lut.
Using template $paramod$35369ee2661bc6f22afa7fd33e082ebba93672ba\$lut for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$1bb2fc47b457abe7e28b98cfa3441b6432237f90\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$d7856980c8e3df62f97c26ab34037f33a9e831b5\$lut for cells of type $lut.
Using template $paramod$6f4aaf68b847f2ed1b73dd57525b99932e3429ca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod$e57bcb018bfe8170bc04f13a73befe2def28cdf3\$lut for cells of type $lut.
Using template $paramod$219b71aec9a19e7a27754ed85a7d6cdad9e5ec96\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod$e134ec2a47a2462a591072e65d34fb15b81c90e0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$af01034afe1bdbc87587d263805971d96e724ed7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$f58e0d90afc57a738914697b6a4a7319b30d7e7e\$lut for cells of type $lut.
Using template $paramod$e5bf0d84da9b26dd4caa7cb2fdb1051d329babbf\$lut for cells of type $lut.
Using template $paramod$6a3d1b4c6389888034ca851571f0d03f46d1c4e9\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$67466b505da1975e2a1547093cb7ee5015f8d246\$lut for cells of type $lut.
Using template $paramod$7d813eb49700f971f2635a434700eafdfa816bc3\$lut for cells of type $lut.
Using template $paramod$d4d942387118c2fa50588da69db54aa7d7cb23bd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$c8c9645d6f378ad67688dabef3c0249a9ff7abd9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod$9e394303e290a474880b56f98766417009256d93\$lut for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$c217e185eb8e6463ca272982ba8c5940fa90d81f\$lut for cells of type $lut.
Using template $paramod$af0c0e3aea5daa768aac0697b02a2a49301800b1\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod$09deb89cf77b6e37f6ed7fef8d797dc05c0b2eee\$lut for cells of type $lut.
Using template $paramod$e197e162644f13ba3d6def1b385f7543969ee569\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$6230fc65e505974efa1d13185cee71d403050828\$lut for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$9225a1e7171a31391d3103e59bac04fd4b7aa6c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$26e862e6918c1caa0916e8dba224f80a9e1c845f\$lut for cells of type $lut.
Using template $paramod$a7c07944e10969b2e1fd563a5b72f89493cb3705\$lut for cells of type $lut.
Using template $paramod$5502a85110dbca29ac631107f0b0635e7fade476\$lut for cells of type $lut.
Using template $paramod$6d937d8a77a6356f2f9cc89d5646fb948bb8225e\$lut for cells of type $lut.
Using template $paramod$2f35f125a78690286f0cd2faecbaee9c64828b65\$lut for cells of type $lut.
Using template $paramod$068092ddede495d8462ffe530e6d91711913edbc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$a7d9b4ab0321c8125e5b895183ee6b84cdb4a31b\$lut for cells of type $lut.
Using template $paramod$3331a91b4e24483a258fc0d47474cffbd93ab577\$lut for cells of type $lut.
Using template $paramod$db08fd84fb3c4d6a41eaec6adfffe445fb7eb17f\$lut for cells of type $lut.
Using template $paramod$c685a6e5e211287be351ac5f1078c1501564ce89\$lut for cells of type $lut.
Using template $paramod$f6205ea4d16154fcc0de4d21dff0bd55a57f1ba0\$lut for cells of type $lut.
Using template $paramod$e3232e0a90c8340ac10328f8e4e3ccd56fa7779b\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$338ce46cf7ff44b9974887dd2adee6c4e0530bed\$lut for cells of type $lut.
Using template $paramod$02fbe8c67d33eabc42a06d471f5fbd85b121dbcc\$lut for cells of type $lut.
Using template $paramod$28c616faf5f033f157ae11b466e19ab28d454f1e\$lut for cells of type $lut.
Using template $paramod$4a8554d0a765102353ca9705f6a3cc329f4379e7\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod$22dec7e8c4f4b1c3e62879fa2207e0c39047bbd3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$e56ed438824ef045f2f10081792331cde7187198\$lut for cells of type $lut.
Using template $paramod$84abafac600770dbecbd08e858f90b0a8d019d50\$lut for cells of type $lut.
Using template $paramod$77c2a0573790d304ab2299da6d598e8d2e184867\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$250e9ed6c15020113b6b30a5ef7c8f11f208ca8e\$lut for cells of type $lut.
Using template $paramod$6a9b42dd2737c91073e6a695b8ac858c4a8587d7\$lut for cells of type $lut.
Using template $paramod$4bb876346cbc5d13aef9f873277f12d388c5d51a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod$bacdb2105cbfbe75cfbcc2fb021fd3aba864526b\$lut for cells of type $lut.
Using template $paramod$169e3ff199948acb6289d60ee69a6cbdb1d4057e\$lut for cells of type $lut.
Using template $paramod$b1c1fcc81573437ec158d7c629938862148f7151\$lut for cells of type $lut.
Using template $paramod$d646cd5cb36fb1f9dd2b06f584b3b88b2dec1d24\$lut for cells of type $lut.
Using template $paramod$e4b832d686d12318ec0715f027fe549b42e45c20\$lut for cells of type $lut.
Using template $paramod$5a490b0e00aeb3aa961ff44c01138435d4948c4d\$lut for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$e5687d9cc558cf817440488fc74dc272c811b152\$lut for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod$3ae9f1cda205b669870c653a21d45eee50078e98\$lut for cells of type $lut.
Using template $paramod$181733d3e31dcdcea8c52d0a4fc252b3aa453564\$lut for cells of type $lut.
Using template $paramod$9f6bc32305fc769fa11e4327bee073e3fbe84018\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110100 for cells of type $lut.
Using template $paramod$3e8d0aa900463bbdc955d11c0603f5479307c386\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$d21d214a5aa271f2d9da3f90f22432c0ecee130f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$f87bcf1791971b4eaa30f3f28437044fef878a04\$lut for cells of type $lut.
Using template $paramod$7e7a45ecf908ab2677a0acafe509793e4d416d67\$lut for cells of type $lut.
Using template $paramod$8cac5452d526045503c5864c3a1dac0121c7053e\$lut for cells of type $lut.
Using template $paramod$4b815e6c998e04ad0d0242e44b0c58a7a9d0b3b6\$lut for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$e277a522d8a930c8c8c8cdb56d33d42914aefec4\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod$39825c5ed3d135e502be79829033166f1762d78b\$lut for cells of type $lut.
Using template $paramod$7c1f6afe503c0a9d86df3082e3bb8088dcf2d22b\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod$f4a3a178517fafda472076974fa578556c6eda11\$lut for cells of type $lut.
Using template $paramod$8384e66d408d22ab39dfb451efb7879731befeb8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$66658cbed86a8310f9b7ba1190d35eff90ee749b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$4541c098116f7292d10d7d30a0922be20fa68a41\$lut for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$5f496f7a17b34803c6c54860f8e4d6216cf793ef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$b2a3e83d3d676c54f393090154e32935aea147d1\$lut for cells of type $lut.
Using template $paramod$960b4271c8042b88f5852a4a391568b02eee5e34\$lut for cells of type $lut.
Using template $paramod$326c2fc283a7360e9e01c763660cc5ca90f79ca6\$lut for cells of type $lut.
Using template $paramod$3ecb997b2db354fbf1571a0a691e11af71935531\$lut for cells of type $lut.
Using template $paramod$386cf08f680cb3ab0ba2805866085278828ff264\$lut for cells of type $lut.
Using template $paramod$9f1c552f96b6e6f007b69c5b267b2c79c16f4e58\$lut for cells of type $lut.
Using template $paramod$35d201d5d13b0689930fb454a340191997b0e867\$lut for cells of type $lut.
Using template $paramod$5321e04f7ce32c091123c3570ab562efb1c81402\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$cdc5bba2585477f1744fd1f869bebc8beb23d707\$lut for cells of type $lut.
Using template $paramod$fda6887b37f599177ed9cb69271d882b63df7e66\$lut for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$23c406d3302544ed79a645df17e697e360ff2a8d\$lut for cells of type $lut.
Using template $paramod$ea79e410ad0f4fc3326666c891e1f3992816d636\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod$809e4f306da46522039076103556a5f81b7e0928\$lut for cells of type $lut.
Using template $paramod$0771f43be39b9c54ef7c24c6f1e9f5c46fb320f7\$lut for cells of type $lut.
Using template $paramod$e2ad375dd3349ce9179d4a7f0523cdf60b12cefd\$lut for cells of type $lut.
Using template $paramod$8505085f155bd6c188b05e36b7ab496c27f32cbb\$lut for cells of type $lut.
Using template $paramod$1d029b00755c736bd0aecd6780e981248e8fafe8\$lut for cells of type $lut.
Using template $paramod$bf07b45df98deb85b9934d5e9f1f7e2bcd3411d6\$lut for cells of type $lut.
Using template $paramod$2a6814f63525c562c4d2a8064801a4b4ca555ab4\$lut for cells of type $lut.
Using template $paramod$d38351bfadeaa0c68784e572d5c937c2a6848194\$lut for cells of type $lut.
Using template $paramod$432f26b811c14bf54c5e87c8670ec65cbcaf38ac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod$769bdbbde83614df0f4ab5f54e777ded51bb10ce\$lut for cells of type $lut.
Using template $paramod$9506ecf18c91672f3dae4008b6ad1f2863e8019f\$lut for cells of type $lut.
Using template $paramod$fcff9a7b1687e357a40264efcefe8443c8b2971a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$9dd298ae76fb41ac94779a83c068607fbc09ce4f\$lut for cells of type $lut.
Using template $paramod$833582361e14b3ee2e66ad676022ab35d7aa7e28\$lut for cells of type $lut.
Using template $paramod$676e4e60fc871d6408a38b7075a7492c619193e8\$lut for cells of type $lut.
Using template $paramod$2c0b31a68dd1042cab3d89a5739575f612aebef5\$lut for cells of type $lut.
Using template $paramod$2810ddd0789ca93e4086ed4a7af86ecda961198e\$lut for cells of type $lut.
Using template $paramod$c5aff53b80afef72690f7d67cb0ffd15b27c9093\$lut for cells of type $lut.
Using template $paramod$ae7fde25368e507d7585ddc2c2490c9e2f4ff1d4\$lut for cells of type $lut.
Using template $paramod$6963253509465594b5c8e8deb6550bb0f6057c8e\$lut for cells of type $lut.
Using template $paramod$7ab11b76d0f464a34dfe13b6a544798d9a5a8276\$lut for cells of type $lut.
Using template $paramod$3258fabf91107b4a007ae89b2246a16c31e8ae28\$lut for cells of type $lut.
Using template $paramod$4c3952df7776be69cf592c89df2c49aee6a0eb14\$lut for cells of type $lut.
Using template $paramod$aab54572d5ffecd31253b36e73e9cb718d05be34\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$e412821338883e25f2e0d1a1d7fada158db69807\$lut for cells of type $lut.
Using template $paramod$629288805861db2492386648ff94cc9e61d6fd7b\$lut for cells of type $lut.
Using template $paramod$f5c23b297b0a8ca096118d63d2c74ddd6cbea134\$lut for cells of type $lut.
Using template $paramod$214ce2dbb78cda81e40f1a936faa64a685be5a87\$lut for cells of type $lut.
Using template $paramod$7f8dcbbcc0931c3398304053d9bb53ce1acb1b1f\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$4fd3428c4b8b1accf8f8fb4bb88555a2b5fa688d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111101 for cells of type $lut.
Using template $paramod$b69ed7a5b6f8c0acc3913ae9c1063a5bfac099c2\$lut for cells of type $lut.
Using template $paramod$8e62b61e89c767f8bd613473dfffc9758798236d\$lut for cells of type $lut.
Using template $paramod$37603d5ddacfd62e4a7dfccd843adfa04164d116\$lut for cells of type $lut.
Using template $paramod$49440b44734ae4b232b4190e5079b9ccfb2ccbe5\$lut for cells of type $lut.
Using template $paramod$33a80753817c3d56e425f2c95f06e21cf48b15f0\$lut for cells of type $lut.
Using template $paramod$92745e1b6783bf0e15fd731759edc9721473a05f\$lut for cells of type $lut.
Using template $paramod$bcf27710767a137c49eeae721ef7387da0ca0866\$lut for cells of type $lut.
Using template $paramod$a28ce2d87a31795d503a487c3b9f9c391085d1bf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$0331e023d83b8009e60defb446ce9fa640b122c7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$1644affdabe7f65febd25ca1c4d1e050be54e54f\$lut for cells of type $lut.
Using template $paramod$675de7bc26f5fd6e313b49472a6d2b01e32ece41\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7494 debug messages>
Removed 0 unused cells and 10881 unused wires.

21.46. Executing AUTONAME pass.
Renamed 520848 objects in module ice40hx8k (284 iterations).
<suppressed ~9109 debug messages>

21.47. Executing HIERARCHY pass (managing design hierarchy).

21.47.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

21.47.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

21.48. Printing statistics.

=== ice40hx8k ===

   Number of wires:               2876
   Number of wire bits:          11886
   Number of public wires:        2876
   Number of public wire bits:   11886
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6472
     $scopeinfo                     21
     SB_CARRY                      239
     SB_DFFE                       814
     SB_DFFER                     1179
     SB_DFFES                       69
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        71
     SB_LUT4                      4059
     SB_PLL40_CORE                   1

21.49. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

21.50. Executing JSON backend.

Warnings: 71 unique messages, 71 total
End of script. Logfile hash: fb7f6b75b4, CPU: user 5.86s system 0.04s, MEM: 175.10 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 45% 1x abc9_exe (4 sec), 11% 39x opt_expr (1 sec), ...
