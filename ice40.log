
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv src/top.sv src/top1.sv src/memory_control.sv src/mux.sv src/pc.sv src/register_file.sv src/request_unit.sv src/request.sv src/ru_ram.sv src/signExtender.sv src/writeToReg.sv src/control.sv src/alu.sv src/ssdec.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/top.sv
Parsing SystemVerilog input from `src/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/top1.sv
Parsing SystemVerilog input from `src/top1.sv' to AST representation.
Generating RTLIL representation for module `\top1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/memory_control.sv
Parsing SystemVerilog input from `src/memory_control.sv' to AST representation.
Generating RTLIL representation for module `\memory_control'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/mux.sv
Parsing SystemVerilog input from `src/mux.sv' to AST representation.
Generating RTLIL representation for module `\mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/pc.sv
Parsing SystemVerilog input from `src/pc.sv' to AST representation.
Generating RTLIL representation for module `\pc'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/register_file.sv
Parsing SystemVerilog input from `src/register_file.sv' to AST representation.
Generating RTLIL representation for module `\register_file'.
Warning: Replacing memory \nxt_register with list of registers. See src/register_file.sv:60
Warning: Replacing memory \register with list of registers. See src/register_file.sv:47
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/request_unit.sv
Parsing SystemVerilog input from `src/request_unit.sv' to AST representation.
Generating RTLIL representation for module `\request_unit'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/request.sv
Parsing SystemVerilog input from `src/request.sv' to AST representation.
Generating RTLIL representation for module `\request'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/ru_ram.sv
Parsing SystemVerilog input from `src/ru_ram.sv' to AST representation.
Generating RTLIL representation for module `\ru_ram'.
Warning: Replacing memory \nxt_memory with list of registers. See src/ru_ram.sv:31
Warning: Replacing memory \memory with list of registers. See src/ru_ram.sv:0
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/signExtender.sv
Parsing SystemVerilog input from `src/signExtender.sv' to AST representation.
Generating RTLIL representation for module `\signExtender'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/writeToReg.sv
Parsing SystemVerilog input from `src/writeToReg.sv' to AST representation.
Generating RTLIL representation for module `\writeToReg'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/control.sv
Parsing SystemVerilog input from `src/control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/alu.sv
Parsing SystemVerilog input from `src/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/ssdec.sv
Parsing SystemVerilog input from `src/ssdec.sv' to AST representation.
Generating RTLIL representation for module `\ssdec'.
Warning: Replacing memory \seg7 with list of registers. See src/ssdec.sv:9
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

19.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

19.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

19.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

19.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\memory_control.$proc$src/memory_control.sv:0$27'.
Cleaned up 1 empty switch.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$545 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$534 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$531 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$528 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$525 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$522 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$507 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$496 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$493 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$490 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$487 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$484 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$720 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$692 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$src/ssdec.sv:0$261 in module ssdec.
Marked 1 switch rules as full_case in process $proc$src/ssdec.sv:0$261 in module ssdec.
Marked 11 switch rules as full_case in process $proc$src/alu.sv:0$239 in module alu.
Removed 2 dead cases from process $proc$src/control.sv:0$234 in module control.
Marked 9 switch rules as full_case in process $proc$src/control.sv:0$234 in module control.
Marked 1 switch rules as full_case in process $proc$src/writeToReg.sv:0$230 in module writeToReg.
Marked 4 switch rules as full_case in process $proc$src/signExtender.sv:0$205 in module signExtender.
Removed 1 dead cases from process $proc$src/ru_ram.sv:0$201 in module ru_ram.
Marked 1 switch rules as full_case in process $proc$src/ru_ram.sv:0$201 in module ru_ram.
Removed 2 dead cases from process $proc$src/ru_ram.sv:0$192 in module ru_ram.
Marked 3 switch rules as full_case in process $proc$src/ru_ram.sv:0$192 in module ru_ram.
Marked 1 switch rules as full_case in process $proc$src/ru_ram.sv:16$188 in module ru_ram.
Marked 4 switch rules as full_case in process $proc$src/request_unit.sv:0$167 in module request_unit.
Marked 1 switch rules as full_case in process $proc$src/request_unit.sv:21$165 in module request_unit.
Removed 1 dead cases from process $proc$src/register_file.sv:0$162 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$162 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$159 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$159 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$151 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/register_file.sv:0$151 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:43$81 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/pc.sv:0$36 in module pc.
Marked 1 switch rules as full_case in process $proc$src/pc.sv:32$34 in module pc.
Marked 1 switch rules as full_case in process $proc$src/mux.sv:0$33 in module mux.
Marked 3 switch rules as full_case in process $proc$src/memory_control.sv:0$27 in module memory_control.
Marked 1 switch rules as full_case in process $proc$src/memory_control.sv:11$25 in module memory_control.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 9 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 52 redundant assignments.
Promoted 201 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$551'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$540'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$530'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$527'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$524'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$513'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$502'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$495'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$492'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$489'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$486'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$483'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$481'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$739'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$738'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$737'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$736'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$735'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$734'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$719'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$718'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$717'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$716'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$715'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$714'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$713'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$712'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$711'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$531'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$525'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$493'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$487'.
Found async reset \nRst in `\ru_ram.$proc$src/ru_ram.sv:16$188'.
Found async reset \nRST in `\request_unit.$proc$src/request_unit.sv:21$165'.
Found async reset \nRST in `\register_file.$proc$src/register_file.sv:43$81'.
Found async reset \nRST in `\pc.$proc$src/pc.sv:32$34'.
Found async reset \nRST in `\memory_control.$proc$src/memory_control.sv:11$25'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

19.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~84 debug messages>

19.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$551'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$545'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$540'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$534'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$531'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$530'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$528'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$527'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$525'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$524'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$522'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$520'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$518'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$513'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$507'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$502'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$496'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$495'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$493'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$492'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$490'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$489'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$487'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$486'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$484'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$483'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$482'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$481'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$480'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$739'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$738'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$737'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$736'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$735'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$734'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$719'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$718'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$717'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$716'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$715'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$714'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$713'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$712'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$711'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$261'.
     1/1: $1$mem2reg_rd$\seg7$src/ssdec.sv:26$258_DATA[6:0]$263
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$260'.
Creating decoders for process `\alu.$proc$src/alu.sv:0$239'.
     1/13: $3\ALUResult[31:0]
     2/13: $2\ALUResult[31:0]
     3/13: $9\zero[0:0]
     4/13: $8\zero[0:0]
     5/13: $7\zero[0:0]
     6/13: $6\zero[0:0]
     7/13: $5\zero[0:0]
     8/13: $4\zero[0:0]
     9/13: $3\zero[0:0]
    10/13: $2\zero[0:0]
    11/13: $1\zero[0:0]
    12/13: $1\negative[0:0]
    13/13: $1\ALUResult[31:0]
Creating decoders for process `\control.$proc$src/control.sv:0$234'.
     1/23: $9\cuOP[5:0]
     2/23: $6\aluOP[3:0]
     3/23: $8\cuOP[5:0]
     4/23: $5\aluOP[3:0]
     5/23: $7\cuOP[5:0]
     6/23: $4\aluOP[3:0]
     7/23: $6\cuOP[5:0]
     8/23: $3\aluOP[3:0]
     9/23: $5\cuOP[5:0]
    10/23: $2\aluOP[3:0]
    11/23: $4\cuOP[5:0]
    12/23: $3\cuOP[5:0]
    13/23: $2\cuOP[5:0]
    14/23: $1\regWrite[0:0]
    15/23: $1\rd[4:0]
    16/23: $1\imm[19:0]
    17/23: $1\cuOP[5:0]
    18/23: $1\reg_2[4:0]
    19/23: $1\reg_1[4:0]
    20/23: $1\aluOP[3:0]
    21/23: $1\memRead[0:0]
    22/23: $1\memWrite[0:0]
    23/23: $1\aluSrc[0:0]
Creating decoders for process `\writeToReg.$proc$src/writeToReg.sv:0$230'.
     1/1: $1\writeData[31:0]
Creating decoders for process `\signExtender.$proc$src/signExtender.sv:0$205'.
     1/4: $4\immOut[31:0]
     2/4: $3\immOut[31:0]
     3/4: $2\immOut[31:0]
     4/4: $1\immOut[31:0]
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$201'.
     1/1: $1$mem2reg_rd$\memory$src/ru_ram.sv:54$187_DATA[31:0]$203
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
     1/102: $3\nxt_memory[0][31:0]
     2/102: $3\nxt_memory[31][31:0]
     3/102: $3\nxt_memory[30][31:0]
     4/102: $3\nxt_memory[29][31:0]
     5/102: $3\nxt_memory[28][31:0]
     6/102: $3\nxt_memory[27][31:0]
     7/102: $3\nxt_memory[26][31:0]
     8/102: $3\nxt_memory[25][31:0]
     9/102: $3\nxt_memory[24][31:0]
    10/102: $3\nxt_memory[23][31:0]
    11/102: $3\nxt_memory[22][31:0]
    12/102: $3\nxt_memory[21][31:0]
    13/102: $3\nxt_memory[20][31:0]
    14/102: $3\nxt_memory[19][31:0]
    15/102: $3\nxt_memory[18][31:0]
    16/102: $3\nxt_memory[17][31:0]
    17/102: $3\nxt_memory[16][31:0]
    18/102: $3\nxt_memory[15][31:0]
    19/102: $3\nxt_memory[14][31:0]
    20/102: $3\nxt_memory[13][31:0]
    21/102: $3\nxt_memory[12][31:0]
    22/102: $3\nxt_memory[11][31:0]
    23/102: $3\nxt_memory[10][31:0]
    24/102: $3\nxt_memory[9][31:0]
    25/102: $3\nxt_memory[8][31:0]
    26/102: $3\nxt_memory[7][31:0]
    27/102: $3\nxt_memory[6][31:0]
    28/102: $3\nxt_memory[5][31:0]
    29/102: $3\nxt_memory[4][31:0]
    30/102: $3\nxt_memory[3][31:0]
    31/102: $3\nxt_memory[2][31:0]
    32/102: $3\nxt_memory[1][31:0]
    33/102: $2\nxt_memory[31][31:0]
    34/102: $2\nxt_memory[30][31:0]
    35/102: $2\nxt_memory[29][31:0]
    36/102: $2\nxt_memory[28][31:0]
    37/102: $2\nxt_memory[27][31:0]
    38/102: $2\nxt_memory[26][31:0]
    39/102: $2\nxt_memory[25][31:0]
    40/102: $2\nxt_memory[24][31:0]
    41/102: $2\nxt_memory[23][31:0]
    42/102: $2\nxt_memory[22][31:0]
    43/102: $2\nxt_memory[21][31:0]
    44/102: $2\nxt_memory[20][31:0]
    45/102: $2\nxt_memory[19][31:0]
    46/102: $2\nxt_memory[18][31:0]
    47/102: $2\nxt_memory[17][31:0]
    48/102: $2\nxt_memory[16][31:0]
    49/102: $2\nxt_memory[15][31:0]
    50/102: $2\nxt_memory[14][31:0]
    51/102: $2\nxt_memory[13][31:0]
    52/102: $2\nxt_memory[12][31:0]
    53/102: $2\nxt_memory[11][31:0]
    54/102: $2\nxt_memory[10][31:0]
    55/102: $2\nxt_memory[9][31:0]
    56/102: $2\nxt_memory[8][31:0]
    57/102: $2\nxt_memory[7][31:0]
    58/102: $2\nxt_memory[6][31:0]
    59/102: $2\nxt_memory[5][31:0]
    60/102: $2\nxt_memory[4][31:0]
    61/102: $2\nxt_memory[3][31:0]
    62/102: $2\nxt_memory[2][31:0]
    63/102: $2\nxt_memory[1][31:0]
    64/102: $2\nxt_memory[0][31:0]
    65/102: $2$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_ADDR[4:0]$198
    66/102: $2$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_DATA[31:0]$199
    67/102: $1$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_DATA[31:0]$197
    68/102: $1$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_ADDR[4:0]$196
    69/102: $1\nxt_memory[31][31:0]
    70/102: $1\nxt_memory[30][31:0]
    71/102: $1\nxt_memory[29][31:0]
    72/102: $1\nxt_memory[28][31:0]
    73/102: $1\nxt_memory[27][31:0]
    74/102: $1\nxt_memory[26][31:0]
    75/102: $1\nxt_memory[25][31:0]
    76/102: $1\nxt_memory[24][31:0]
    77/102: $1\nxt_memory[23][31:0]
    78/102: $1\nxt_memory[22][31:0]
    79/102: $1\nxt_memory[21][31:0]
    80/102: $1\nxt_memory[20][31:0]
    81/102: $1\nxt_memory[19][31:0]
    82/102: $1\nxt_memory[18][31:0]
    83/102: $1\nxt_memory[17][31:0]
    84/102: $1\nxt_memory[16][31:0]
    85/102: $1\nxt_memory[15][31:0]
    86/102: $1\nxt_memory[14][31:0]
    87/102: $1\nxt_memory[13][31:0]
    88/102: $1\nxt_memory[12][31:0]
    89/102: $1\nxt_memory[11][31:0]
    90/102: $1\nxt_memory[10][31:0]
    91/102: $1\nxt_memory[9][31:0]
    92/102: $1\nxt_memory[8][31:0]
    93/102: $1\nxt_memory[7][31:0]
    94/102: $1\nxt_memory[6][31:0]
    95/102: $1\nxt_memory[5][31:0]
    96/102: $1\nxt_memory[4][31:0]
    97/102: $1\nxt_memory[3][31:0]
    98/102: $1\nxt_memory[2][31:0]
    99/102: $1\nxt_memory[1][31:0]
   100/102: $1\nxt_memory[0][31:0]
   101/102: $1\next_state[0:0]
   102/102: $1\busy[0:0]
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
     1/34: $0\state[0:0]
     2/34: $1$fordecl_block$182.i[31:0]$191
     3/34: $1\memory[4][31:0]
     4/34: $1\memory[3][31:0]
     5/34: $1\memory[2][31:0]
     6/34: $1\memory[1][31:0]
     7/34: $1\memory[0][31:0]
     8/34: $0\memory[31][31:0]
     9/34: $0\memory[30][31:0]
    10/34: $0\memory[29][31:0]
    11/34: $0\memory[28][31:0]
    12/34: $0\memory[27][31:0]
    13/34: $0\memory[26][31:0]
    14/34: $0\memory[25][31:0]
    15/34: $0\memory[24][31:0]
    16/34: $0\memory[23][31:0]
    17/34: $0\memory[22][31:0]
    18/34: $0\memory[21][31:0]
    19/34: $0\memory[20][31:0]
    20/34: $0\memory[19][31:0]
    21/34: $0\memory[18][31:0]
    22/34: $0\memory[17][31:0]
    23/34: $0\memory[16][31:0]
    24/34: $0\memory[15][31:0]
    25/34: $0\memory[14][31:0]
    26/34: $0\memory[13][31:0]
    27/34: $0\memory[12][31:0]
    28/34: $0\memory[11][31:0]
    29/34: $0\memory[10][31:0]
    30/34: $0\memory[9][31:0]
    31/34: $0\memory[8][31:0]
    32/34: $0\memory[7][31:0]
    33/34: $0\memory[6][31:0]
    34/34: $0\memory[5][31:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:0$167'.
     1/8: $4\nxt_dmmWen[0:0]
     2/8: $4\nxt_dmmRen[0:0]
     3/8: $3\nxt_dmmWen[0:0]
     4/8: $3\nxt_dmmRen[0:0]
     5/8: $2\nxt_dmmWen[0:0]
     6/8: $2\nxt_dmmRen[0:0]
     7/8: $1\nxt_dmmWen[0:0]
     8/8: $1\nxt_dmmRen[0:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:21$165'.
     1/2: $0\dmmWen[0:0]
     2/2: $0\dmmRen[0:0]
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$162'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:69$80_DATA[31:0]$164
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$159'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:68$79_DATA[31:0]$161
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$151'.
     1/66: $2\nxt_register[0][31:0]
     2/66: $2\nxt_register[31][31:0]
     3/66: $2\nxt_register[30][31:0]
     4/66: $2\nxt_register[29][31:0]
     5/66: $2\nxt_register[28][31:0]
     6/66: $2\nxt_register[27][31:0]
     7/66: $2\nxt_register[26][31:0]
     8/66: $2\nxt_register[25][31:0]
     9/66: $2\nxt_register[24][31:0]
    10/66: $2\nxt_register[23][31:0]
    11/66: $2\nxt_register[22][31:0]
    12/66: $2\nxt_register[21][31:0]
    13/66: $2\nxt_register[20][31:0]
    14/66: $2\nxt_register[19][31:0]
    15/66: $2\nxt_register[18][31:0]
    16/66: $2\nxt_register[17][31:0]
    17/66: $2\nxt_register[16][31:0]
    18/66: $2\nxt_register[15][31:0]
    19/66: $2\nxt_register[14][31:0]
    20/66: $2\nxt_register[13][31:0]
    21/66: $2\nxt_register[12][31:0]
    22/66: $2\nxt_register[11][31:0]
    23/66: $2\nxt_register[10][31:0]
    24/66: $2\nxt_register[9][31:0]
    25/66: $2\nxt_register[8][31:0]
    26/66: $2\nxt_register[7][31:0]
    27/66: $2\nxt_register[6][31:0]
    28/66: $2\nxt_register[5][31:0]
    29/66: $2\nxt_register[4][31:0]
    30/66: $2\nxt_register[3][31:0]
    31/66: $2\nxt_register[2][31:0]
    32/66: $2\nxt_register[1][31:0]
    33/66: $1\nxt_register[31][31:0]
    34/66: $1\nxt_register[30][31:0]
    35/66: $1\nxt_register[29][31:0]
    36/66: $1\nxt_register[28][31:0]
    37/66: $1\nxt_register[27][31:0]
    38/66: $1\nxt_register[26][31:0]
    39/66: $1\nxt_register[25][31:0]
    40/66: $1\nxt_register[24][31:0]
    41/66: $1\nxt_register[23][31:0]
    42/66: $1\nxt_register[22][31:0]
    43/66: $1\nxt_register[21][31:0]
    44/66: $1\nxt_register[20][31:0]
    45/66: $1\nxt_register[19][31:0]
    46/66: $1\nxt_register[18][31:0]
    47/66: $1\nxt_register[17][31:0]
    48/66: $1\nxt_register[16][31:0]
    49/66: $1\nxt_register[15][31:0]
    50/66: $1\nxt_register[14][31:0]
    51/66: $1\nxt_register[13][31:0]
    52/66: $1\nxt_register[12][31:0]
    53/66: $1\nxt_register[11][31:0]
    54/66: $1\nxt_register[10][31:0]
    55/66: $1\nxt_register[9][31:0]
    56/66: $1\nxt_register[8][31:0]
    57/66: $1\nxt_register[7][31:0]
    58/66: $1\nxt_register[6][31:0]
    59/66: $1\nxt_register[5][31:0]
    60/66: $1\nxt_register[4][31:0]
    61/66: $1\nxt_register[3][31:0]
    62/66: $1\nxt_register[2][31:0]
    63/66: $1\nxt_register[1][31:0]
    64/66: $1\nxt_register[0][31:0]
    65/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$78_ADDR[4:0]$157
    66/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$78_DATA[31:0]$158
Creating decoders for process `\register_file.$proc$src/register_file.sv:43$81'.
     1/66: $1$fordecl_block$74.i[31:0]$150
     2/66: $0\register[31][31:0]
     3/66: $0\register[30][31:0]
     4/66: $0\register[29][31:0]
     5/66: $0\register[28][31:0]
     6/66: $0\register[27][31:0]
     7/66: $0\register[26][31:0]
     8/66: $0\register[25][31:0]
     9/66: $0\register[24][31:0]
    10/66: $0\register[23][31:0]
    11/66: $0\register[22][31:0]
    12/66: $0\register[21][31:0]
    13/66: $0\register[20][31:0]
    14/66: $0\register[19][31:0]
    15/66: $0\register[18][31:0]
    16/66: $0\register[17][31:0]
    17/66: $0\register[16][31:0]
    18/66: $0\register[15][31:0]
    19/66: $0\register[14][31:0]
    20/66: $0\register[13][31:0]
    21/66: $0\register[12][31:0]
    22/66: $0\register[11][31:0]
    23/66: $0\register[10][31:0]
    24/66: $0\register[9][31:0]
    25/66: $0\register[8][31:0]
    26/66: $0\register[7][31:0]
    27/66: $0\register[6][31:0]
    28/66: $0\register[5][31:0]
    29/66: $0\register[4][31:0]
    30/66: $0\register[3][31:0]
    31/66: $0\register[2][31:0]
    32/66: $0\register[1][31:0]
    33/66: $1$fordecl_block$70.$for_loop$71[31].$fordecl_block$72.j[31:0]$149
    34/66: $1$fordecl_block$70.$for_loop$71[30].$fordecl_block$72.j[31:0]$148
    35/66: $1$fordecl_block$70.$for_loop$71[29].$fordecl_block$72.j[31:0]$147
    36/66: $1$fordecl_block$70.$for_loop$71[28].$fordecl_block$72.j[31:0]$146
    37/66: $1$fordecl_block$70.$for_loop$71[27].$fordecl_block$72.j[31:0]$145
    38/66: $1$fordecl_block$70.$for_loop$71[26].$fordecl_block$72.j[31:0]$144
    39/66: $1$fordecl_block$70.$for_loop$71[25].$fordecl_block$72.j[31:0]$143
    40/66: $1$fordecl_block$70.$for_loop$71[24].$fordecl_block$72.j[31:0]$142
    41/66: $1$fordecl_block$70.$for_loop$71[23].$fordecl_block$72.j[31:0]$141
    42/66: $1$fordecl_block$70.$for_loop$71[22].$fordecl_block$72.j[31:0]$140
    43/66: $1$fordecl_block$70.$for_loop$71[21].$fordecl_block$72.j[31:0]$139
    44/66: $1$fordecl_block$70.$for_loop$71[20].$fordecl_block$72.j[31:0]$138
    45/66: $1$fordecl_block$70.$for_loop$71[19].$fordecl_block$72.j[31:0]$137
    46/66: $1$fordecl_block$70.$for_loop$71[18].$fordecl_block$72.j[31:0]$136
    47/66: $1$fordecl_block$70.$for_loop$71[17].$fordecl_block$72.j[31:0]$135
    48/66: $1$fordecl_block$70.$for_loop$71[16].$fordecl_block$72.j[31:0]$134
    49/66: $1$fordecl_block$70.$for_loop$71[15].$fordecl_block$72.j[31:0]$133
    50/66: $1$fordecl_block$70.$for_loop$71[14].$fordecl_block$72.j[31:0]$132
    51/66: $1$fordecl_block$70.$for_loop$71[13].$fordecl_block$72.j[31:0]$131
    52/66: $1$fordecl_block$70.$for_loop$71[12].$fordecl_block$72.j[31:0]$130
    53/66: $1$fordecl_block$70.$for_loop$71[11].$fordecl_block$72.j[31:0]$129
    54/66: $1$fordecl_block$70.$for_loop$71[10].$fordecl_block$72.j[31:0]$128
    55/66: $1$fordecl_block$70.$for_loop$71[9].$fordecl_block$72.j[31:0]$127
    56/66: $1$fordecl_block$70.$for_loop$71[8].$fordecl_block$72.j[31:0]$126
    57/66: $1$fordecl_block$70.$for_loop$71[7].$fordecl_block$72.j[31:0]$125
    58/66: $1$fordecl_block$70.$for_loop$71[6].$fordecl_block$72.j[31:0]$124
    59/66: $1$fordecl_block$70.$for_loop$71[5].$fordecl_block$72.j[31:0]$123
    60/66: $1$fordecl_block$70.$for_loop$71[4].$fordecl_block$72.j[31:0]$122
    61/66: $1$fordecl_block$70.$for_loop$71[3].$fordecl_block$72.j[31:0]$121
    62/66: $1$fordecl_block$70.$for_loop$71[2].$fordecl_block$72.j[31:0]$120
    63/66: $1$fordecl_block$70.$for_loop$71[1].$fordecl_block$72.j[31:0]$119
    64/66: $1$fordecl_block$70.$for_loop$71[0].$fordecl_block$72.j[31:0]$118
    65/66: $1$fordecl_block$70.i[31:0]$117
    66/66: $0\register[0][31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:0$36'.
     1/2: $2\next_pc[31:0]
     2/2: $1\next_pc[31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:32$34'.
     1/1: $0\PC[31:0]
Creating decoders for process `\mux.$proc$src/mux.sv:0$33'.
     1/1: $1\out[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:0$27'.
     1/20: $3\i_wait[0:0]
     2/20: $4\imemload[31:0]
     3/20: $3\Ren[0:0]
     4/20: $3\ramaddr[31:0]
     5/20: $3\Wen[0:0]
     6/20: $2\d_wait[0:0]
     7/20: $2\ramstore[31:0]
     8/20: $2\Wen[0:0]
     9/20: $2\ramaddr[31:0]
    10/20: $2\i_wait[0:0]
    11/20: $2\Ren[0:0]
    12/20: $3\imemload[31:0]
    13/20: $1\d_wait[0:0]
    14/20: $1\dmmload[31:0]
    15/20: $1\Ren[0:0]
    16/20: $1\ramaddr[31:0]
    17/20: $1\i_wait[0:0]
    18/20: $1\Wen[0:0]
    19/20: $1\ramstore[31:0]
    20/20: $2\imemload[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:11$25'.
     1/3: $0\prev_imemload[31:0]
     2/3: $0\prev_dmmstore[31:0]
     3/3: $0\prev_dmmaddr[31:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

19.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ssdec.$mem2reg_rd$\seg7$src/ssdec.sv:26$258_DATA' from process `\ssdec.$proc$src/ssdec.sv:0$261'.
No latch inferred for signal `\ssdec.\seg7[0]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[1]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[2]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[3]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[4]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[5]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[6]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[7]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[8]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[9]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[10]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[11]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[12]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[13]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[14]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\ssdec.\seg7[15]' from process `\ssdec.$proc$src/ssdec.sv:0$260'.
No latch inferred for signal `\alu.\zero' from process `\alu.$proc$src/alu.sv:0$239'.
No latch inferred for signal `\alu.\negative' from process `\alu.$proc$src/alu.sv:0$239'.
No latch inferred for signal `\alu.\ALUResult' from process `\alu.$proc$src/alu.sv:0$239'.
No latch inferred for signal `\control.\regWrite' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\aluSrc' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\memWrite' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\memRead' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\aluOP' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\cuOP' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\imm' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\reg_1' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\reg_2' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\control.\rd' from process `\control.$proc$src/control.sv:0$234'.
No latch inferred for signal `\writeToReg.\writeData' from process `\writeToReg.$proc$src/writeToReg.sv:0$230'.
No latch inferred for signal `\signExtender.\immOut' from process `\signExtender.$proc$src/signExtender.sv:0$205'.
No latch inferred for signal `\ru_ram.$mem2reg_rd$\memory$src/ru_ram.sv:54$187_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$201'.
No latch inferred for signal `\ru_ram.\display' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\busy' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\next_state' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.$fordecl_block$184.i' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[0]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[1]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[2]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[3]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[4]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[5]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[6]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[7]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[8]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[9]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[10]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[11]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[12]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[13]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[14]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[15]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[16]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[17]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[18]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[19]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[20]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[21]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[22]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[23]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[24]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[25]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[26]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[27]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[28]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[29]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[30]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.\nxt_memory[31]' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_ADDR' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\ru_ram.$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$186_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$192'.
No latch inferred for signal `\request_unit.\nxt_dmmRen' from process `\request_unit.$proc$src/request_unit.sv:0$167'.
No latch inferred for signal `\request_unit.\nxt_dmmWen' from process `\request_unit.$proc$src/request_unit.sv:0$167'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:69$80_DATA' from process `\register_file.$proc$src/register_file.sv:0$162'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:68$79_DATA' from process `\register_file.$proc$src/register_file.sv:0$159'.
No latch inferred for signal `\register_file.$fordecl_block$76.i' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[0]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[1]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[2]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[3]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[4]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[5]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[6]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[7]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[8]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[9]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[10]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[11]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[12]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[13]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[14]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[15]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[16]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[17]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[18]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[19]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[20]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[21]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[22]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[23]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[24]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[25]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[26]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[27]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[28]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[29]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[30]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.\nxt_register[31]' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$78_ADDR' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$78_DATA' from process `\register_file.$proc$src/register_file.sv:0$151'.
No latch inferred for signal `\pc.\next_pc' from process `\pc.$proc$src/pc.sv:0$36'.
No latch inferred for signal `\mux.\out' from process `\mux.$proc$src/mux.sv:0$33'.
No latch inferred for signal `\memory_control.\imemload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramaddr' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramstore' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Wen' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\dmmload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Ren' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\d_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\i_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.

19.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552'.
  created $adff cell `$procdff$4557' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$545'.
  created $dff cell `$procdff$4558' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541'.
  created $adff cell `$procdff$4559' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$534'.
  created $dff cell `$procdff$4560' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$531'.
  created $adff cell `$procdff$4561' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$528'.
  created $dff cell `$procdff$4562' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$525'.
  created $adff cell `$procdff$4563' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$522'.
  created $dff cell `$procdff$4564' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$520'.
  created $dff cell `$procdff$4565' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$518'.
  created $dff cell `$procdff$4566' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514'.
  created $adff cell `$procdff$4567' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$507'.
  created $dff cell `$procdff$4568' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503'.
  created $adff cell `$procdff$4569' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$496'.
  created $dff cell `$procdff$4570' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$493'.
  created $adff cell `$procdff$4571' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$490'.
  created $dff cell `$procdff$4572' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$487'.
  created $adff cell `$procdff$4573' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$484'.
  created $dff cell `$procdff$4574' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$482'.
  created $dff cell `$procdff$4575' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$480'.
  created $dff cell `$procdff$4576' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4577' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4578' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4579' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4580' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4581' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
  created $dff cell `$procdff$4582' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4583' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4584' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4585' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4586' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4587' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4588' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4589' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4590' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
  created $dff cell `$procdff$4591' with positive edge clock.
Creating register for signal `\ru_ram.\state' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4592' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.$fordecl_block$182.i' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4595' with positive edge clock.
Creating register for signal `\ru_ram.\memory[0]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4596' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[1]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4597' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[2]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4598' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[3]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4599' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[4]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $adff cell `$procdff$4600' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[5]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4603' with positive edge clock.
Creating register for signal `\ru_ram.\memory[6]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4606' with positive edge clock.
Creating register for signal `\ru_ram.\memory[7]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4609' with positive edge clock.
Creating register for signal `\ru_ram.\memory[8]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4612' with positive edge clock.
Creating register for signal `\ru_ram.\memory[9]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4615' with positive edge clock.
Creating register for signal `\ru_ram.\memory[10]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4618' with positive edge clock.
Creating register for signal `\ru_ram.\memory[11]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4621' with positive edge clock.
Creating register for signal `\ru_ram.\memory[12]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4624' with positive edge clock.
Creating register for signal `\ru_ram.\memory[13]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4627' with positive edge clock.
Creating register for signal `\ru_ram.\memory[14]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4630' with positive edge clock.
Creating register for signal `\ru_ram.\memory[15]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4633' with positive edge clock.
Creating register for signal `\ru_ram.\memory[16]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4636' with positive edge clock.
Creating register for signal `\ru_ram.\memory[17]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4639' with positive edge clock.
Creating register for signal `\ru_ram.\memory[18]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4642' with positive edge clock.
Creating register for signal `\ru_ram.\memory[19]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4645' with positive edge clock.
Creating register for signal `\ru_ram.\memory[20]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4648' with positive edge clock.
Creating register for signal `\ru_ram.\memory[21]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4651' with positive edge clock.
Creating register for signal `\ru_ram.\memory[22]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4654' with positive edge clock.
Creating register for signal `\ru_ram.\memory[23]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4657' with positive edge clock.
Creating register for signal `\ru_ram.\memory[24]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4660' with positive edge clock.
Creating register for signal `\ru_ram.\memory[25]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4663' with positive edge clock.
Creating register for signal `\ru_ram.\memory[26]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4666' with positive edge clock.
Creating register for signal `\ru_ram.\memory[27]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4669' with positive edge clock.
Creating register for signal `\ru_ram.\memory[28]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4672' with positive edge clock.
Creating register for signal `\ru_ram.\memory[29]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4675' with positive edge clock.
Creating register for signal `\ru_ram.\memory[30]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4678' with positive edge clock.
Creating register for signal `\ru_ram.\memory[31]' using process `\ru_ram.$proc$src/ru_ram.sv:16$188'.
  created $dff cell `$procdff$4681' with positive edge clock.
Creating register for signal `\request_unit.\dmmRen' using process `\request_unit.$proc$src/request_unit.sv:21$165'.
  created $adff cell `$procdff$4682' with positive edge clock and negative level reset.
Creating register for signal `\request_unit.\dmmWen' using process `\request_unit.$proc$src/request_unit.sv:21$165'.
  created $adff cell `$procdff$4683' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.i' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4684' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[0].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4685' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[1].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4686' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[2].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4687' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[3].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4688' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[4].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4689' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[5].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4690' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[6].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4691' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[7].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4692' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[8].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4693' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[9].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4694' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[10].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4695' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[11].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4696' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[12].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4697' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[13].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4698' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[14].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4699' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[15].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4700' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[16].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4701' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[17].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4702' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[18].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4703' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[19].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4704' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[20].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4705' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[21].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4706' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[22].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4707' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[23].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4708' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[24].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4709' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[25].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4710' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[26].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4711' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[27].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4712' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[28].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4713' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[29].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4714' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[30].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4715' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$70.$for_loop$71[31].$fordecl_block$72.j' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4716' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$74.i' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $dff cell `$procdff$4719' with positive edge clock.
Creating register for signal `\register_file.\register[0]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4720' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[1]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4721' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[2]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4722' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[3]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4723' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[4]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4724' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[5]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4725' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[6]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4726' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[7]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4727' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[8]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4728' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[9]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4729' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[10]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4730' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[11]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4731' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[12]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4732' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[13]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4733' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[14]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4734' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[15]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4735' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[16]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4736' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[17]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4737' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[18]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4738' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[19]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4739' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[20]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4740' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[21]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4741' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[22]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4742' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[23]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4743' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[24]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4744' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[25]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4745' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[26]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4746' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[27]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4747' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[28]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4748' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[29]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4749' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[30]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4750' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[31]' using process `\register_file.$proc$src/register_file.sv:43$81'.
  created $adff cell `$procdff$4751' with positive edge clock and negative level reset.
Creating register for signal `\pc.\PC' using process `\pc.$proc$src/pc.sv:32$34'.
  created $adff cell `$procdff$4752' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmaddr' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4753' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmstore' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4754' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_imemload' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4755' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$4756' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$4757' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$4758' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$4759' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$4760' with positive edge clock.

19.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$552'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$551'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$545'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$545'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$541'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$540'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$534'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$534'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$531'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$530'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$528'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$528'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$527'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$525'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$524'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$522'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$522'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$520'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$520'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$519'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$518'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$514'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$513'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$507'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$507'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$503'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$502'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$496'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$496'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$495'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$493'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$492'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$490'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$490'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$489'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$487'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$486'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$484'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$484'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$483'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$482'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$482'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$481'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$480'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$739'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$738'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$737'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$736'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$735'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$734'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$720'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$719'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$718'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$717'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$716'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$715'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$714'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$713'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$712'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$711'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$692'.
Found and cleaned up 1 empty switch in `\ssdec.$proc$src/ssdec.sv:0$261'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$261'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$260'.
Found and cleaned up 11 empty switches in `\alu.$proc$src/alu.sv:0$239'.
Removing empty process `alu.$proc$src/alu.sv:0$239'.
Found and cleaned up 9 empty switches in `\control.$proc$src/control.sv:0$234'.
Removing empty process `control.$proc$src/control.sv:0$234'.
Found and cleaned up 1 empty switch in `\writeToReg.$proc$src/writeToReg.sv:0$230'.
Removing empty process `writeToReg.$proc$src/writeToReg.sv:0$230'.
Found and cleaned up 4 empty switches in `\signExtender.$proc$src/signExtender.sv:0$205'.
Removing empty process `signExtender.$proc$src/signExtender.sv:0$205'.
Found and cleaned up 1 empty switch in `\ru_ram.$proc$src/ru_ram.sv:0$201'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$201'.
Found and cleaned up 3 empty switches in `\ru_ram.$proc$src/ru_ram.sv:0$192'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$192'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:16$188'.
Found and cleaned up 4 empty switches in `\request_unit.$proc$src/request_unit.sv:0$167'.
Removing empty process `request_unit.$proc$src/request_unit.sv:0$167'.
Removing empty process `request_unit.$proc$src/request_unit.sv:21$165'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$162'.
Removing empty process `register_file.$proc$src/register_file.sv:0$162'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$159'.
Removing empty process `register_file.$proc$src/register_file.sv:0$159'.
Found and cleaned up 2 empty switches in `\register_file.$proc$src/register_file.sv:0$151'.
Removing empty process `register_file.$proc$src/register_file.sv:0$151'.
Removing empty process `register_file.$proc$src/register_file.sv:43$81'.
Found and cleaned up 2 empty switches in `\pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:32$34'.
Found and cleaned up 1 empty switch in `\mux.$proc$src/mux.sv:0$33'.
Removing empty process `mux.$proc$src/mux.sv:0$33'.
Found and cleaned up 3 empty switches in `\memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:11$25'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 84 empty switches.

19.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module ssdec.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~12 debug messages>
Optimizing module control.
<suppressed ~11 debug messages>
Optimizing module writeToReg.
<suppressed ~1 debug messages>
Optimizing module signExtender.
<suppressed ~1 debug messages>
Optimizing module ru_ram.
<suppressed ~239 debug messages>
Optimizing module request.
Optimizing module request_unit.
Optimizing module register_file.
<suppressed ~35 debug messages>
Optimizing module pc.
<suppressed ~9 debug messages>
Optimizing module mux.
Optimizing module memory_control.
Optimizing module top1.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

19.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module ssdec.
Deleting now unused module alu.
Deleting now unused module control.
Deleting now unused module writeToReg.
Deleting now unused module signExtender.
Deleting now unused module ru_ram.
Deleting now unused module request.
Deleting now unused module request_unit.
Deleting now unused module register_file.
Deleting now unused module pc.
Deleting now unused module mux.
Deleting now unused module memory_control.
Deleting now unused module top1.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~21 debug messages>

19.5. Executing TRIBUF pass.

19.6. Executing DEMINOUT pass (demote inout ports to input or output).

19.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~151 debug messages>

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 262 unused cells and 1388 unused wires.
<suppressed ~292 debug messages>

19.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\right [2] is used but has no driver.
Warning: Wire ice40hx8k.\right [1] is used but has no driver.
Warning: Wire ice40hx8k.\right [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 64 problems.

19.10. Executing OPT pass (performing simple optimizations).

19.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6522 debug messages>
Removed a total of 2174 cells.

19.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\top_inst.\top.\ru.\m1.$procmux$4484: \top_inst.top.ru.r1.dmmWen -> 1'1
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2143.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3439.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3943.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3691.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3223.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1556.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1558.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4231.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2180.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2182.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3475.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3979.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1595.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1597.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3727.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2219.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2221.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4267.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3259.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4015.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1634.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1636.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3511.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2258.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2260.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3763.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4303.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1673.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1675.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2297.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2299.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1044.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1051.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1059.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2336.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2338.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1712.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1714.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1068.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1078.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1089.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1101.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1114.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1128.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1143.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2375.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2377.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3295.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1751.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1753.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4051.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2414.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2416.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1185.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1187.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1193.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1790.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1792.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1195.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3547.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1208.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1210.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1223.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1225.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3799.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1237.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2453.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2455.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1829.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1831.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1249.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1256.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1258.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1265.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1267.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3331.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2492.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2494.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1280.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4087.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1868.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1870.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1293.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3583.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1303.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3835.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1316.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2531.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2533.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1331.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1907.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1909.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3367.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4123.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2570.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2572.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3619.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3871.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1946.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1948.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2609.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2611.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1985.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1987.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2648.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2650.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2024.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2026.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2687.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2689.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2063.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2065.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2726.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2728.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2734.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2740.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2746.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2752.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2758.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2764.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2770.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2776.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2782.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2788.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2794.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2800.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2806.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2812.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2818.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2824.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2830.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2836.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2842.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2848.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2854.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2860.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2866.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2872.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2878.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2884.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2890.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2896.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2902.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2908.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2914.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2920.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4159.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3403.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2102.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2104.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4430.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4433.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4439.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4442.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4457.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4460.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4466.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4469.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4481.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4487.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4493.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4499.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4511.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3045.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3050.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3057.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3059.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3065.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3067.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3073.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3079.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1423.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1426.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1429.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1435.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1438.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1444.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3907.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3655.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1517.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1519.
    dead port 1/2 on $mux $flatten\top_inst.\top.\testpc.$procmux$4418.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4195.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2141.
Removed 184 multiplexer ports.
<suppressed ~100 debug messages>

19.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2381: { $flatten\top_inst.\top.\rram.$procmux$1472_CMP $auto$opt_reduce.cc:134:opt_pmux$4783 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1757: { $flatten\top_inst.\top.\rram.$procmux$1456_CMP $auto$opt_reduce.cc:134:opt_pmux$4785 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3298: { $flatten\top_inst.\top.\DUT.$procmux$3194_CMP $auto$opt_reduce.cc:134:opt_pmux$4787 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4054: { $flatten\top_inst.\top.\DUT.$procmux$3215_CMP $auto$opt_reduce.cc:134:opt_pmux$4789 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3478: { $flatten\top_inst.\top.\DUT.$procmux$3199_CMP $auto$opt_reduce.cc:134:opt_pmux$4791 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2420: { $flatten\top_inst.\top.\rram.$procmux$1473_CMP $auto$opt_reduce.cc:134:opt_pmux$4793 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3982: { $flatten\top_inst.\top.\DUT.$procmux$3213_CMP $auto$opt_reduce.cc:134:opt_pmux$4795 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1796: { $flatten\top_inst.\top.\rram.$procmux$1457_CMP $auto$opt_reduce.cc:134:opt_pmux$4797 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3946: { $flatten\top_inst.\top.\DUT.$procmux$3212_CMP $auto$opt_reduce.cc:134:opt_pmux$4799 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3550: { $flatten\top_inst.\top.\DUT.$procmux$3201_CMP $auto$opt_reduce.cc:134:opt_pmux$4801 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1601: { $flatten\top_inst.\top.\rram.$procmux$1452_CMP $auto$opt_reduce.cc:134:opt_pmux$4803 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3730: { $flatten\top_inst.\top.\DUT.$procmux$3206_CMP $auto$opt_reduce.cc:134:opt_pmux$4805 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2459: { $flatten\top_inst.\top.\rram.$procmux$1474_CMP $auto$opt_reduce.cc:134:opt_pmux$4807 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3802: { $flatten\top_inst.\top.\DUT.$procmux$3208_CMP $auto$opt_reduce.cc:134:opt_pmux$4809 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1835: { $flatten\top_inst.\top.\rram.$procmux$1458_CMP $auto$opt_reduce.cc:134:opt_pmux$4811 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2225: { $flatten\top_inst.\top.\rram.$procmux$1468_CMP $auto$opt_reduce.cc:134:opt_pmux$4813 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4270: { $flatten\top_inst.\top.\DUT.$procmux$3221_CMP $auto$opt_reduce.cc:134:opt_pmux$4815 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3694: { $flatten\top_inst.\top.\DUT.$procmux$3205_CMP $auto$opt_reduce.cc:134:opt_pmux$4817 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3334: { $flatten\top_inst.\top.\DUT.$procmux$3195_CMP $auto$opt_reduce.cc:134:opt_pmux$4819 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3262: { $flatten\top_inst.\top.\DUT.$procmux$3193_CMP $auto$opt_reduce.cc:134:opt_pmux$4821 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2498: { $flatten\top_inst.\top.\rram.$procmux$1475_CMP $auto$opt_reduce.cc:134:opt_pmux$4823 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4090: { $flatten\top_inst.\top.\DUT.$procmux$3216_CMP $auto$opt_reduce.cc:134:opt_pmux$4825 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1874: { $flatten\top_inst.\top.\rram.$procmux$1459_CMP $auto$opt_reduce.cc:134:opt_pmux$4827 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3586: { $flatten\top_inst.\top.\DUT.$procmux$3202_CMP $auto$opt_reduce.cc:134:opt_pmux$4829 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3838: { $flatten\top_inst.\top.\DUT.$procmux$3209_CMP $auto$opt_reduce.cc:134:opt_pmux$4831 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2537: { $flatten\top_inst.\top.\rram.$procmux$1476_CMP $auto$opt_reduce.cc:134:opt_pmux$4833 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1334: $auto$opt_reduce.cc:134:opt_pmux$4835
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1913: { $flatten\top_inst.\top.\rram.$procmux$1460_CMP $auto$opt_reduce.cc:134:opt_pmux$4837 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1343: $auto$opt_reduce.cc:134:opt_pmux$4839
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3370: { $flatten\top_inst.\top.\DUT.$procmux$3196_CMP $auto$opt_reduce.cc:134:opt_pmux$4841 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1353: { $auto$opt_reduce.cc:134:opt_pmux$4847 $auto$opt_reduce.cc:134:opt_pmux$4845 $auto$opt_reduce.cc:134:opt_pmux$4843 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4126: { $flatten\top_inst.\top.\DUT.$procmux$3217_CMP $auto$opt_reduce.cc:134:opt_pmux$4849 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2576: { $flatten\top_inst.\top.\rram.$procmux$1477_CMP $auto$opt_reduce.cc:134:opt_pmux$4851 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2147: { $flatten\top_inst.\top.\rram.$procmux$1466_CMP $auto$opt_reduce.cc:134:opt_pmux$4853 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4018: { $flatten\top_inst.\top.\DUT.$procmux$3214_CMP $auto$opt_reduce.cc:134:opt_pmux$4855 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1374: $auto$opt_reduce.cc:134:opt_pmux$4857
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3874: { $flatten\top_inst.\top.\DUT.$procmux$3210_CMP $auto$opt_reduce.cc:134:opt_pmux$4859 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3622: { $flatten\top_inst.\top.\DUT.$procmux$3203_CMP $auto$opt_reduce.cc:134:opt_pmux$4861 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3226: { $flatten\top_inst.\top.\DUT.$procmux$3192_CMP $auto$opt_reduce.cc:134:opt_pmux$4863 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1952: { $flatten\top_inst.\top.\rram.$procmux$1461_CMP $auto$opt_reduce.cc:134:opt_pmux$4865 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1379: $auto$opt_reduce.cc:134:opt_pmux$4867
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1640: { $flatten\top_inst.\top.\rram.$procmux$1453_CMP $auto$opt_reduce.cc:134:opt_pmux$4869 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3442: { $flatten\top_inst.\top.\DUT.$procmux$3198_CMP $auto$opt_reduce.cc:134:opt_pmux$4871 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2615: { $flatten\top_inst.\top.\rram.$procmux$1478_CMP $auto$opt_reduce.cc:134:opt_pmux$4873 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1404: $auto$opt_reduce.cc:134:opt_pmux$4875
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3514: { $flatten\top_inst.\top.\DUT.$procmux$3200_CMP $auto$opt_reduce.cc:134:opt_pmux$4877 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1991: { $flatten\top_inst.\top.\rram.$procmux$1462_CMP $auto$opt_reduce.cc:134:opt_pmux$4879 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1562: { $flatten\top_inst.\top.\rram.$procmux$1451_CMP $auto$opt_reduce.cc:134:opt_pmux$4881 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2654: { $flatten\top_inst.\top.\rram.$procmux$1479_CMP $auto$opt_reduce.cc:134:opt_pmux$4883 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2264: { $flatten\top_inst.\top.\rram.$procmux$1469_CMP $auto$opt_reduce.cc:134:opt_pmux$4885 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2030: { $flatten\top_inst.\top.\rram.$procmux$1463_CMP $auto$opt_reduce.cc:134:opt_pmux$4887 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2693: { $flatten\top_inst.\top.\rram.$procmux$1480_CMP $auto$opt_reduce.cc:134:opt_pmux$4889 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2069: { $flatten\top_inst.\top.\rram.$procmux$1464_CMP $auto$opt_reduce.cc:134:opt_pmux$4891 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3766: { $flatten\top_inst.\top.\DUT.$procmux$3207_CMP $auto$opt_reduce.cc:134:opt_pmux$4893 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1679: { $flatten\top_inst.\top.\rram.$procmux$1454_CMP $auto$opt_reduce.cc:134:opt_pmux$4895 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2303: { $flatten\top_inst.\top.\rram.$procmux$1470_CMP $auto$opt_reduce.cc:134:opt_pmux$4897 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1484: { $flatten\top_inst.\top.\rram.$procmux$1481_CMP $auto$opt_reduce.cc:134:opt_pmux$4899 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4162: { $flatten\top_inst.\top.\DUT.$procmux$3218_CMP $auto$opt_reduce.cc:134:opt_pmux$4901 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3406: { $flatten\top_inst.\top.\DUT.$procmux$3197_CMP $auto$opt_reduce.cc:134:opt_pmux$4903 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$3036: $auto$opt_reduce.cc:134:opt_pmux$4905
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2108: { $flatten\top_inst.\top.\rram.$procmux$1465_CMP $auto$opt_reduce.cc:134:opt_pmux$4907 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4234: { $flatten\top_inst.\top.\DUT.$procmux$3220_CMP $auto$opt_reduce.cc:134:opt_pmux$4909 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2342: { $flatten\top_inst.\top.\rram.$procmux$1471_CMP $auto$opt_reduce.cc:134:opt_pmux$4911 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3190: { $auto$opt_reduce.cc:134:opt_pmux$4913 $flatten\top_inst.\top.\DUT.$procmux$3191_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2186: { $flatten\top_inst.\top.\rram.$procmux$1467_CMP $auto$opt_reduce.cc:134:opt_pmux$4915 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3910: { $flatten\top_inst.\top.\DUT.$procmux$3211_CMP $auto$opt_reduce.cc:134:opt_pmux$4917 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3658: { $flatten\top_inst.\top.\DUT.$procmux$3204_CMP $auto$opt_reduce.cc:134:opt_pmux$4919 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1718: { $flatten\top_inst.\top.\rram.$procmux$1455_CMP $auto$opt_reduce.cc:134:opt_pmux$4921 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1523: { $auto$opt_reduce.cc:134:opt_pmux$4923 $flatten\top_inst.\top.\rram.$procmux$1450_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\write.$procmux$1409: { $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$168_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$169_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$171_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$173_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$175_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$228_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$227_Y $auto$opt_reduce.cc:134:opt_pmux$4925 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4198: { $flatten\top_inst.\top.\DUT.$procmux$3219_CMP $auto$opt_reduce.cc:134:opt_pmux$4927 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 71 changes.

19.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

19.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\top_inst.\top.\DUT.$procdff$4720 ($adff) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 9 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 10 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 11 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 12 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 13 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 14 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 15 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 16 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 17 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 18 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 19 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 20 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 21 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 22 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 23 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 24 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 25 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 26 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 27 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 28 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 29 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 30 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 31 on $flatten\top_inst.\top.\DUT.$procdff$4720 ($dlatch) from module ice40hx8k.

19.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2403 unused wires.
<suppressed ~42 debug messages>

19.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

19.10.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~100 debug messages>

19.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\testpc.$procmux$4409: { $flatten\top_inst.\top.\testpc.$procmux$4417_CMP $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$206_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$207_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$208_Y $auto$opt_reduce.cc:134:opt_pmux$4931 $auto$opt_reduce.cc:134:opt_pmux$4929 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

19.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\rram.$procdff$4592 ($adff) from module ice40hx8k.

19.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

19.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

19.10.16. Rerunning OPT passes. (Maybe there is more to do..)

19.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2940.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2940.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2943.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2943.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2946.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2946.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2949.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2949.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2952.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2952.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2955.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2955.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2958.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2958.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2961.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2961.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2964.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2964.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2967.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2967.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2970.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2970.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2973.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2973.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2976.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2976.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2979.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2979.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2982.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2982.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2985.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2985.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2988.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2988.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2991.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2991.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2994.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2994.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2997.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2997.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3000.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3000.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3003.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3003.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3006.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3006.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3009.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3009.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3012.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3012.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3015.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3015.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3018.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3018.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3021.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3021.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3024.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3024.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3027.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3027.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3030.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3030.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3033.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3033.
Removed 64 multiplexer ports.
<suppressed ~100 debug messages>

19.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.10.20. Executing OPT_DFF pass (perform DFF optimizations).

19.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

19.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.23. Rerunning OPT passes. (Maybe there is more to do..)

19.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

19.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.10.27. Executing OPT_DFF pass (perform DFF optimizations).

19.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.30. Finished OPT passes. (There is nothing left to do.)

19.11. Executing FSM pass (extract and optimize FSM).

19.11.1. Executing FSM_DETECT pass (finding FSMs in design).

19.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

19.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

19.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

19.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

19.12. Executing OPT pass (performing simple optimizations).

19.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

19.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4582 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$849_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4581 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4580 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$790_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4578 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$822_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4577 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$860_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4966 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$858_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\top.\testpc.$procdff$4752 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0], Q = \top_inst.top.testpc.PC).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4681 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[31][31:0], Q = \top_inst.top.rram.memory[31]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4678 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[30][31:0], Q = \top_inst.top.rram.memory[30]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4675 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[29][31:0], Q = \top_inst.top.rram.memory[29]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4672 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[28][31:0], Q = \top_inst.top.rram.memory[28]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4669 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[27][31:0], Q = \top_inst.top.rram.memory[27]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4666 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[26][31:0], Q = \top_inst.top.rram.memory[26]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4663 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[25][31:0], Q = \top_inst.top.rram.memory[25]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4660 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[24][31:0], Q = \top_inst.top.rram.memory[24]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4657 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[23][31:0], Q = \top_inst.top.rram.memory[23]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4654 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[22][31:0], Q = \top_inst.top.rram.memory[22]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4651 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[21][31:0], Q = \top_inst.top.rram.memory[21]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4648 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[20][31:0], Q = \top_inst.top.rram.memory[20]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4645 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[19][31:0], Q = \top_inst.top.rram.memory[19]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4642 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[18][31:0], Q = \top_inst.top.rram.memory[18]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4639 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[17][31:0], Q = \top_inst.top.rram.memory[17]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4636 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[16][31:0], Q = \top_inst.top.rram.memory[16]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4633 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[15][31:0], Q = \top_inst.top.rram.memory[15]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4630 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[14][31:0], Q = \top_inst.top.rram.memory[14]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4627 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[13][31:0], Q = \top_inst.top.rram.memory[13]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4624 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[12][31:0], Q = \top_inst.top.rram.memory[12]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4621 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[11][31:0], Q = \top_inst.top.rram.memory[11]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4618 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[10][31:0], Q = \top_inst.top.rram.memory[10]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4615 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[9][31:0], Q = \top_inst.top.rram.memory[9]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4612 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[8][31:0], Q = \top_inst.top.rram.memory[8]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4609 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[7][31:0], Q = \top_inst.top.rram.memory[7]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4606 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[6][31:0], Q = \top_inst.top.rram.memory[6]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4603 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[5][31:0], Q = \top_inst.top.rram.memory[5]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4600 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[4][31:0], Q = \top_inst.top.rram.memory[4]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4599 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[3][31:0], Q = \top_inst.top.rram.memory[3]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4598 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[2][31:0], Q = \top_inst.top.rram.memory[2]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4597 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[1][31:0], Q = \top_inst.top.rram.memory[1]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4596 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[0][31:0], Q = \top_inst.top.rram.memory[0]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4751 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[31][31:0], Q = \top_inst.top.DUT.register[31]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4750 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[30][31:0], Q = \top_inst.top.DUT.register[30]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4749 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[29][31:0], Q = \top_inst.top.DUT.register[29]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4748 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[28][31:0], Q = \top_inst.top.DUT.register[28]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4747 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[27][31:0], Q = \top_inst.top.DUT.register[27]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4746 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[26][31:0], Q = \top_inst.top.DUT.register[26]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4745 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[25][31:0], Q = \top_inst.top.DUT.register[25]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4744 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[24][31:0], Q = \top_inst.top.DUT.register[24]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4743 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[23][31:0], Q = \top_inst.top.DUT.register[23]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4742 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[22][31:0], Q = \top_inst.top.DUT.register[22]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4741 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[21][31:0], Q = \top_inst.top.DUT.register[21]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4740 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[20][31:0], Q = \top_inst.top.DUT.register[20]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4739 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[19][31:0], Q = \top_inst.top.DUT.register[19]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4738 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[18][31:0], Q = \top_inst.top.DUT.register[18]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4737 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[17][31:0], Q = \top_inst.top.DUT.register[17]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4736 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[16][31:0], Q = \top_inst.top.DUT.register[16]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4735 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[15][31:0], Q = \top_inst.top.DUT.register[15]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4734 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[14][31:0], Q = \top_inst.top.DUT.register[14]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4733 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[13][31:0], Q = \top_inst.top.DUT.register[13]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4732 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[12][31:0], Q = \top_inst.top.DUT.register[12]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4731 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[11][31:0], Q = \top_inst.top.DUT.register[11]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4730 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[10][31:0], Q = \top_inst.top.DUT.register[10]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4729 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[9][31:0], Q = \top_inst.top.DUT.register[9]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4728 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[8][31:0], Q = \top_inst.top.DUT.register[8]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4727 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[7][31:0], Q = \top_inst.top.DUT.register[7]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4726 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[6][31:0], Q = \top_inst.top.DUT.register[6]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4725 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[5][31:0], Q = \top_inst.top.DUT.register[5]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4724 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[4][31:0], Q = \top_inst.top.DUT.register[4]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4723 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[3][31:0], Q = \top_inst.top.DUT.register[3]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4722 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[2][31:0], Q = \top_inst.top.DUT.register[2]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4721 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[1][31:0], Q = \top_inst.top.DUT.register[1]).

19.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 96 unused cells and 96 unused wires.
<suppressed ~161 debug messages>

19.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~67 debug messages>

19.12.9. Rerunning OPT passes. (Maybe there is more to do..)

19.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

19.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3190: $flatten\top_inst.\top.\DUT.$procmux$3191_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3226: $flatten\top_inst.\top.\DUT.$procmux$3192_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3262: $flatten\top_inst.\top.\DUT.$procmux$3193_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3298: $flatten\top_inst.\top.\DUT.$procmux$3194_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3334: $flatten\top_inst.\top.\DUT.$procmux$3195_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3370: $flatten\top_inst.\top.\DUT.$procmux$3196_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3406: $flatten\top_inst.\top.\DUT.$procmux$3197_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3442: $flatten\top_inst.\top.\DUT.$procmux$3198_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3478: $flatten\top_inst.\top.\DUT.$procmux$3199_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3514: $flatten\top_inst.\top.\DUT.$procmux$3200_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3550: $flatten\top_inst.\top.\DUT.$procmux$3201_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3586: $flatten\top_inst.\top.\DUT.$procmux$3202_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3622: $flatten\top_inst.\top.\DUT.$procmux$3203_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3658: $flatten\top_inst.\top.\DUT.$procmux$3204_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3694: $flatten\top_inst.\top.\DUT.$procmux$3205_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3730: $flatten\top_inst.\top.\DUT.$procmux$3206_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3766: $flatten\top_inst.\top.\DUT.$procmux$3207_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3802: $flatten\top_inst.\top.\DUT.$procmux$3208_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3838: $flatten\top_inst.\top.\DUT.$procmux$3209_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3874: $flatten\top_inst.\top.\DUT.$procmux$3210_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3910: $flatten\top_inst.\top.\DUT.$procmux$3211_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3946: $flatten\top_inst.\top.\DUT.$procmux$3212_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3982: $flatten\top_inst.\top.\DUT.$procmux$3213_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4018: $flatten\top_inst.\top.\DUT.$procmux$3214_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4054: $flatten\top_inst.\top.\DUT.$procmux$3215_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4090: $flatten\top_inst.\top.\DUT.$procmux$3216_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4126: $flatten\top_inst.\top.\DUT.$procmux$3217_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4162: $flatten\top_inst.\top.\DUT.$procmux$3218_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4198: $flatten\top_inst.\top.\DUT.$procmux$3219_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4234: $flatten\top_inst.\top.\DUT.$procmux$3220_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4270: $flatten\top_inst.\top.\DUT.$procmux$3221_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1484: $flatten\top_inst.\top.\rram.$procmux$1481_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1523: $flatten\top_inst.\top.\rram.$procmux$1450_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1562: $flatten\top_inst.\top.\rram.$procmux$1451_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1601: $flatten\top_inst.\top.\rram.$procmux$1452_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1640: $flatten\top_inst.\top.\rram.$procmux$1453_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1679: $flatten\top_inst.\top.\rram.$procmux$1454_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1718: $flatten\top_inst.\top.\rram.$procmux$1455_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1757: $flatten\top_inst.\top.\rram.$procmux$1456_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1796: $flatten\top_inst.\top.\rram.$procmux$1457_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1835: $flatten\top_inst.\top.\rram.$procmux$1458_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1874: $flatten\top_inst.\top.\rram.$procmux$1459_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1913: $flatten\top_inst.\top.\rram.$procmux$1460_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1952: $flatten\top_inst.\top.\rram.$procmux$1461_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1991: $flatten\top_inst.\top.\rram.$procmux$1462_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2030: $flatten\top_inst.\top.\rram.$procmux$1463_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2069: $flatten\top_inst.\top.\rram.$procmux$1464_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2108: $flatten\top_inst.\top.\rram.$procmux$1465_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2147: $flatten\top_inst.\top.\rram.$procmux$1466_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2186: $flatten\top_inst.\top.\rram.$procmux$1467_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2225: $flatten\top_inst.\top.\rram.$procmux$1468_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2264: $flatten\top_inst.\top.\rram.$procmux$1469_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2303: $flatten\top_inst.\top.\rram.$procmux$1470_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2342: $flatten\top_inst.\top.\rram.$procmux$1471_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2381: $flatten\top_inst.\top.\rram.$procmux$1472_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2420: $flatten\top_inst.\top.\rram.$procmux$1473_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2459: $flatten\top_inst.\top.\rram.$procmux$1474_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2498: $flatten\top_inst.\top.\rram.$procmux$1475_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2537: $flatten\top_inst.\top.\rram.$procmux$1476_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2576: $flatten\top_inst.\top.\rram.$procmux$1477_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2615: $flatten\top_inst.\top.\rram.$procmux$1478_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2654: $flatten\top_inst.\top.\rram.$procmux$1479_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2693: $flatten\top_inst.\top.\rram.$procmux$1480_CMP
  Optimizing cells in module \ice40hx8k.
Performed a total of 63 changes.

19.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

19.12.13. Executing OPT_DFF pass (perform DFF optimizations).

19.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

19.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.16. Rerunning OPT passes. (Maybe there is more to do..)

19.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

19.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.20. Executing OPT_DFF pass (perform DFF optimizations).

19.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.23. Finished OPT passes. (There is nothing left to do.)

19.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$727 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$731 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$721 ($gt).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1033_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1034_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1035_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1036_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1037_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1038_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1033_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1034_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1035_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1036_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1037_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1038_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1033_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1034_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1035_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1036_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1037_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1038_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1033_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1034_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1035_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1036_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1037_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1038_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$206 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1144_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1129_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1090_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1079_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1069_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1060_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1049 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1045_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1042 ($mux).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3221_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3220_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3219_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3218_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3217_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3216_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3215_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3214_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3213_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3212_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3211_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3210_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3209_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3208_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3207_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3151_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3150_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3149_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3148_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3147_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3146_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3145_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3144_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3143_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3142_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3141_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3140_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3139_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3138_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3137_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3118_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3117_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3116_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3115_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3114_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3113_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3112_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3111_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3110_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3109_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3108_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3107_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3106_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3105_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3104_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1341_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1340_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1317_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1304_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1259_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1254 ($mux).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1235_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1234_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1230_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1221 ($mux).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1206 ($mux).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1188_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1183 ($mux).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$procmux$4417_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
Removed top 5 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$228 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$225 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$223 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$221 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$219 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$218 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$216 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$214 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$212 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$210 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$208 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$207 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$4523 ($mux).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$168 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$169 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$171 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$173 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$175 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$177 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$178 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$180 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1480_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1479_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1478_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1477_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1476_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1475_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1474_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1473_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1472_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1471_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1470_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1469_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1468_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1467_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1466_CMP0 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$4490 ($mux).
Removed top 25 bits (of 32) from FF cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procdff$4753 ($adff).
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$2\ALUResult[31:0].
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$3\ALUResult[31:0].
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$5\aluOP[3:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$6\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$8\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$9\cuOP[5:0].
Removed top 25 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$2\ramaddr[31:0].
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722_Y.

19.14. Executing PEEPOPT pass (run peephole optimizers).

19.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

19.16. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ice40hx8k that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$sshr$src/alu.sv:37$242 ($sshr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4929 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$207_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$208_Y $flatten\top_inst.\top.\arith.$procmux$1129_CMP $auto$opt_reduce.cc:134:opt_pmux$4931 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shr$src/alu.sv:45$244 ($shr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4929 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$207_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$208_Y $flatten\top_inst.\top.\arith.$procmux$1115_CMP $auto$opt_reduce.cc:134:opt_pmux$4931 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shl$src/alu.sv:29$240 ($shl):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4929 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$207_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$208_Y $flatten\top_inst.\top.\arith.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$4931 }.
    No candidates found.

19.17. Executing TECHMAP pass (map to technology primitives).

19.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

19.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

19.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$246 ($add).
  creating $macc model for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$248 ($sub).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
  creating $macc model for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$231 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728.
  creating $alu model for $macc $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$231.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$248.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$246.
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$257 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$256 ($lt): merged with $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$248.
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$721 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$721: $auto$alumacc.cc:485:replace_alu$5352
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$257: $auto$alumacc.cc:485:replace_alu$5357
  creating $alu cell for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$246: $auto$alumacc.cc:485:replace_alu$5362
  creating $alu cell for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$248, $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$256: $auto$alumacc.cc:485:replace_alu$5365
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37: $auto$alumacc.cc:485:replace_alu$5372
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39: $auto$alumacc.cc:485:replace_alu$5375
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42: $auto$alumacc.cc:485:replace_alu$5378
  creating $alu cell for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$231: $auto$alumacc.cc:485:replace_alu$5381
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$728: $auto$alumacc.cc:485:replace_alu$5384
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$722: $auto$alumacc.cc:485:replace_alu$5387
  created 10 $alu and 0 $macc cells.

19.21. Executing OPT pass (performing simple optimizations).

19.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

19.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

19.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\arith.$procmux$1158: { $flatten\top_inst.\top.\arith.$procmux$1144_CMP $flatten\top_inst.\top.\arith.$procmux$1129_CMP $flatten\top_inst.\top.\arith.$procmux$1115_CMP $flatten\top_inst.\top.\arith.$procmux$1102_CMP $flatten\top_inst.\top.\arith.$procmux$1090_CMP $flatten\top_inst.\top.\arith.$procmux$1079_CMP $flatten\top_inst.\top.\arith.$procmux$1069_CMP $flatten\top_inst.\top.\arith.$procmux$1060_CMP }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

19.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.21.6. Executing OPT_DFF pass (perform DFF optimizations).

19.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

19.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.21.9. Rerunning OPT passes. (Maybe there is more to do..)

19.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

19.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.21.13. Executing OPT_DFF pass (perform DFF optimizations).

19.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.21.16. Finished OPT passes. (There is nothing left to do.)

19.22. Executing MEMORY pass.

19.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

19.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

19.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

19.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

19.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

19.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

19.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

19.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).

19.25. Executing TECHMAP pass (map to technology primitives).

19.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

19.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

19.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.26. Executing ICE40_BRAMINIT pass.

19.27. Executing OPT pass (performing simple optimizations).

19.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~165 debug messages>

19.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$4758 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$4948 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$785_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4957 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$817_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4968 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [0], Q = \top_inst.top.testpc.PC [0]).
Adding EN signal on $auto$ff.cc:266:slice$4968 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [1], Q = \top_inst.top.testpc.PC [1]).
Adding SRST signal on $auto$ff.cc:266:slice$4932 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$844_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Setting constant 0-bit at position 0 on $procdff$4758 ($dlatch) from module ice40hx8k.

19.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 11 unused cells and 102 unused wires.
<suppressed ~17 debug messages>

19.27.5. Rerunning OPT passes. (Removed registers in this run.)

19.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

19.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

19.27.8. Executing OPT_DFF pass (perform DFF optimizations).

19.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

19.27.10. Finished fast OPT passes.

19.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

19.29. Executing OPT pass (performing simple optimizations).

19.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

19.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\controller.$procmux$1191:
      Old ports: A=4'0110, B=4'1001, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0]
      New ports: A=2'10, B=2'01, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1:0]
      New connections: $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [3:2] = { $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [0] $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1] }
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1228:
      Old ports: A={ 5'01110 $auto$wreduce.cc:461:run$5340 [0] }, B={ 41'01111110000010000110010010010101111010001 $auto$wreduce.cc:461:run$5341 [0] }, Y=$flatten\top_inst.\top.\controller.$7\cuOP[5:0]
      New ports: A={ 4'0110 $auto$wreduce.cc:461:run$5340 [0] }, B={ 34'0111110000100011010010101011101001 $auto$wreduce.cc:461:run$5341 [0] }, Y={ $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [4] = $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1271:
      Old ports: A=6'010010, B={ 41'01001101010001011001011101100001100101101 $auto$wreduce.cc:461:run$5341 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0]
      New ports: A=4'0010, B={ 27'001101000110011110001001101 $auto$wreduce.cc:461:run$5341 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0] [3:0]
      New connections: $flatten\top_inst.\top.\controller.$5\cuOP[5:0] [5:4] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1299:
      Old ports: A=6'100110, B=18'001111010000010001, Y=$flatten\top_inst.\top.\controller.$4\cuOP[5:0]
      New ports: A=5'10010, B=15'001110100001001, Y={ $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [5:3] $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1:0] }
      New connections: $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [2] = $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1310:
      Old ports: A=6'100110, B=30'001010001011001100001101001110, Y=$flatten\top_inst.\top.\controller.$3\cuOP[5:0]
      New ports: A=5'10110, B=25'0101001011011000110101110, Y={ $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1324:
      Old ports: A=6'100110, B=36'000100000101000110000111001000001001, Y=$flatten\top_inst.\top.\controller.$2\cuOP[5:0]
      New ports: A=5'10110, B=30'001000010100110001110100001001, Y={ $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1420:
      Old ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm 12'000000000000 }, Y=$flatten\top_inst.\top.\signex.$4\immOut[31:0]
      New ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm [19:12] \top_inst.top.signex.imm [10:0] 12'000000000000 }, Y={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$4\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y
      New ports: A=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$801:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$801_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1432:
      Old ports: A=$flatten\top_inst.\top.\signex.$4\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y=$flatten\top_inst.\top.\signex.$3\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$3\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$806:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$801_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$806_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$801_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$806_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1441:
      Old ports: A=$flatten\top_inst.\top.\signex.$3\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y=$flatten\top_inst.\top.\signex.$2\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y={ $flatten\top_inst.\top.\signex.$2\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$2\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$2\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
  Optimizing cells in module \ice40hx8k.
Performed a total of 15 changes.

19.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.6. Executing OPT_DFF pass (perform DFF optimizations).

19.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.9. Rerunning OPT passes. (Maybe there is more to do..)

19.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

19.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4941 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:461:run$5346 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

19.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.16. Rerunning OPT passes. (Maybe there is more to do..)

19.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

19.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.20. Executing OPT_DFF pass (perform DFF optimizations).

19.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.23. Finished OPT passes. (There is nothing left to do.)

19.30. Executing ICE40_WRAPCARRY pass (wrap carries).

19.31. Executing TECHMAP pass (map to technology primitives).

19.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c83925f608704c3fa34790ddcfce9302bdcd7533\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$ccbcf9cf459c8d68b04688a9a5245ee9d295a0be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$b8fb36dbb218c8f6b30171c756a8f8357614d906\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$104d3d1e82b09b030a785dad8a5e608a6d4401f7\_90_pmux for cells of type $pmux.
Using template $paramod$aa21a8cfcdb2d038c61c16c25c37cdf209d597be\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$8e2cd9e836d46c40867c8d0d57053a4e1c3bcdbc\_90_pmux for cells of type $pmux.
Using template $paramod$77db613179eb70c5e4e5c5aca72d602a7c6017b6\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$ae63dc3b50d8e8327f3f28c91126b1f0b8c3a12c\_90_pmux for cells of type $pmux.
Using template $paramod$a2dfbfccaf255934df30ecabbf39af44cb16e7a1\_90_pmux for cells of type $pmux.
Using template $paramod$d7d291546b4dfc9bc743ff469017e2c721a2385d\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$bf8e268f26361094a16ad6650df0ad1ca719658a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~2889 debug messages>

19.32. Executing OPT pass (performing simple optimizations).

19.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2710 debug messages>

19.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~9435 debug messages>
Removed a total of 3145 cells.

19.32.3. Executing OPT_DFF pass (perform DFF optimizations).

19.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 199 unused cells and 3201 unused wires.
<suppressed ~200 debug messages>

19.32.5. Finished fast OPT passes.

19.33. Executing ICE40_OPT pass (performing simple optimizations).

19.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5352.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$5352.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5378.slice[0].carry: CO=\top_inst.top.testpc.PC [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5384.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5387.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

19.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~18 debug messages>

19.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.33.4. Executing OPT_DFF pass (perform DFF optimizations).

19.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

19.33.6. Rerunning OPT passes. (Removed registers in this run.)

19.33.7. Running ICE40 specific optimizations.

19.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.33.10. Executing OPT_DFF pass (perform DFF optimizations).

19.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.33.12. Finished OPT passes. (There is nothing left to do.)

19.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

19.35. Executing TECHMAP pass (map to technology primitives).

19.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
No more expansions possible.
<suppressed ~2174 debug messages>

19.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5378.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5384.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5387.slice[0].carry ($lut).

19.38. Executing ICE40_OPT pass (performing simple optimizations).

19.38.1. Running ICE40 specific optimizations.

19.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~269 debug messages>

19.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

19.38.4. Executing OPT_DFF pass (perform DFF optimizations).

19.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 12012 unused wires.
<suppressed ~1 debug messages>

19.38.6. Rerunning OPT passes. (Removed registers in this run.)

19.38.7. Running ICE40 specific optimizations.

19.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.38.10. Executing OPT_DFF pass (perform DFF optimizations).

19.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.38.12. Finished OPT passes. (There is nothing left to do.)

19.39. Executing TECHMAP pass (map to technology primitives).

19.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

19.41. Executing ABC9 pass.

19.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ice40hx8k.
Found 0 SCCs.

19.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.5. Executing PROC pass (convert processes to netlists).

19.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

19.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

19.41.5.4. Executing PROC_INIT pass (extract init attributes).

19.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

19.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

19.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

19.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

19.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

19.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.41.5.12. Executing OPT_EXPR pass (perform const folding).

19.41.6. Executing TECHMAP pass (map to technology primitives).

19.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~129 debug messages>

19.41.7. Executing OPT pass (performing simple optimizations).

19.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFR.
Optimizing module SB_DFFES.

19.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Removed a total of 0 cells.

19.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFR.
  Optimizing cells in module \SB_DFFES.
Performed a total of 0 changes.

19.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Removed a total of 0 cells.

19.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

19.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFR..
Finding unused cells or wires in module \SB_DFFES..

19.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

19.41.7.9. Finished OPT passes. (There is nothing left to do.)

19.41.8. Executing TECHMAP pass (map to technology primitives).

19.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

19.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFES for cells of type SB_DFFES.
Using template SB_DFFR for cells of type SB_DFFR.
No more expansions possible.
<suppressed ~1260 debug messages>

19.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

19.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~918 debug messages>

19.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

19.41.13. Executing TECHMAP pass (map to technology primitives).

19.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~150 debug messages>

19.41.14. Executing OPT pass (performing simple optimizations).

19.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

19.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

19.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

19.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

19.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

19.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

19.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.41.14.16. Finished OPT passes. (There is nothing left to do.)

19.41.15. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

19.41.16. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 5865 cells with 26256 new cells, skipped 9058 cells.
  replaced 3 cell types:
    4933 $_OR_
      34 $_XOR_
     898 $_MUX_
  not replaced 16 cell types:
      21 $scopeinfo
     433 $_NOT_
    4033 $_AND_
       1 SB_PLL40_CORE
     878 SB_DFFE
      71 SB_DFFR
      15 SB_DFFESR
    1135 SB_DFFER
       4 SB_DFFESS
      49 SB_DFFES
    1135 SB_DFFER_$abc9_byp
      71 SB_DFFR_$abc9_byp
     897 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
      19 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     247 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
      49 SB_DFFES_$abc9_byp

19.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.16.3. Executing XAIGER backend.
<suppressed ~2163 debug messages>
Extracted 11762 AND gates and 35930 wires from module `ice40hx8k' to a netlist network with 2176 inputs and 1239 outputs.

19.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

19.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1239  and =   11245  lev =   77 (4.12)  mem = 0.29 MB  box = 2418  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1239  and =   17057  lev =   56 (2.97)  mem = 0.36 MB  ch =  968  box = 2417  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 14 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   17057.  Ch =   798.  Total mem =    3.82 MB. Peak cut mem =    0.19 MB.
ABC: P:  Del = 18099.00.  Ar =    6356.0.  Edge =    23765.  Cut =   112212.  T =     0.02 sec
ABC: P:  Del = 18036.00.  Ar =    5526.0.  Edge =    21729.  Cut =   111512.  T =     0.02 sec
ABC: P:  Del = 18036.00.  Ar =    5252.0.  Edge =    16070.  Cut =   119799.  T =     0.02 sec
ABC: F:  Del = 18036.00.  Ar =    4211.0.  Edge =    14487.  Cut =    88443.  T =     0.02 sec
ABC: A:  Del = 18036.00.  Ar =    3901.0.  Edge =    13677.  Cut =    88259.  T =     0.03 sec
ABC: A:  Del = 18036.00.  Ar =    3816.0.  Edge =    13544.  Cut =    88272.  T =     0.03 sec
ABC: Total time =     0.13 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: yosys-abc: src/aig/gia/giaMfs.c:386: abc::Gia_Man_t* abc::Gia_ManInsertMfs(abc::Gia_Man_t*, abc::Sfm_Ntk_t*, int): Assertion `iLitNew >= 0' failed.
ABC: Aborted (core dumped)
Warning: ABC: execution of command ""/home/shay/a/ece270/bin/yosys-abc" -s -f /tmp/yosys-abc-F0VIZf/abc.script 2>&1" failed: return code 134.

19.41.16.6. Executing AIGER frontend.
<suppressed ~6843 debug messages>
Removed 12381 unused cells and 23090 unused wires.

19.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     3837
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:     1135
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:       71
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      246
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:       49
ABC RESULTS:           input signals:     1290
ABC RESULTS:          output signals:     1011
Removing temp directory.

19.41.17. Executing TECHMAP pass (map to technology primitives).

19.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

19.41.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
No more expansions possible.
<suppressed ~1510 debug messages>

19.42. Executing ICE40_WRAPCARRY pass (wrap carries).

19.43. Executing TECHMAP pass (map to technology primitives).

19.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 224 unused cells and 49417 unused wires.

19.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4098
  1-LUT               21
  2-LUT              522
  3-LUT              922
  4-LUT             2633
  with \SB_CARRY    (#0)  190
  with \SB_CARRY    (#1)  191

Eliminating LUTs.
Number of LUTs:     4098
  1-LUT               21
  2-LUT              522
  3-LUT              922
  4-LUT             2633
  with \SB_CARRY    (#0)  190
  with \SB_CARRY    (#1)  191

Combining LUTs.
Number of LUTs:     4097
  1-LUT               21
  2-LUT              521
  3-LUT              921
  4-LUT             2634
  with \SB_CARRY    (#0)  190
  with \SB_CARRY    (#1)  191

Eliminated 0 LUTs.
Combined 1 LUTs.
<suppressed ~29477 debug messages>

19.45. Executing TECHMAP pass (map to technology primitives).

19.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.45.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$56c6fc98268f6966dd23dcb4af9b8f5298fa7ead\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$a29dc9226a883358910d3758606f48686bda2689\$lut for cells of type $lut.
Using template $paramod$6b7c9c56fc2a32a479d463d5f3b0d3f4673b67f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod$52d96bfa17866bab828b9f1286c638d27fce0ef0\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$219b71aec9a19e7a27754ed85a7d6cdad9e5ec96\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$0d1a522f4785fa313f32f60468421ae26419ee3a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$03da3dcc7c75ea9c9148a6fc634f76a9d0cbefef\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$ba59a6d7bdd6d02f4b42514d6555f56c3dbd5a43\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100010 for cells of type $lut.
Using template $paramod$87f929f78d04b85b83932c4ababc3dc006af4f14\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101010 for cells of type $lut.
Using template $paramod$3ccd4e460eeb40194aa88ef0e5239278bde42035\$lut for cells of type $lut.
Using template $paramod$e85b6eba0dacefc5f73f8748159b8b9599212afc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110011 for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod$9225a1e7171a31391d3103e59bac04fd4b7aa6c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$a5dd9ee10fc2202a29791f7d68d4afcce241aee5\$lut for cells of type $lut.
Using template $paramod$d6a246575d0ba3dcbbccd768ad41b602f82ff057\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$7ccb46ee9b56c39e0a7d82a185b08cb026e04fbc\$lut for cells of type $lut.
Using template $paramod$6e424bd4a747f8421ac946af3d9bb3a47fd0b233\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$8c8483b8dba6dbd9a5f43a97c71ce4530d6e6ded\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$7991e43c533565df3969b82a304afcde859daeba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod$e134ec2a47a2462a591072e65d34fb15b81c90e0\$lut for cells of type $lut.
Using template $paramod$c931cfb0e1b0bcb4c89f5701079577ff981c27b8\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$a6ef2a845efd4ff0d96bc4fd2f06cc3516fa63ff\$lut for cells of type $lut.
Using template $paramod$f4c640ab60ad160388bbc71b56173ddf9879f8c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$6695e6c06e585275b2860979e9fd110a3e22d5f7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$1cec58bfb33a7a51c359586aade8e947536c006e\$lut for cells of type $lut.
Using template $paramod$f405ee362848dd1a47c58160f854302f6ecf95ff\$lut for cells of type $lut.
Using template $paramod$c07d61aaf1d93e15249de987e8fd0ca391dbd52a\$lut for cells of type $lut.
Using template $paramod$9f6bc32305fc769fa11e4327bee073e3fbe84018\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$3fd3cd243a8b2f71b0ffe04bdaebf6ad83bcc78e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod$2b81c22187dcd49311a976bb63273aa43c4d3b68\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$9891217114ca63a6e9d48073351d843bb1d46faf\$lut for cells of type $lut.
Using template $paramod$c45d3533d152b298062797affe8212277f8912f1\$lut for cells of type $lut.
Using template $paramod$78d4fd6f1f8beb7a6672c0513f14b11708407288\$lut for cells of type $lut.
Using template $paramod$e46703b423a661cd7d311c41833ea655969702cc\$lut for cells of type $lut.
Using template $paramod$75d5c453cca75cc7a7ca320c4fb7be0932b6aaa7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$7843e8c123bb8acf2cb35298776a29dcf1524827\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$e5bf0d84da9b26dd4caa7cb2fdb1051d329babbf\$lut for cells of type $lut.
Using template $paramod$6a3d1b4c6389888034ca851571f0d03f46d1c4e9\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$e3232e0a90c8340ac10328f8e4e3ccd56fa7779b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$1123701a1633b44774373cde6d7cd5b6bc3f1b0a\$lut for cells of type $lut.
Using template $paramod$0e7ce19e5da99c6675c7a5220f7cc55270b24ac0\$lut for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$39825c5ed3d135e502be79829033166f1762d78b\$lut for cells of type $lut.
Using template $paramod$8829675bb8c52553aed9f101ec0d5ef0c865e5c7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$ee5adfa1bcc7e4b8948c774483a7d19aaddb4759\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$1644affdabe7f65febd25ca1c4d1e050be54e54f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$6be53ab59e0a69757fc32adb071ddcb64e8c87b6\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$183ec76ed3429a430a8be24b57f3de734985f568\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$cdc5bba2585477f1744fd1f869bebc8beb23d707\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$fcff9a7b1687e357a40264efcefe8443c8b2971a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$703a7ae3e3e987bf860b577048c8f35c4b341275\$lut for cells of type $lut.
Using template $paramod$687a1fc43b1540979653986a530bcbfe8e28ce5a\$lut for cells of type $lut.
Using template $paramod$b68f9800cc1bf69afcfbc0567a25e43ebb01456c\$lut for cells of type $lut.
Using template $paramod$3e9386ccff279159163720f27709d6c1649de9df\$lut for cells of type $lut.
Using template $paramod$529baf23c57d5ed871d62e547aaaa8bb53e364ce\$lut for cells of type $lut.
Using template $paramod$82a00bf0f959a345aaec45c197de61b70ee9c703\$lut for cells of type $lut.
Using template $paramod$5f99aa1a31b4f0c356281a67e16706e1e689d29f\$lut for cells of type $lut.
Using template $paramod$e205610488975feb8dd319b9b917812c4a953c28\$lut for cells of type $lut.
Using template $paramod$b9305c669fd883d24574655b402c7ff9f28efb1a\$lut for cells of type $lut.
Using template $paramod$17fd36fab32bce162e5828682c2ba9fa7f9e273b\$lut for cells of type $lut.
Using template $paramod$5a490b0e00aeb3aa961ff44c01138435d4948c4d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$734cd1512f671d92bc4f41153da0d9781801dd98\$lut for cells of type $lut.
Using template $paramod$19457468c03b53ec09024ada785c6816b7d0407d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$02750f8d568bd99efbda01449a05e084a3143ca8\$lut for cells of type $lut.
Using template $paramod$9238b4f918408168668f80b2f347ff8fe515d0e4\$lut for cells of type $lut.
Using template $paramod$fcc4c770d778df8a1eb6afe48bd4c202a6c1ff2b\$lut for cells of type $lut.
Using template $paramod$e1f6f26c595b714b23aaf5b46e4ff285d7dd2807\$lut for cells of type $lut.
Using template $paramod$8384e66d408d22ab39dfb451efb7879731befeb8\$lut for cells of type $lut.
Using template $paramod$c52228221673cb40e85e683314eb992be6bc9613\$lut for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod$4380d164d25d6a9a3a11f9976a02840f91855a4a\$lut for cells of type $lut.
Using template $paramod$480d3b9fc7c6a57575657fd8f0dc2a86c4cc650e\$lut for cells of type $lut.
Using template $paramod$cfd807e22868a8191a7b70d1505818467d62f24c\$lut for cells of type $lut.
Using template $paramod$c796465325e8612408ffd6216ec3001cb65cf6eb\$lut for cells of type $lut.
Using template $paramod$edf0f1ca1d51bddab33b022d26d3da5ca2294e0d\$lut for cells of type $lut.
Using template $paramod$9a20e5eb914da7530de8ea5af782be66b9acb237\$lut for cells of type $lut.
Using template $paramod$df23d368a6ae8908771963811f5ab56f622887ca\$lut for cells of type $lut.
Using template $paramod$15efa44280f2a77bf023b68f95d9df5681d9dd99\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$06af8e98b1ee32760d0eff675cf4988d49cbfdfa\$lut for cells of type $lut.
Using template $paramod$21e01e9703837619094c5a3f0a59b2dce7a77b99\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$dbd6bfc0079f30bdbd8251243755394b48ae1fbb\$lut for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$4b815e6c998e04ad0d0242e44b0c58a7a9d0b3b6\$lut for cells of type $lut.
Using template $paramod$e56ed438824ef045f2f10081792331cde7187198\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod$dcf08e3cf5571973d6310a4a5eed682d194e9cfb\$lut for cells of type $lut.
Using template $paramod$77268019239d7d46332da9cb6aa01cbf3ba29ee3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$0331e023d83b8009e60defb446ce9fa640b122c7\$lut for cells of type $lut.
Using template $paramod$afdefd64f115cbb578c1cd4bf8426ecfef85ae91\$lut for cells of type $lut.
Using template $paramod$d1dc785fc5b97e7bec2be30ee7302c8cf250ad22\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod$1ec3fb8fd1fa98216cb96b4422de32c4ba5f6c9c\$lut for cells of type $lut.
Using template $paramod$5321e04f7ce32c091123c3570ab562efb1c81402\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$7439622cb122a415c875714fff5bbe962ce63055\$lut for cells of type $lut.
Using template $paramod$dac6da6078e90b6a8954de49b418c2e563670665\$lut for cells of type $lut.
Using template $paramod$14fbde811193e604a612ce5a9928f82cea4b8324\$lut for cells of type $lut.
Using template $paramod$282b75afd81d0541e0a14d320e58e1e25a6330a3\$lut for cells of type $lut.
Using template $paramod$23b135911b7c14b5b19b5329e5903bcf58b44188\$lut for cells of type $lut.
Using template $paramod$8da02996bc6ce025fcc2ce1dafd66f4b38a423f1\$lut for cells of type $lut.
Using template $paramod$52953750219effadf43093a566baf492fdd6b6c8\$lut for cells of type $lut.
Using template $paramod$a8ff24295e45aabda71972c6a839bf0640df5e86\$lut for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$e277a522d8a930c8c8c8cdb56d33d42914aefec4\$lut for cells of type $lut.
Using template $paramod$f4d688c50e3460901fc1eae377dd6304eb1583df\$lut for cells of type $lut.
Using template $paramod$338ce46cf7ff44b9974887dd2adee6c4e0530bed\$lut for cells of type $lut.
Using template $paramod$fbed19fb84ee7c8a884778d28a96daea96245184\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod$35cd62ff599a2f7698652dca28a356dfcfb2f0ee\$lut for cells of type $lut.
Using template $paramod$8cac5452d526045503c5864c3a1dac0121c7053e\$lut for cells of type $lut.
Using template $paramod$ea79e410ad0f4fc3326666c891e1f3992816d636\$lut for cells of type $lut.
Using template $paramod$f5c23b297b0a8ca096118d63d2c74ddd6cbea134\$lut for cells of type $lut.
Using template $paramod$ee82f1504b2c48e70160208feb4e1f2a1b612b8d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod$61eacb568fd01a9004c70b5081067fd3655359f6\$lut for cells of type $lut.
Using template $paramod$9f76f0d55cde1c28a50b02d7af82a82919ddf125\$lut for cells of type $lut.
Using template $paramod$4fd3428c4b8b1accf8f8fb4bb88555a2b5fa688d\$lut for cells of type $lut.
Using template $paramod$d15734f13d7fdeb6c2aa33f6a1a73088340b6ed0\$lut for cells of type $lut.
Using template $paramod$a63014c5e66a56dc5e61848489c809a59ebe7c34\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$f87bcf1791971b4eaa30f3f28437044fef878a04\$lut for cells of type $lut.
Using template $paramod$66658cbed86a8310f9b7ba1190d35eff90ee749b\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod$d5a37b92345ff038953b03524b014e8a09fc93d9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$9a6965d4f53d69e345bd8d48283856520a30225e\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$db64416b543d340fdda2bc03bfc4a15494441447\$lut for cells of type $lut.
Using template $paramod$70f68cc10fbeada9b6fa90c3bb75475e348ca467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$bcfcccb17b1cb43a18644d6d211ef2e5a77b1888\$lut for cells of type $lut.
Using template $paramod$c3a2e8fcf59c113e331bf85fe5f8bd2765b5fc92\$lut for cells of type $lut.
Using template $paramod$1dd08ae0c9c75c235d9038ee381888349f8b521a\$lut for cells of type $lut.
Using template $paramod$5f496f7a17b34803c6c54860f8e4d6216cf793ef\$lut for cells of type $lut.
Using template $paramod$7aea25f7ee238ed7d82f2fff8cfbb530da49fc2f\$lut for cells of type $lut.
Using template $paramod$98488d0be2bfc1ccdc2c668c3d679844a3572056\$lut for cells of type $lut.
Using template $paramod$617875f1820e7a66088cd1d4a9a7fcdbea62d978\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$93c58ea20e994b3c3da0120b8391acaed25a5a15\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111101 for cells of type $lut.
Using template $paramod$cf545cad73b181b67b2902722a0a8b42cb93c9a7\$lut for cells of type $lut.
Using template $paramod$7713de950f70b85eb84b0db8b7deab5297f20eb0\$lut for cells of type $lut.
Using template $paramod$ed6a971ce1a000cfab6af57d4e3d4f75a3aea371\$lut for cells of type $lut.
Using template $paramod$257775e2801c46338235e620eeca47122595db5e\$lut for cells of type $lut.
Using template $paramod$d753e84fc2f0e7a66b7a461c408c0d55bd6dccba\$lut for cells of type $lut.
Using template $paramod$b82dcf45907705ea8924ab29349d98c83b3e67f4\$lut for cells of type $lut.
Using template $paramod$71d17df9460528535609475035c8045863f5d33c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111011 for cells of type $lut.
Using template $paramod$42e1bea8d6e2c4aaaab94cda28ce8d0e1c277621\$lut for cells of type $lut.
Using template $paramod$a707638522ffbfa735b239d390a304740a3dce0f\$lut for cells of type $lut.
Using template $paramod$033da4fda995765d0263c8d0c83dff50f2754af9\$lut for cells of type $lut.
Using template $paramod$5d7249c99111fe3998e71931de24954503d86ff1\$lut for cells of type $lut.
Using template $paramod$4a9356947b091c2db7e50061672382c7ee887798\$lut for cells of type $lut.
Using template $paramod$aa38b4fa8c17a0edbff2dfbd7d7bf3cfafef41ae\$lut for cells of type $lut.
Using template $paramod$1673286b2d22164567ed07266dbb6815c0416063\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$1c8221acbcc5f9a182dc2b7f3fc79ea6dea84bbc\$lut for cells of type $lut.
Using template $paramod$f65af1b660a013aeaba9a5dc41e6bdede642e3c3\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7701 debug messages>
Removed 0 unused cells and 10945 unused wires.

19.46. Executing AUTONAME pass.
Renamed 481691 objects in module ice40hx8k (319 iterations).
<suppressed ~9136 debug messages>

19.47. Executing HIERARCHY pass (managing design hierarchy).

19.47.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

19.47.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

19.48. Printing statistics.

=== ice40hx8k ===

   Number of wires:               2870
   Number of wire bits:          11889
   Number of public wires:        2870
   Number of public wire bits:   11889
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6510
     $scopeinfo                     21
     SB_CARRY                      239
     SB_DFFE                       878
     SB_DFFER                     1135
     SB_DFFES                       49
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        71
     SB_LUT4                      4097
     SB_PLL40_CORE                   1

19.49. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

19.50. Executing JSON backend.

Warnings: 72 unique messages, 72 total
End of script. Logfile hash: 4626de92d4, CPU: user 7.69s system 0.08s, MEM: 179.56 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 40% 1x abc9_exe (5 sec), 12% 39x opt_expr (1 sec), ...
