
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv src/top.sv src/top1.sv src/memory_control.sv src/mux.sv src/pc.sv src/ram.sv src/register_file.sv src/request_unit.sv src/request.sv src/ru_ram.sv src/signExtender.sv src/writeToReg.sv src/control.sv src/alu.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/top.sv
Parsing SystemVerilog input from `src/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/top1.sv
Parsing SystemVerilog input from `src/top1.sv' to AST representation.
Generating RTLIL representation for module `\top1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/memory_control.sv
Parsing SystemVerilog input from `src/memory_control.sv' to AST representation.
Generating RTLIL representation for module `\memory_control'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/mux.sv
Parsing SystemVerilog input from `src/mux.sv' to AST representation.
Generating RTLIL representation for module `\mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/pc.sv
Parsing SystemVerilog input from `src/pc.sv' to AST representation.
Generating RTLIL representation for module `\pc'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/ram.sv
Parsing SystemVerilog input from `src/ram.sv' to AST representation.
Generating RTLIL representation for module `\ram'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/register_file.sv
Parsing SystemVerilog input from `src/register_file.sv' to AST representation.
Generating RTLIL representation for module `\register_file'.
Warning: Replacing memory \nxt_register with list of registers. See src/register_file.sv:60
Warning: Replacing memory \register with list of registers. See src/register_file.sv:47
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/request_unit.sv
Parsing SystemVerilog input from `src/request_unit.sv' to AST representation.
Generating RTLIL representation for module `\request_unit'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/request.sv
Parsing SystemVerilog input from `src/request.sv' to AST representation.
Generating RTLIL representation for module `\request'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/ru_ram.sv
Parsing SystemVerilog input from `src/ru_ram.sv' to AST representation.
Generating RTLIL representation for module `\ru_ram'.
Warning: Replacing memory \nxt_memory with list of registers. See src/ru_ram.sv:31
Warning: Replacing memory \memory with list of registers. See src/ru_ram.sv:0
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/signExtender.sv
Parsing SystemVerilog input from `src/signExtender.sv' to AST representation.
Generating RTLIL representation for module `\signExtender'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/writeToReg.sv
Parsing SystemVerilog input from `src/writeToReg.sv' to AST representation.
Generating RTLIL representation for module `\writeToReg'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/control.sv
Parsing SystemVerilog input from `src/control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/alu.sv
Parsing SystemVerilog input from `src/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \top1
Used module:             \ram
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

19.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

19.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

19.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \top1
Used module:             \ram
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

19.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \top1
Used module:             \ram
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removing unused module `\ru_ram'.
Removing unused module `\request'.
Removing unused module `\request_unit'.
Removing unused module `\memory_control'.
Removed 6 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port top1.ra.read_enable from 32 bits to 1 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ram.$proc$src/ram.sv:0$90'.
Cleaned up 0 empty switches.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$560 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$549 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$546 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$543 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$540 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$537 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$522 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$511 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$508 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$505 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$502 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$499 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$735 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$707 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 11 switch rules as full_case in process $proc$src/alu.sv:0$260 in module alu.
Removed 2 dead cases from process $proc$src/control.sv:0$255 in module control.
Marked 9 switch rules as full_case in process $proc$src/control.sv:0$255 in module control.
Marked 1 switch rules as full_case in process $proc$src/writeToReg.sv:0$251 in module writeToReg.
Marked 4 switch rules as full_case in process $proc$src/signExtender.sv:0$226 in module signExtender.
Removed 1 dead cases from process $proc$src/register_file.sv:0$183 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$183 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$180 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$180 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$172 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/register_file.sv:0$172 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:43$102 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/ram.sv:185$76 in module ram.
Removed 1 dead cases from process $proc$src/ram.sv:0$74 in module ram.
Marked 2 switch rules as full_case in process $proc$src/ram.sv:0$74 in module ram.
Marked 1 switch rules as full_case in process $proc$src/ram.sv:152$72 in module ram.
Marked 2 switch rules as full_case in process $proc$src/pc.sv:0$37 in module pc.
Marked 1 switch rules as full_case in process $proc$src/pc.sv:32$35 in module pc.
Marked 1 switch rules as full_case in process $proc$src/mux.sv:0$34 in module mux.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 6 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 47 redundant assignments.
Promoted 135 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$570'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$559'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$548'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$545'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$542'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$536'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$534'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$532'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$510'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$507'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$504'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$498'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$496'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$754'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$753'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$752'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$751'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$750'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$749'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$734'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$733'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$732'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$731'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$730'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$729'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$728'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$727'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$726'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$546'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$540'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$508'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$502'.
Found async reset \nRST in `\register_file.$proc$src/register_file.sv:43$102'.
Found async reset \nRst in `\ram.$proc$src/ram.sv:152$72'.
Found async reset \nRST in `\pc.$proc$src/pc.sv:32$35'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

19.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~75 debug messages>

19.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$570'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$560'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$559'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$549'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$548'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$546'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$545'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$543'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$542'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$540'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$537'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$536'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$535'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$534'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$533'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$532'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$522'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$511'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$510'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$508'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$507'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$505'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$504'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$502'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$499'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$498'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$497'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$496'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$495'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$754'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$753'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$752'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$751'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$750'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$749'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$734'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$733'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$732'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$731'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$730'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$729'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$728'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$727'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$726'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\alu.$proc$src/alu.sv:0$260'.
     1/13: $3\ALUResult[31:0]
     2/13: $2\ALUResult[31:0]
     3/13: $9\zero[0:0]
     4/13: $8\zero[0:0]
     5/13: $7\zero[0:0]
     6/13: $6\zero[0:0]
     7/13: $5\zero[0:0]
     8/13: $4\zero[0:0]
     9/13: $3\zero[0:0]
    10/13: $2\zero[0:0]
    11/13: $1\zero[0:0]
    12/13: $1\negative[0:0]
    13/13: $1\ALUResult[31:0]
Creating decoders for process `\control.$proc$src/control.sv:0$255'.
     1/23: $9\cuOP[5:0]
     2/23: $6\aluOP[3:0]
     3/23: $8\cuOP[5:0]
     4/23: $5\aluOP[3:0]
     5/23: $7\cuOP[5:0]
     6/23: $4\aluOP[3:0]
     7/23: $6\cuOP[5:0]
     8/23: $3\aluOP[3:0]
     9/23: $5\cuOP[5:0]
    10/23: $2\aluOP[3:0]
    11/23: $4\cuOP[5:0]
    12/23: $3\cuOP[5:0]
    13/23: $2\cuOP[5:0]
    14/23: $1\regWrite[0:0]
    15/23: $1\rd[4:0]
    16/23: $1\imm[19:0]
    17/23: $1\cuOP[5:0]
    18/23: $1\reg_2[4:0]
    19/23: $1\reg_1[4:0]
    20/23: $1\aluOP[3:0]
    21/23: $1\memRead[0:0]
    22/23: $1\memWrite[0:0]
    23/23: $1\aluSrc[0:0]
Creating decoders for process `\writeToReg.$proc$src/writeToReg.sv:0$251'.
     1/1: $1\writeData[31:0]
Creating decoders for process `\signExtender.$proc$src/signExtender.sv:0$226'.
     1/4: $4\immOut[31:0]
     2/4: $3\immOut[31:0]
     3/4: $2\immOut[31:0]
     4/4: $1\immOut[31:0]
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$183'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:69$101_DATA[31:0]$185
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$180'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:68$100_DATA[31:0]$182
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$172'.
     1/66: $2\nxt_register[0][31:0]
     2/66: $2\nxt_register[31][31:0]
     3/66: $2\nxt_register[30][31:0]
     4/66: $2\nxt_register[29][31:0]
     5/66: $2\nxt_register[28][31:0]
     6/66: $2\nxt_register[27][31:0]
     7/66: $2\nxt_register[26][31:0]
     8/66: $2\nxt_register[25][31:0]
     9/66: $2\nxt_register[24][31:0]
    10/66: $2\nxt_register[23][31:0]
    11/66: $2\nxt_register[22][31:0]
    12/66: $2\nxt_register[21][31:0]
    13/66: $2\nxt_register[20][31:0]
    14/66: $2\nxt_register[19][31:0]
    15/66: $2\nxt_register[18][31:0]
    16/66: $2\nxt_register[17][31:0]
    17/66: $2\nxt_register[16][31:0]
    18/66: $2\nxt_register[15][31:0]
    19/66: $2\nxt_register[14][31:0]
    20/66: $2\nxt_register[13][31:0]
    21/66: $2\nxt_register[12][31:0]
    22/66: $2\nxt_register[11][31:0]
    23/66: $2\nxt_register[10][31:0]
    24/66: $2\nxt_register[9][31:0]
    25/66: $2\nxt_register[8][31:0]
    26/66: $2\nxt_register[7][31:0]
    27/66: $2\nxt_register[6][31:0]
    28/66: $2\nxt_register[5][31:0]
    29/66: $2\nxt_register[4][31:0]
    30/66: $2\nxt_register[3][31:0]
    31/66: $2\nxt_register[2][31:0]
    32/66: $2\nxt_register[1][31:0]
    33/66: $1\nxt_register[31][31:0]
    34/66: $1\nxt_register[30][31:0]
    35/66: $1\nxt_register[29][31:0]
    36/66: $1\nxt_register[28][31:0]
    37/66: $1\nxt_register[27][31:0]
    38/66: $1\nxt_register[26][31:0]
    39/66: $1\nxt_register[25][31:0]
    40/66: $1\nxt_register[24][31:0]
    41/66: $1\nxt_register[23][31:0]
    42/66: $1\nxt_register[22][31:0]
    43/66: $1\nxt_register[21][31:0]
    44/66: $1\nxt_register[20][31:0]
    45/66: $1\nxt_register[19][31:0]
    46/66: $1\nxt_register[18][31:0]
    47/66: $1\nxt_register[17][31:0]
    48/66: $1\nxt_register[16][31:0]
    49/66: $1\nxt_register[15][31:0]
    50/66: $1\nxt_register[14][31:0]
    51/66: $1\nxt_register[13][31:0]
    52/66: $1\nxt_register[12][31:0]
    53/66: $1\nxt_register[11][31:0]
    54/66: $1\nxt_register[10][31:0]
    55/66: $1\nxt_register[9][31:0]
    56/66: $1\nxt_register[8][31:0]
    57/66: $1\nxt_register[7][31:0]
    58/66: $1\nxt_register[6][31:0]
    59/66: $1\nxt_register[5][31:0]
    60/66: $1\nxt_register[4][31:0]
    61/66: $1\nxt_register[3][31:0]
    62/66: $1\nxt_register[2][31:0]
    63/66: $1\nxt_register[1][31:0]
    64/66: $1\nxt_register[0][31:0]
    65/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$99_ADDR[4:0]$178
    66/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$99_DATA[31:0]$179
Creating decoders for process `\register_file.$proc$src/register_file.sv:43$102'.
     1/66: $1$fordecl_block$95.i[31:0]$171
     2/66: $0\register[31][31:0]
     3/66: $0\register[30][31:0]
     4/66: $0\register[29][31:0]
     5/66: $0\register[28][31:0]
     6/66: $0\register[27][31:0]
     7/66: $0\register[26][31:0]
     8/66: $0\register[25][31:0]
     9/66: $0\register[24][31:0]
    10/66: $0\register[23][31:0]
    11/66: $0\register[22][31:0]
    12/66: $0\register[21][31:0]
    13/66: $0\register[20][31:0]
    14/66: $0\register[19][31:0]
    15/66: $0\register[18][31:0]
    16/66: $0\register[17][31:0]
    17/66: $0\register[16][31:0]
    18/66: $0\register[15][31:0]
    19/66: $0\register[14][31:0]
    20/66: $0\register[13][31:0]
    21/66: $0\register[12][31:0]
    22/66: $0\register[11][31:0]
    23/66: $0\register[10][31:0]
    24/66: $0\register[9][31:0]
    25/66: $0\register[8][31:0]
    26/66: $0\register[7][31:0]
    27/66: $0\register[6][31:0]
    28/66: $0\register[5][31:0]
    29/66: $0\register[4][31:0]
    30/66: $0\register[3][31:0]
    31/66: $0\register[2][31:0]
    32/66: $0\register[1][31:0]
    33/66: $1$fordecl_block$91.$for_loop$92[31].$fordecl_block$93.j[31:0]$170
    34/66: $1$fordecl_block$91.$for_loop$92[30].$fordecl_block$93.j[31:0]$169
    35/66: $1$fordecl_block$91.$for_loop$92[29].$fordecl_block$93.j[31:0]$168
    36/66: $1$fordecl_block$91.$for_loop$92[28].$fordecl_block$93.j[31:0]$167
    37/66: $1$fordecl_block$91.$for_loop$92[27].$fordecl_block$93.j[31:0]$166
    38/66: $1$fordecl_block$91.$for_loop$92[26].$fordecl_block$93.j[31:0]$165
    39/66: $1$fordecl_block$91.$for_loop$92[25].$fordecl_block$93.j[31:0]$164
    40/66: $1$fordecl_block$91.$for_loop$92[24].$fordecl_block$93.j[31:0]$163
    41/66: $1$fordecl_block$91.$for_loop$92[23].$fordecl_block$93.j[31:0]$162
    42/66: $1$fordecl_block$91.$for_loop$92[22].$fordecl_block$93.j[31:0]$161
    43/66: $1$fordecl_block$91.$for_loop$92[21].$fordecl_block$93.j[31:0]$160
    44/66: $1$fordecl_block$91.$for_loop$92[20].$fordecl_block$93.j[31:0]$159
    45/66: $1$fordecl_block$91.$for_loop$92[19].$fordecl_block$93.j[31:0]$158
    46/66: $1$fordecl_block$91.$for_loop$92[18].$fordecl_block$93.j[31:0]$157
    47/66: $1$fordecl_block$91.$for_loop$92[17].$fordecl_block$93.j[31:0]$156
    48/66: $1$fordecl_block$91.$for_loop$92[16].$fordecl_block$93.j[31:0]$155
    49/66: $1$fordecl_block$91.$for_loop$92[15].$fordecl_block$93.j[31:0]$154
    50/66: $1$fordecl_block$91.$for_loop$92[14].$fordecl_block$93.j[31:0]$153
    51/66: $1$fordecl_block$91.$for_loop$92[13].$fordecl_block$93.j[31:0]$152
    52/66: $1$fordecl_block$91.$for_loop$92[12].$fordecl_block$93.j[31:0]$151
    53/66: $1$fordecl_block$91.$for_loop$92[11].$fordecl_block$93.j[31:0]$150
    54/66: $1$fordecl_block$91.$for_loop$92[10].$fordecl_block$93.j[31:0]$149
    55/66: $1$fordecl_block$91.$for_loop$92[9].$fordecl_block$93.j[31:0]$148
    56/66: $1$fordecl_block$91.$for_loop$92[8].$fordecl_block$93.j[31:0]$147
    57/66: $1$fordecl_block$91.$for_loop$92[7].$fordecl_block$93.j[31:0]$146
    58/66: $1$fordecl_block$91.$for_loop$92[6].$fordecl_block$93.j[31:0]$145
    59/66: $1$fordecl_block$91.$for_loop$92[5].$fordecl_block$93.j[31:0]$144
    60/66: $1$fordecl_block$91.$for_loop$92[4].$fordecl_block$93.j[31:0]$143
    61/66: $1$fordecl_block$91.$for_loop$92[3].$fordecl_block$93.j[31:0]$142
    62/66: $1$fordecl_block$91.$for_loop$92[2].$fordecl_block$93.j[31:0]$141
    63/66: $1$fordecl_block$91.$for_loop$92[1].$fordecl_block$93.j[31:0]$140
    64/66: $1$fordecl_block$91.$for_loop$92[0].$fordecl_block$93.j[31:0]$139
    65/66: $1$fordecl_block$91.i[31:0]$138
    66/66: $0\register[0][31:0]
Creating decoders for process `\ram.$proc$src/ram.sv:185$76'.
     1/3: $1$memwr$\memory$src/ram.sv:187$71_EN[31:0]$82
     2/3: $1$memwr$\memory$src/ram.sv:187$71_DATA[31:0]$81
     3/3: $1$memwr$\memory$src/ram.sv:187$71_ADDR[5:0]$80
Creating decoders for process `\ram.$proc$src/ram.sv:0$74'.
     1/4: $2\next_state[0:0]
     2/4: $2\pc_enable[0:0]
     3/4: $1\next_state[0:0]
     4/4: $1\pc_enable[0:0]
Creating decoders for process `\ram.$proc$src/ram.sv:152$72'.
     1/1: $0\state[0:0]
Creating decoders for process `\pc.$proc$src/pc.sv:0$37'.
     1/2: $2\next_pc[31:0]
     2/2: $1\next_pc[31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:32$35'.
     1/1: $0\PC[31:0]
Creating decoders for process `\mux.$proc$src/mux.sv:0$34'.
     1/1: $1\out[31:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

19.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\alu.\zero' from process `\alu.$proc$src/alu.sv:0$260'.
No latch inferred for signal `\alu.\negative' from process `\alu.$proc$src/alu.sv:0$260'.
No latch inferred for signal `\alu.\ALUResult' from process `\alu.$proc$src/alu.sv:0$260'.
No latch inferred for signal `\control.\regWrite' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\aluSrc' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\memWrite' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\memRead' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\aluOP' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\cuOP' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\imm' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\reg_1' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\reg_2' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\control.\rd' from process `\control.$proc$src/control.sv:0$255'.
No latch inferred for signal `\writeToReg.\writeData' from process `\writeToReg.$proc$src/writeToReg.sv:0$251'.
No latch inferred for signal `\signExtender.\immOut' from process `\signExtender.$proc$src/signExtender.sv:0$226'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:69$101_DATA' from process `\register_file.$proc$src/register_file.sv:0$183'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:68$100_DATA' from process `\register_file.$proc$src/register_file.sv:0$180'.
No latch inferred for signal `\register_file.$fordecl_block$97.i' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[0]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[1]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[2]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[3]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[4]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[5]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[6]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[7]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[8]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[9]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[10]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[11]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[12]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[13]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[14]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[15]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[16]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[17]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[18]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[19]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[20]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[21]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[22]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[23]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[24]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[25]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[26]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[27]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[28]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[29]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[30]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.\nxt_register[31]' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$99_ADDR' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$99_DATA' from process `\register_file.$proc$src/register_file.sv:0$172'.
No latch inferred for signal `\ram.\pc_enable' from process `\ram.$proc$src/ram.sv:0$74'.
No latch inferred for signal `\ram.\next_state' from process `\ram.$proc$src/ram.sv:0$74'.
No latch inferred for signal `\pc.\next_pc' from process `\pc.$proc$src/pc.sv:0$37'.
No latch inferred for signal `\mux.\out' from process `\mux.$proc$src/mux.sv:0$34'.

19.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567'.
  created $adff cell `$procdff$2833' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$560'.
  created $dff cell `$procdff$2834' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556'.
  created $adff cell `$procdff$2835' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$549'.
  created $dff cell `$procdff$2836' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$546'.
  created $adff cell `$procdff$2837' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$543'.
  created $dff cell `$procdff$2838' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$540'.
  created $adff cell `$procdff$2839' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$537'.
  created $dff cell `$procdff$2840' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$535'.
  created $dff cell `$procdff$2841' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$533'.
  created $dff cell `$procdff$2842' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529'.
  created $adff cell `$procdff$2843' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$522'.
  created $dff cell `$procdff$2844' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518'.
  created $adff cell `$procdff$2845' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$511'.
  created $dff cell `$procdff$2846' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$508'.
  created $adff cell `$procdff$2847' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$505'.
  created $dff cell `$procdff$2848' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$502'.
  created $adff cell `$procdff$2849' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$499'.
  created $dff cell `$procdff$2850' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$497'.
  created $dff cell `$procdff$2851' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$495'.
  created $dff cell `$procdff$2852' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2853' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2854' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2855' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2856' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2857' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
  created $dff cell `$procdff$2858' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2859' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2860' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2861' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2862' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2863' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2864' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2865' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2866' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
  created $dff cell `$procdff$2867' with positive edge clock.
Creating register for signal `\register_file.$fordecl_block$91.i' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2868' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[0].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2869' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[1].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2870' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[2].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2871' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[3].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2872' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[4].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2873' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[5].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2874' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[6].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2875' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[7].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2876' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[8].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2877' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[9].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2878' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[10].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2879' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[11].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2880' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[12].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2881' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[13].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2882' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[14].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2883' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[15].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2884' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[16].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2885' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[17].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2886' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[18].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2887' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[19].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2888' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[20].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2889' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[21].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2890' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[22].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2891' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[23].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2892' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[24].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2893' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[25].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2894' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[26].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2895' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[27].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2896' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[28].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2897' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[29].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2898' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[30].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2899' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$91.$for_loop$92[31].$fordecl_block$93.j' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2900' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$95.i' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $dff cell `$procdff$2903' with positive edge clock.
Creating register for signal `\register_file.\register[0]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2904' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[1]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2905' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[2]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2906' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[3]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2907' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[4]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2908' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[5]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2909' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[6]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2910' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[7]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2911' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[8]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2912' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[9]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2913' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[10]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2914' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[11]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2915' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[12]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2916' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[13]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2917' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[14]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2918' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[15]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2919' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[16]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2920' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[17]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2921' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[18]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2922' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[19]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2923' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[20]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2924' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[21]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2925' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[22]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2926' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[23]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2927' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[24]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2928' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[25]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2929' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[26]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2930' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[27]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2931' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[28]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2932' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[29]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2933' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[30]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2934' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[31]' using process `\register_file.$proc$src/register_file.sv:43$102'.
  created $adff cell `$procdff$2935' with positive edge clock and negative level reset.
Creating register for signal `\ram.\data_out' using process `\ram.$proc$src/ram.sv:185$76'.
  created $dff cell `$procdff$2936' with positive edge clock.
Creating register for signal `\ram.\instr_out' using process `\ram.$proc$src/ram.sv:185$76'.
  created $dff cell `$procdff$2937' with positive edge clock.
Creating register for signal `\ram.$memwr$\memory$src/ram.sv:187$71_ADDR' using process `\ram.$proc$src/ram.sv:185$76'.
  created $dff cell `$procdff$2938' with positive edge clock.
Creating register for signal `\ram.$memwr$\memory$src/ram.sv:187$71_DATA' using process `\ram.$proc$src/ram.sv:185$76'.
  created $dff cell `$procdff$2939' with positive edge clock.
Creating register for signal `\ram.$memwr$\memory$src/ram.sv:187$71_EN' using process `\ram.$proc$src/ram.sv:185$76'.
  created $dff cell `$procdff$2940' with positive edge clock.
Creating register for signal `\ram.\state' using process `\ram.$proc$src/ram.sv:152$72'.
  created $adff cell `$procdff$2941' with positive edge clock and negative level reset.
Creating register for signal `\pc.\PC' using process `\pc.$proc$src/pc.sv:32$35'.
  created $adff cell `$procdff$2942' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$2943' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$2944' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$2945' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$2946' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$2947' with positive edge clock.

19.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$570'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$567'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$566'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$560'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$560'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$559'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$556'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$555'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$549'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$549'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$548'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$546'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$545'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$543'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$543'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$542'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$540'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$537'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$537'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$536'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$535'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$535'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$534'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$533'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$532'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$529'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$528'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$522'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$522'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$521'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$518'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$517'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$511'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$511'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$510'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$508'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$507'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$505'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$505'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$504'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$502'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$499'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$499'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$498'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$497'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$497'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$496'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$495'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$754'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$753'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$752'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$751'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$750'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$749'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$735'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$734'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$733'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$732'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$731'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$730'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$729'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$728'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$727'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$726'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$707'.
Found and cleaned up 11 empty switches in `\alu.$proc$src/alu.sv:0$260'.
Removing empty process `alu.$proc$src/alu.sv:0$260'.
Found and cleaned up 9 empty switches in `\control.$proc$src/control.sv:0$255'.
Removing empty process `control.$proc$src/control.sv:0$255'.
Found and cleaned up 1 empty switch in `\writeToReg.$proc$src/writeToReg.sv:0$251'.
Removing empty process `writeToReg.$proc$src/writeToReg.sv:0$251'.
Found and cleaned up 4 empty switches in `\signExtender.$proc$src/signExtender.sv:0$226'.
Removing empty process `signExtender.$proc$src/signExtender.sv:0$226'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$183'.
Removing empty process `register_file.$proc$src/register_file.sv:0$183'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$180'.
Removing empty process `register_file.$proc$src/register_file.sv:0$180'.
Found and cleaned up 2 empty switches in `\register_file.$proc$src/register_file.sv:0$172'.
Removing empty process `register_file.$proc$src/register_file.sv:0$172'.
Removing empty process `register_file.$proc$src/register_file.sv:43$102'.
Found and cleaned up 1 empty switch in `\ram.$proc$src/ram.sv:185$76'.
Removing empty process `ram.$proc$src/ram.sv:185$76'.
Found and cleaned up 2 empty switches in `\ram.$proc$src/ram.sv:0$74'.
Removing empty process `ram.$proc$src/ram.sv:0$74'.
Removing empty process `ram.$proc$src/ram.sv:152$72'.
Found and cleaned up 2 empty switches in `\pc.$proc$src/pc.sv:0$37'.
Removing empty process `pc.$proc$src/pc.sv:0$37'.
Removing empty process `pc.$proc$src/pc.sv:32$35'.
Found and cleaned up 1 empty switch in `\mux.$proc$src/mux.sv:0$34'.
Removing empty process `mux.$proc$src/mux.sv:0$34'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 75 empty switches.

19.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module alu.
<suppressed ~12 debug messages>
Optimizing module control.
<suppressed ~11 debug messages>
Optimizing module writeToReg.
<suppressed ~1 debug messages>
Optimizing module signExtender.
<suppressed ~1 debug messages>
Optimizing module register_file.
<suppressed ~35 debug messages>
Optimizing module ram.
<suppressed ~11 debug messages>
Optimizing module pc.
<suppressed ~9 debug messages>
Optimizing module mux.
Optimizing module top1.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

19.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module alu.
Deleting now unused module control.
Deleting now unused module writeToReg.
Deleting now unused module signExtender.
Deleting now unused module register_file.
Deleting now unused module ram.
Deleting now unused module pc.
Deleting now unused module mux.
Deleting now unused module top1.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~14 debug messages>

19.5. Executing TRIBUF pass.

19.6. Executing DEMINOUT pass (demote inout ports to input or output).

19.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~94 debug messages>

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 170 unused cells and 811 unused wires.
<suppressed ~204 debug messages>

19.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\right [2] is used but has no driver.
Warning: Wire ice40hx8k.\right [1] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 59 problems.

19.10. Executing OPT pass (performing simple optimizations).

19.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3342 debug messages>
Removed a total of 1114 cells.

19.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1871.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2627.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2231.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2051.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1727.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2447.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1583.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2663.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1042.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1049.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1057.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1066.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1076.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1087.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1099.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1112.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1126.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1141.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1907.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2267.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2087.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2483.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1763.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1183.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1185.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1191.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1193.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1206.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1208.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1221.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1223.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1235.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1619.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2303.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1247.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1943.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1254.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1256.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1263.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1265.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2123.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1278.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2519.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1291.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1301.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1799.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1314.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2339.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1329.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1979.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1655.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2159.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2555.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1835.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2375.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2015.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ra.$procmux$2780.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ra.$procmux$2786.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2195.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1421.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1424.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1427.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1433.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1436.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1442.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2591.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$1691.
    dead port 2/2 on $mux $flatten\top_inst.\top.\testpc.$procmux$2805.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$2411.
Removed 69 multiplexer ports.
<suppressed ~63 debug messages>

19.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2630: { $flatten\top_inst.\top.\DUT.$procmux$1581_CMP $auto$opt_reduce.cc:134:opt_pmux$2964 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1874: { $flatten\top_inst.\top.\DUT.$procmux$1560_CMP $auto$opt_reduce.cc:134:opt_pmux$2966 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2234: { $flatten\top_inst.\top.\DUT.$procmux$1570_CMP $auto$opt_reduce.cc:134:opt_pmux$2968 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2054: { $flatten\top_inst.\top.\DUT.$procmux$1565_CMP $auto$opt_reduce.cc:134:opt_pmux$2970 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1910: { $flatten\top_inst.\top.\DUT.$procmux$1561_CMP $auto$opt_reduce.cc:134:opt_pmux$2972 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2270: { $flatten\top_inst.\top.\DUT.$procmux$1571_CMP $auto$opt_reduce.cc:134:opt_pmux$2974 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2090: { $flatten\top_inst.\top.\DUT.$procmux$1566_CMP $auto$opt_reduce.cc:134:opt_pmux$2976 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2486: { $flatten\top_inst.\top.\DUT.$procmux$1577_CMP $auto$opt_reduce.cc:134:opt_pmux$2978 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1730: { $flatten\top_inst.\top.\DUT.$procmux$1556_CMP $auto$opt_reduce.cc:134:opt_pmux$2980 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1766: { $flatten\top_inst.\top.\DUT.$procmux$1557_CMP $auto$opt_reduce.cc:134:opt_pmux$2982 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1622: { $flatten\top_inst.\top.\DUT.$procmux$1553_CMP $auto$opt_reduce.cc:134:opt_pmux$2984 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2450: { $flatten\top_inst.\top.\DUT.$procmux$1576_CMP $auto$opt_reduce.cc:134:opt_pmux$2986 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2306: { $flatten\top_inst.\top.\DUT.$procmux$1572_CMP $auto$opt_reduce.cc:134:opt_pmux$2988 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1586: { $flatten\top_inst.\top.\DUT.$procmux$1552_CMP $auto$opt_reduce.cc:134:opt_pmux$2990 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1946: { $flatten\top_inst.\top.\DUT.$procmux$1562_CMP $auto$opt_reduce.cc:134:opt_pmux$2992 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2126: { $flatten\top_inst.\top.\DUT.$procmux$1567_CMP $auto$opt_reduce.cc:134:opt_pmux$2994 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2522: { $flatten\top_inst.\top.\DUT.$procmux$1578_CMP $auto$opt_reduce.cc:134:opt_pmux$2996 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1802: { $flatten\top_inst.\top.\DUT.$procmux$1558_CMP $auto$opt_reduce.cc:134:opt_pmux$2998 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2342: { $flatten\top_inst.\top.\DUT.$procmux$1573_CMP $auto$opt_reduce.cc:134:opt_pmux$3000 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1332: $auto$opt_reduce.cc:134:opt_pmux$3002
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1341: $auto$opt_reduce.cc:134:opt_pmux$3004
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1982: { $flatten\top_inst.\top.\DUT.$procmux$1563_CMP $auto$opt_reduce.cc:134:opt_pmux$3006 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2162: { $flatten\top_inst.\top.\DUT.$procmux$1568_CMP $auto$opt_reduce.cc:134:opt_pmux$3008 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1658: { $flatten\top_inst.\top.\DUT.$procmux$1554_CMP $auto$opt_reduce.cc:134:opt_pmux$3010 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1351: { $auto$opt_reduce.cc:134:opt_pmux$3016 $auto$opt_reduce.cc:134:opt_pmux$3014 $auto$opt_reduce.cc:134:opt_pmux$3012 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2558: { $flatten\top_inst.\top.\DUT.$procmux$1579_CMP $auto$opt_reduce.cc:134:opt_pmux$3018 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1372: $auto$opt_reduce.cc:134:opt_pmux$3020
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1377: $auto$opt_reduce.cc:134:opt_pmux$3022
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1838: { $flatten\top_inst.\top.\DUT.$procmux$1559_CMP $auto$opt_reduce.cc:134:opt_pmux$3024 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2378: { $flatten\top_inst.\top.\DUT.$procmux$1574_CMP $auto$opt_reduce.cc:134:opt_pmux$3026 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1402: $auto$opt_reduce.cc:134:opt_pmux$3028
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\ra.$procmux$2768:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0]
      New connections: $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [31:1] = { $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] $flatten\top_inst.\top.\ra.$0$memwr$\memory$src/ram.sv:187$71_EN[31:0]$79 [0] }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2198: { $flatten\top_inst.\top.\DUT.$procmux$1569_CMP $auto$opt_reduce.cc:134:opt_pmux$3030 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2594: { $flatten\top_inst.\top.\DUT.$procmux$1580_CMP $auto$opt_reduce.cc:134:opt_pmux$3032 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2018: { $flatten\top_inst.\top.\DUT.$procmux$1564_CMP $auto$opt_reduce.cc:134:opt_pmux$3034 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1694: { $flatten\top_inst.\top.\DUT.$procmux$1555_CMP $auto$opt_reduce.cc:134:opt_pmux$3036 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1550: { $auto$opt_reduce.cc:134:opt_pmux$3038 $flatten\top_inst.\top.\DUT.$procmux$1551_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\write.$procmux$1407: { $flatten\top_inst.\top.\write.$procmux$1416_CMP $flatten\top_inst.\top.\write.$procmux$1415_CMP $flatten\top_inst.\top.\write.$procmux$1414_CMP $flatten\top_inst.\top.\write.$procmux$1413_CMP $flatten\top_inst.\top.\write.$procmux$1412_CMP $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$249_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$248_Y $auto$opt_reduce.cc:134:opt_pmux$3040 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2414: { $flatten\top_inst.\top.\DUT.$procmux$1575_CMP $auto$opt_reduce.cc:134:opt_pmux$3042 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 39 changes.

19.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

19.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\top_inst.\top.\DUT.$procdff$2904 ($adff) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 9 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 10 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 11 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 12 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 13 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 14 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 15 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 16 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 17 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 18 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 19 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 20 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 21 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 22 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 23 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 24 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 25 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 26 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 27 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 28 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 29 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 30 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 31 on $flatten\top_inst.\top.\DUT.$procdff$2904 ($dlatch) from module ice40hx8k.

19.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1205 unused wires.
<suppressed ~19 debug messages>

19.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

19.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\testpc.$procmux$2796: { $flatten\top_inst.\top.\testpc.$procmux$2804_CMP $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$227_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$229_Y $auto$opt_reduce.cc:134:opt_pmux$3046 $auto$opt_reduce.cc:134:opt_pmux$3044 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

19.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.10.13. Executing OPT_DFF pass (perform DFF optimizations).

19.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.16. Rerunning OPT passes. (Maybe there is more to do..)

19.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

19.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.10.20. Executing OPT_DFF pass (perform DFF optimizations).

19.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.10.23. Finished OPT passes. (There is nothing left to do.)

19.11. Executing FSM pass (extract and optimize FSM).

19.11.1. Executing FSM_DETECT pass (finding FSMs in design).

19.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

19.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

19.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

19.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

19.12. Executing OPT pass (performing simple optimizations).

19.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

19.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$2947 ($dff) from module ice40hx8k (D = $not$ice40/ice40hx8k.sv:18$3_Y, Q = \hz100).
Adding SRST signal on $procdff$2946 ($dff) from module ice40hx8k (D = $add$ice40/ice40hx8k.sv:21$4_Y [15:0], Q = \ctr, rval = 16'0000000000000000).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$2858 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$864_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$2857 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$2856 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$805_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$2854 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$837_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$2853 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$875_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3083 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$873_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\top.\testpc.$procdff$2942 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0], Q = \top_inst.top.testpc.PC).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2935 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[31][31:0], Q = \top_inst.top.DUT.register[31]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2934 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[30][31:0], Q = \top_inst.top.DUT.register[30]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2933 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[29][31:0], Q = \top_inst.top.DUT.register[29]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2932 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[28][31:0], Q = \top_inst.top.DUT.register[28]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2931 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[27][31:0], Q = \top_inst.top.DUT.register[27]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2930 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[26][31:0], Q = \top_inst.top.DUT.register[26]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2929 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[25][31:0], Q = \top_inst.top.DUT.register[25]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2928 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[24][31:0], Q = \top_inst.top.DUT.register[24]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2927 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[23][31:0], Q = \top_inst.top.DUT.register[23]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2926 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[22][31:0], Q = \top_inst.top.DUT.register[22]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2925 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[21][31:0], Q = \top_inst.top.DUT.register[21]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2924 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[20][31:0], Q = \top_inst.top.DUT.register[20]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2923 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[19][31:0], Q = \top_inst.top.DUT.register[19]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2922 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[18][31:0], Q = \top_inst.top.DUT.register[18]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2921 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[17][31:0], Q = \top_inst.top.DUT.register[17]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2920 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[16][31:0], Q = \top_inst.top.DUT.register[16]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2919 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[15][31:0], Q = \top_inst.top.DUT.register[15]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2918 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[14][31:0], Q = \top_inst.top.DUT.register[14]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2917 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[13][31:0], Q = \top_inst.top.DUT.register[13]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2916 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[12][31:0], Q = \top_inst.top.DUT.register[12]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2915 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[11][31:0], Q = \top_inst.top.DUT.register[11]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2914 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[10][31:0], Q = \top_inst.top.DUT.register[10]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2913 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[9][31:0], Q = \top_inst.top.DUT.register[9]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2912 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[8][31:0], Q = \top_inst.top.DUT.register[8]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2911 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[7][31:0], Q = \top_inst.top.DUT.register[7]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2910 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[6][31:0], Q = \top_inst.top.DUT.register[6]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2909 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[5][31:0], Q = \top_inst.top.DUT.register[5]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2908 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[4][31:0], Q = \top_inst.top.DUT.register[4]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2907 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[3][31:0], Q = \top_inst.top.DUT.register[3]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2906 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[2][31:0], Q = \top_inst.top.DUT.register[2]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$2905 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[1][31:0], Q = \top_inst.top.DUT.register[1]).

19.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 39 unused cells and 39 unused wires.
<suppressed ~72 debug messages>

19.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~35 debug messages>

19.12.9. Rerunning OPT passes. (Maybe there is more to do..)

19.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

19.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1550: $flatten\top_inst.\top.\DUT.$procmux$1551_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1586: $flatten\top_inst.\top.\DUT.$procmux$1552_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1622: $flatten\top_inst.\top.\DUT.$procmux$1553_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1658: $flatten\top_inst.\top.\DUT.$procmux$1554_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1694: $flatten\top_inst.\top.\DUT.$procmux$1555_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1730: $flatten\top_inst.\top.\DUT.$procmux$1556_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1766: $flatten\top_inst.\top.\DUT.$procmux$1557_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1802: $flatten\top_inst.\top.\DUT.$procmux$1558_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1838: $flatten\top_inst.\top.\DUT.$procmux$1559_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1874: $flatten\top_inst.\top.\DUT.$procmux$1560_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1910: $flatten\top_inst.\top.\DUT.$procmux$1561_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1946: $flatten\top_inst.\top.\DUT.$procmux$1562_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$1982: $flatten\top_inst.\top.\DUT.$procmux$1563_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2018: $flatten\top_inst.\top.\DUT.$procmux$1564_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2054: $flatten\top_inst.\top.\DUT.$procmux$1565_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2090: $flatten\top_inst.\top.\DUT.$procmux$1566_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2126: $flatten\top_inst.\top.\DUT.$procmux$1567_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2162: $flatten\top_inst.\top.\DUT.$procmux$1568_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2198: $flatten\top_inst.\top.\DUT.$procmux$1569_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2234: $flatten\top_inst.\top.\DUT.$procmux$1570_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2270: $flatten\top_inst.\top.\DUT.$procmux$1571_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2306: $flatten\top_inst.\top.\DUT.$procmux$1572_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2342: $flatten\top_inst.\top.\DUT.$procmux$1573_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2378: $flatten\top_inst.\top.\DUT.$procmux$1574_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2414: $flatten\top_inst.\top.\DUT.$procmux$1575_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2450: $flatten\top_inst.\top.\DUT.$procmux$1576_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2486: $flatten\top_inst.\top.\DUT.$procmux$1577_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2522: $flatten\top_inst.\top.\DUT.$procmux$1578_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2558: $flatten\top_inst.\top.\DUT.$procmux$1579_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2594: $flatten\top_inst.\top.\DUT.$procmux$1580_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$2630: $flatten\top_inst.\top.\DUT.$procmux$1581_CMP
  Optimizing cells in module \ice40hx8k.
Performed a total of 31 changes.

19.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

19.12.13. Executing OPT_DFF pass (perform DFF optimizations).

19.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

19.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.16. Rerunning OPT passes. (Maybe there is more to do..)

19.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

19.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.12.20. Executing OPT_DFF pass (perform DFF optimizations).

19.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.12.23. Finished OPT passes. (There is nothing left to do.)

19.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\top.\ra.$meminit$\memory$src/ram.sv:0$89 (top_inst.top.ra.memory).
Removed top 26 address bits (of 32) from memory read port ice40hx8k.$flatten\top_inst.\top.\ra.$memrd$\memory$src/ram.sv:193$88 (top_inst.top.ra.memory).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 16 bits (of 32) from port Y of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$742 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$743 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$743 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$746 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$736 ($gt).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$227 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1142_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1127_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1088_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1077_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1058_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1047 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1043_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1040 ($mux).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1581_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1580_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1579_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1578_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1577_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1576_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1575_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1574_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1573_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1572_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1571_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1570_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1569_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1568_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1567_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1511_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1510_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1509_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1508_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1507_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1506_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1505_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1504_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1503_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1502_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1501_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1500_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1499_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1498_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1497_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1478_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1477_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1476_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1475_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1474_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1473_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1472_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1471_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1470_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1469_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1468_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1467_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1466_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1465_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$1464_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1339_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1338_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1315_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1302_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1257_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1252 ($mux).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1233_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1232_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1228_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1219 ($mux).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1204 ($mux).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1186_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1181 ($mux).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$procmux$2804_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43 ($add).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\write.$procmux$1416_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\write.$procmux$1415_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\write.$procmux$1414_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\write.$procmux$1413_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\write.$procmux$1412_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$249 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$246 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$244 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$242 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$240 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$239 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$237 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$235 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$233 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$231 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$229 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228 ($eq).
Removed top 16 bits (of 32) from wire ice40hx8k.$add$ice40/ice40hx8k.sv:21$4_Y.
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$2\ALUResult[31:0].
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$3\ALUResult[31:0].
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$5\aluOP[3:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$6\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$8\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$9\cuOP[5:0].

19.14. Executing PEEPOPT pass (run peephole optimizers).

19.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

19.16. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ice40hx8k that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$sshr$src/alu.sv:37$263 ($sshr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3044 $auto$opt_reduce.cc:134:opt_pmux$3046 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$229_Y $flatten\top_inst.\top.\arith.$procmux$1127_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shr$src/alu.sv:45$265 ($shr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3044 $auto$opt_reduce.cc:134:opt_pmux$3046 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$229_Y $flatten\top_inst.\top.\arith.$procmux$1113_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shl$src/alu.sv:29$261 ($shl):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$3044 $auto$opt_reduce.cc:134:opt_pmux$3046 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$229_Y $flatten\top_inst.\top.\arith.$procmux$1142_CMP }.
    No candidates found.

19.17. Executing TECHMAP pass (map to technology primitives).

19.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

19.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

19.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $add$ice40/ice40hx8k.sv:21$4 ($add).
  creating $macc model for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$267 ($add).
  creating $macc model for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$269 ($sub).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$38 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43 ($add).
  creating $macc model for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$252 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$743 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$743.
  creating $alu model for $macc $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$252.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$38.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$269.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$267.
  creating $alu model for $macc $add$ice40/ice40hx8k.sv:21$4.
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$278 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$277 ($lt): new $alu
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$736 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$736: $auto$alumacc.cc:485:replace_alu$3254
  creating $alu cell for $add$ice40/ice40hx8k.sv:21$4: $auto$alumacc.cc:485:replace_alu$3259
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$277: $auto$alumacc.cc:485:replace_alu$3262
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$278: $auto$alumacc.cc:485:replace_alu$3275
  creating $alu cell for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$267: $auto$alumacc.cc:485:replace_alu$3286
  creating $alu cell for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$269: $auto$alumacc.cc:485:replace_alu$3289
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$38: $auto$alumacc.cc:485:replace_alu$3292
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40: $auto$alumacc.cc:485:replace_alu$3295
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43: $auto$alumacc.cc:485:replace_alu$3298
  creating $alu cell for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$252: $auto$alumacc.cc:485:replace_alu$3301
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$743: $auto$alumacc.cc:485:replace_alu$3304
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737: $auto$alumacc.cc:485:replace_alu$3307
  created 12 $alu and 0 $macc cells.

19.21. Executing OPT pass (performing simple optimizations).

19.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5 debug messages>

19.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

19.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\arith.$procmux$1156: { $flatten\top_inst.\top.\arith.$procmux$1142_CMP $flatten\top_inst.\top.\arith.$procmux$1127_CMP $flatten\top_inst.\top.\arith.$procmux$1113_CMP $flatten\top_inst.\top.\arith.$procmux$1100_CMP $flatten\top_inst.\top.\arith.$procmux$1088_CMP $flatten\top_inst.\top.\arith.$procmux$1077_CMP $flatten\top_inst.\top.\arith.$procmux$1067_CMP $flatten\top_inst.\top.\arith.$procmux$1058_CMP }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

19.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.21.6. Executing OPT_DFF pass (perform DFF optimizations).

19.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

19.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.21.9. Rerunning OPT passes. (Maybe there is more to do..)

19.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

19.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.21.13. Executing OPT_DFF pass (perform DFF optimizations).

19.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.21.16. Finished OPT passes. (There is nothing left to do.)

19.22. Executing MEMORY pass.

19.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

19.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing ice40hx8k.top_inst.top.ra.memory write port 0.

19.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

19.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\top_inst.top.ra.memory'[0] in module `\ice40hx8k': no output FF found.
Checking read port `\top_inst.top.ra.memory'[1] in module `\ice40hx8k': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\top_inst.top.ra.memory'[2] in module `\ice40hx8k': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port address `\top_inst.top.ra.memory'[0] in module `\ice40hx8k': no address FF found.

19.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 66 unused wires.
<suppressed ~3 debug messages>

19.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory ice40hx8k.top_inst.top.ra.memory by address:

19.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

19.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

19.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.top_inst.top.ra.memory
<suppressed ~18 debug messages>

19.25. Executing TECHMAP pass (map to technology primitives).

19.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

19.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

19.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.26. Executing ICE40_BRAMINIT pass.

19.27. Executing OPT pass (performing simple optimizations).

19.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~99 debug messages>

19.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$2945 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$3049 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$859_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Adding SRST signal on $auto$ff.cc:266:slice$3065 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$800_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$3074 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$832_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3085 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [0], Q = \top_inst.top.testpc.PC [0]).
Adding EN signal on $auto$ff.cc:266:slice$3085 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [1], Q = \top_inst.top.testpc.PC [1]).
Setting constant 0-bit at position 0 on $procdff$2945 ($dlatch) from module ice40hx8k.

19.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 8 unused cells and 67 unused wires.
<suppressed ~14 debug messages>

19.27.5. Rerunning OPT passes. (Removed registers in this run.)

19.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

19.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

19.27.8. Executing OPT_DFF pass (perform DFF optimizations).

19.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

19.27.10. Finished fast OPT passes.

19.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \top_inst.top.ra.memory in module \ice40hx8k:
  created 64 $dff cells and 0 static cells of width 32.
Extracted data FF from read port 1 of ice40hx8k.top_inst.top.ra.memory: $\top_inst.top.ra.memory$rdreg[1]
Extracted data FF from read port 2 of ice40hx8k.top_inst.top.ra.memory: $\top_inst.top.ra.memory$rdreg[2]
  read interface: 2 $dff and 189 $mux cells.
  write interface: 64 write mux blocks.

19.29. Executing OPT pass (performing simple optimizations).

19.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~235 debug messages>

19.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][25]$4113.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][25]$4113.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][24]$4110.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][24]$4110.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][23]$4107.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][23]$4107.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][22]$4104.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][22]$4104.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][21]$4101.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][21]$4101.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][20]$4098.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][20]$4098.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][19]$4095.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][19]$4095.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][18]$4092.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][18]$4092.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][17]$4089.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][17]$4089.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][16]$4086.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][16]$4086.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][15]$4083.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][15]$4083.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][14]$4080.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][14]$4080.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][13]$4077.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][13]$4077.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][12]$4074.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][12]$4074.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][11]$4071.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][11]$4071.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][10]$4068.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][10]$4068.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][9]$4065.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][9]$4065.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][8]$4062.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][8]$4062.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][15]$4035.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][15]$4035.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][14]$4032.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][14]$4032.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][13]$4029.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][13]$4029.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][12]$4026.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][12]$4026.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][11]$4023.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][11]$4023.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][10]$4020.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][10]$4020.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][9]$4017.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][9]$4017.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][8]$4014.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][8]$4014.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][7]$4011.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][7]$4011.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][6]$4008.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][6]$4008.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][5]$4005.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][5]$4005.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][4]$4002.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][4][4]$4002.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][7]$3987.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][7]$3987.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][6]$3984.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][6]$3984.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][5]$3981.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][5]$3981.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][4]$3978.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][4]$3978.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][3]$3975.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][3]$3975.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][2]$3972.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][3][2]$3972.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][3]$3963.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][3]$3963.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][2]$3960.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][2]$3960.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][1]$3957.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][2][1]$3957.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][31]$3942.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][31]$3942.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][30]$3939.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][30]$3939.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][29]$3936.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][29]$3936.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][28]$3933.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][28]$3933.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][27]$3930.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][27]$3930.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][26]$3927.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][26]$3927.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][25]$3924.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][25]$3924.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][24]$3921.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][24]$3921.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][23]$3918.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][23]$3918.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][22]$3915.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][22]$3915.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][21]$3912.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][21]$3912.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][20]$3909.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][20]$3909.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][19]$3906.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][19]$3906.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][18]$3903.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][18]$3903.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][17]$3900.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][17]$3900.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][16]$3897.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][16]$3897.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][15]$3894.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][15]$3894.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][14]$3891.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][14]$3891.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][13]$3888.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][13]$3888.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][12]$3885.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][12]$3885.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][11]$3882.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][11]$3882.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][10]$3879.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][10]$3879.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][9]$3876.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][9]$3876.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][8]$3873.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][5][8]$3873.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][15]$3846.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][15]$3846.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][14]$3843.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][14]$3843.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][13]$3840.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][13]$3840.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][12]$3837.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][12]$3837.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][11]$3834.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][11]$3834.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][10]$3831.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][10]$3831.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][9]$3828.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][9]$3828.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][8]$3825.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][8]$3825.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][7]$3822.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][7]$3822.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][6]$3819.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][6]$3819.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][5]$3816.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][5]$3816.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][4]$3813.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][4][4]$3813.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][7]$3798.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][7]$3798.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][6]$3795.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][6]$3795.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][5]$3792.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][5]$3792.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][4]$3789.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][4]$3789.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][3]$3786.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][3]$3786.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][2]$3783.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][3][2]$3783.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][3]$3774.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][3]$3774.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][2]$3771.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][2]$3771.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][1]$3768.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[1][2][1]$3768.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][30]$4128.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][30]$4128.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][28]$4122.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][28]$4122.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][27]$4119.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][27]$4119.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][31]$4131.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][31]$4131.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][26]$4116.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][26]$4116.
    dead port 1/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][29]$4125.
    dead port 2/2 on $mux $memory\top_inst.top.ra.memory$rdmux[2][5][29]$4125.
Removed 180 multiplexer ports.
<suppressed ~39 debug messages>

19.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\controller.$procmux$1189:
      Old ports: A=4'0110, B=4'1001, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0]
      New ports: A=2'10, B=2'01, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1:0]
      New connections: $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [3:2] = { $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [0] $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1] }
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1226:
      Old ports: A={ 5'01110 $auto$wreduce.cc:461:run$3244 [0] }, B={ 41'01111110000010000110010010010101111010001 $auto$wreduce.cc:461:run$3245 [0] }, Y=$flatten\top_inst.\top.\controller.$7\cuOP[5:0]
      New ports: A={ 4'0110 $auto$wreduce.cc:461:run$3244 [0] }, B={ 34'0111110000100011010010101011101001 $auto$wreduce.cc:461:run$3245 [0] }, Y={ $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [4] = $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1269:
      Old ports: A=6'010010, B={ 41'01001101010001011001011101100001100101101 $auto$wreduce.cc:461:run$3245 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0]
      New ports: A=4'0010, B={ 27'001101000110011110001001101 $auto$wreduce.cc:461:run$3245 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0] [3:0]
      New connections: $flatten\top_inst.\top.\controller.$5\cuOP[5:0] [5:4] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1297:
      Old ports: A=6'100110, B=18'001111010000010001, Y=$flatten\top_inst.\top.\controller.$4\cuOP[5:0]
      New ports: A=5'10010, B=15'001110100001001, Y={ $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [5:3] $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1:0] }
      New connections: $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [2] = $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1308:
      Old ports: A=6'100110, B=30'001010001011001100001101001110, Y=$flatten\top_inst.\top.\controller.$3\cuOP[5:0]
      New ports: A=5'10110, B=25'0101001011011000110101110, Y={ $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1322:
      Old ports: A=6'100110, B=36'000100000101000110000111001000001001, Y=$flatten\top_inst.\top.\controller.$2\cuOP[5:0]
      New ports: A=5'10110, B=30'001000010100110001110100001001, Y={ $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1418:
      Old ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm 12'000000000000 }, Y=$flatten\top_inst.\top.\signex.$4\immOut[31:0]
      New ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm [19:12] \top_inst.top.signex.imm [10:0] 12'000000000000 }, Y={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$4\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$44:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$44_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$44_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$44_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$49:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1] 1'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 2'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$49_Y
      New ports: A=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1], B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$49_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$49_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$53:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$53_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$53_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$53_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$59:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$59_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$43_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$40_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$59_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$59_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$816:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$816_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1430:
      Old ports: A=$flatten\top_inst.\top.\signex.$4\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y=$flatten\top_inst.\top.\signex.$3\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$3\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$821:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$816_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$821_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$816_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1439:
      Old ports: A=$flatten\top_inst.\top.\signex.$3\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y=$flatten\top_inst.\top.\signex.$2\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y={ $flatten\top_inst.\top.\signex.$2\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$2\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$2\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
  Optimizing cells in module \ice40hx8k.
Performed a total of 15 changes.

19.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.6. Executing OPT_DFF pass (perform DFF optimizations).

19.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 48 unused cells and 624 unused wires.
<suppressed ~97 debug messages>

19.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.9. Rerunning OPT passes. (Maybe there is more to do..)

19.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

19.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\top_inst.top.ra.memory[9]$3457 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[9]).
Adding EN signal on $memory\top_inst.top.ra.memory[8]$3455 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[8]).
Adding EN signal on $memory\top_inst.top.ra.memory[7]$3453 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[7]).
Adding EN signal on $memory\top_inst.top.ra.memory[6]$3451 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[6]).
Adding EN signal on $memory\top_inst.top.ra.memory[5]$3449 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[5]).
Adding EN signal on $memory\top_inst.top.ra.memory[4]$3447 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[4]).
Adding EN signal on $memory\top_inst.top.ra.memory[3]$3445 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[3]).
Adding EN signal on $memory\top_inst.top.ra.memory[2]$3443 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[2]).
Adding EN signal on $memory\top_inst.top.ra.memory[1]$3441 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[1]).
Adding EN signal on $memory\top_inst.top.ra.memory[15]$3469 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[15]).
Adding EN signal on $memory\top_inst.top.ra.memory[14]$3467 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[14]).
Adding EN signal on $memory\top_inst.top.ra.memory[13]$3465 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[13]).
Adding EN signal on $memory\top_inst.top.ra.memory[12]$3463 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[12]).
Adding EN signal on $memory\top_inst.top.ra.memory[11]$3461 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[11]).
Adding EN signal on $memory\top_inst.top.ra.memory[10]$3459 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[10]).
Adding EN signal on $memory\top_inst.top.ra.memory[0]$3439 ($dff) from module ice40hx8k (D = \top_inst.top.aluMux.in2, Q = \top_inst.top.ra.memory[0]).
Adding SRST signal on $auto$ff.cc:266:slice$3058 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$737_Y [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

19.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 16 unused cells and 16 unused wires.
<suppressed ~17 debug messages>

19.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.16. Rerunning OPT passes. (Maybe there is more to do..)

19.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

19.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.29.20. Executing OPT_DFF pass (perform DFF optimizations).

19.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.29.23. Finished OPT passes. (There is nothing left to do.)

19.30. Executing ICE40_WRAPCARRY pass (wrap carries).

19.31. Executing TECHMAP pass (map to technology primitives).

19.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using template $paramod$c83925f608704c3fa34790ddcfce9302bdcd7533\_90_pmux for cells of type $pmux.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$ccbcf9cf459c8d68b04688a9a5245ee9d295a0be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$b8fb36dbb218c8f6b30171c756a8f8357614d906\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$104d3d1e82b09b030a785dad8a5e608a6d4401f7\_90_pmux for cells of type $pmux.
Using template $paramod$aa21a8cfcdb2d038c61c16c25c37cdf209d597be\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$8e2cd9e836d46c40867c8d0d57053a4e1c3bcdbc\_90_pmux for cells of type $pmux.
Using template $paramod$77db613179eb70c5e4e5c5aca72d602a7c6017b6\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$ae63dc3b50d8e8327f3f28c91126b1f0b8c3a12c\_90_pmux for cells of type $pmux.
Using template $paramod$a2dfbfccaf255934df30ecabbf39af44cb16e7a1\_90_pmux for cells of type $pmux.
Using template $paramod$d7d291546b4dfc9bc743ff469017e2c721a2385d\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_80_ice40_alu for cells of type $alu.
Using template $paramod$bf8e268f26361094a16ad6650df0ad1ca719658a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~2601 debug messages>

19.32. Executing OPT pass (performing simple optimizations).

19.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1838 debug messages>

19.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~5640 debug messages>
Removed a total of 1880 cells.

19.32.3. Executing OPT_DFF pass (perform DFF optimizations).

19.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 203 unused cells and 2262 unused wires.
<suppressed ~204 debug messages>

19.32.5. Finished fast OPT passes.

19.33. Executing ICE40_OPT pass (performing simple optimizations).

19.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$3254.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3254.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$3259.slice[0].carry: CO=\ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$3298.slice[0].carry: CO=\top_inst.top.testpc.PC [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$3304.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$3307.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

19.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~14 debug messages>

19.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.33.4. Executing OPT_DFF pass (perform DFF optimizations).

19.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

19.33.6. Rerunning OPT passes. (Removed registers in this run.)

19.33.7. Running ICE40 specific optimizations.

19.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.33.10. Executing OPT_DFF pass (perform DFF optimizations).

19.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.33.12. Finished OPT passes. (There is nothing left to do.)

19.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

19.35. Executing TECHMAP pass (map to technology primitives).

19.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~1673 debug messages>

19.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$3259.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$3298.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$3304.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$3307.slice[0].carry ($lut).

19.38. Executing ICE40_OPT pass (performing simple optimizations).

19.38.1. Running ICE40 specific optimizations.

19.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~214 debug messages>

19.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~156 debug messages>
Removed a total of 52 cells.

19.38.4. Executing OPT_DFF pass (perform DFF optimizations).

19.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 9299 unused wires.
<suppressed ~1 debug messages>

19.38.6. Rerunning OPT passes. (Removed registers in this run.)

19.38.7. Running ICE40 specific optimizations.

19.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.38.10. Executing OPT_DFF pass (perform DFF optimizations).

19.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.38.12. Finished OPT passes. (There is nothing left to do.)

19.39. Executing TECHMAP pass (map to technology primitives).

19.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

19.41. Executing ABC9 pass.

19.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ice40hx8k.
Found 0 SCCs.

19.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.5. Executing PROC pass (convert processes to netlists).

19.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

19.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

19.41.5.4. Executing PROC_INIT pass (extract init attributes).

19.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

19.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

19.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

19.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

19.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

19.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.41.5.12. Executing OPT_EXPR pass (perform const folding).

19.41.6. Executing TECHMAP pass (map to technology primitives).

19.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~128 debug messages>

19.41.7. Executing OPT pass (performing simple optimizations).

19.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFR.

19.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

19.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFR.
Performed a total of 0 changes.

19.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

19.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

19.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFR..

19.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFR.

19.41.7.9. Finished OPT passes. (There is nothing left to do.)

19.41.8. Executing TECHMAP pass (map to technology primitives).

19.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

19.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFR for cells of type SB_DFFR.
No more expansions possible.
<suppressed ~1029 debug messages>

19.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

19.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~663 debug messages>

19.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

19.41.13. Executing TECHMAP pass (map to technology primitives).

19.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~149 debug messages>

19.41.14. Executing OPT pass (performing simple optimizations).

19.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

19.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

19.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

19.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

19.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

19.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

19.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

19.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

19.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

19.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

19.41.14.16. Finished OPT passes. (There is nothing left to do.)

19.41.15. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

19.41.16. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 5221 cells with 26158 new cells, skipped 7054 cells.
  replaced 3 cell types:
    3463 $_OR_
      66 $_XOR_
    1692 $_MUX_
  not replaced 16 cell types:
      14 $scopeinfo
     414 $_NOT_
    2994 $_AND_
       1 SB_PLL40_CORE
      64 SB_DFF
     527 SB_DFFE
      16 SB_DFFSR
       1 SB_DFFR
      15 SB_DFFESR
    1024 SB_DFFER
       4 SB_DFFESS
    1024 SB_DFFER_$abc9_byp
     294 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
      35 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     626 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
       1 SB_DFFR_$abc9_byp

19.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.41.16.3. Executing XAIGER backend.
<suppressed ~1662 debug messages>
Extracted 11731 AND gates and 33879 wires from module `ice40hx8k' to a netlist network with 1675 inputs and 868 outputs.

19.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

19.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1675/    868  and =   11309  lev =   58 (4.66)  mem = 0.27 MB  box = 1980  bb = 1686
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1675/    868  and =   19945  lev =   43 (3.49)  mem = 0.36 MB  ch = 1473  box = 1948  bb = 1686
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   19945.  Ch =  1220.  Total mem =    3.94 MB. Peak cut mem =    0.18 MB.
ABC: P:  Del = 12687.00.  Ar =    5602.0.  Edge =    21165.  Cut =   120510.  T =     0.02 sec
ABC: P:  Del = 12687.00.  Ar =    5314.0.  Edge =    20579.  Cut =   114565.  T =     0.02 sec
ABC: P:  Del = 12687.00.  Ar =    4659.0.  Edge =    15357.  Cut =   122455.  T =     0.02 sec
ABC: F:  Del = 12687.00.  Ar =    4060.0.  Edge =    14242.  Cut =    95712.  T =     0.01 sec
ABC: A:  Del = 12687.00.  Ar =    3924.0.  Edge =    13779.  Cut =    93798.  T =     0.02 sec
ABC: A:  Del = 12687.00.  Ar =    3886.0.  Edge =    13667.  Cut =    96448.  T =     0.03 sec
ABC: Total time =     0.12 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: yosys-abc: src/aig/gia/giaMfs.c:386: abc::Gia_Man_t* abc::Gia_ManInsertMfs(abc::Gia_Man_t*, abc::Sfm_Ntk_t*, int): Assertion `iLitNew >= 0' failed.
ABC: Aborted (core dumped)
Warning: ABC: execution of command ""/home/shay/a/ece270/bin/yosys-abc" -s -f /tmp/yosys-abc-g47AQf/abc.script 2>&1" failed: return code 134.

19.41.16.6. Executing AIGER frontend.
<suppressed ~5130 debug messages>
Removed 13594 unused cells and 22321 unused wires.

19.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     3917
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:     1024
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      262
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:        1
ABC RESULTS:           input signals:     1107
ABC RESULTS:          output signals:      737
Removing temp directory.

19.41.17. Executing TECHMAP pass (map to technology primitives).

19.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

19.41.17.2. Continuing TECHMAP pass.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
No more expansions possible.
<suppressed ~1295 debug messages>

19.42. Executing ICE40_WRAPCARRY pass (wrap carries).

19.43. Executing TECHMAP pass (map to technology primitives).

19.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 177 unused cells and 45137 unused wires.

19.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4229
  1-LUT               31
  2-LUT              519
  3-LUT             1111
  4-LUT             2568
  with \SB_CARRY    (#0)  203
  with \SB_CARRY    (#1)  206

Eliminating LUTs.
Number of LUTs:     4229
  1-LUT               31
  2-LUT              519
  3-LUT             1111
  4-LUT             2568
  with \SB_CARRY    (#0)  203
  with \SB_CARRY    (#1)  206

Combining LUTs.
Number of LUTs:     4226
  1-LUT               31
  2-LUT              516
  3-LUT             1108
  4-LUT             2571
  with \SB_CARRY    (#0)  203
  with \SB_CARRY    (#1)  206

Eliminated 0 LUTs.
Combined 3 LUTs.
<suppressed ~30042 debug messages>

19.45. Executing TECHMAP pass (map to technology primitives).

19.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.45.2. Continuing TECHMAP pass.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$a4399ab9ab2086a4dd8377a70187771efe5d8c8a\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$f405ee362848dd1a47c58160f854302f6ecf95ff\$lut for cells of type $lut.
Using template $paramod$c07d61aaf1d93e15249de987e8fd0ca391dbd52a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$cdc5bba2585477f1744fd1f869bebc8beb23d707\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$9f6bc32305fc769fa11e4327bee073e3fbe84018\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$1cec58bfb33a7a51c359586aade8e947536c006e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$b7b4ce9151b2c07e0eea5771af978b8bef3781b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$795abb817cc3a416db0e975993671622b62c04ae\$lut for cells of type $lut.
Using template $paramod$fbed19fb84ee7c8a884778d28a96daea96245184\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$31e4afd779b2ae79037c90fb3afcfd265403fd5e\$lut for cells of type $lut.
Using template $paramod$ca2532991f2c847ac990e1deeca1e91108bc2da0\$lut for cells of type $lut.
Using template $paramod$219b71aec9a19e7a27754ed85a7d6cdad9e5ec96\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001101 for cells of type $lut.
Using template $paramod$28f9990465670b8c9788e9446f9ce1be3002b855\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$e01a027fedb28671a20c130493a89c7afd4e87d3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$d2a8135f7f758a3cb293d72f09cfd89de2b22999\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011101 for cells of type $lut.
Using template $paramod$7ad33c776f7927014a3c72f1a75c59359054c3fb\$lut for cells of type $lut.
Using template $paramod$267bf51f643fd50507d05eca65383fd90816fe5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101010 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$af01034afe1bdbc87587d263805971d96e724ed7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$a6ef2a845efd4ff0d96bc4fd2f06cc3516fa63ff\$lut for cells of type $lut.
Using template $paramod$7b809938766c3068dc017c276033f224fcfb7189\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$93a2de77daaad788b7b7db86fd9aeaaa749d64de\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$f4c640ab60ad160388bbc71b56173ddf9879f8c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$068092ddede495d8462ffe530e6d91711913edbc\$lut for cells of type $lut.
Using template $paramod$cf93df6a751c015d454aef52e32716809f254f3e\$lut for cells of type $lut.
Using template $paramod$4380d164d25d6a9a3a11f9976a02840f91855a4a\$lut for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$2054e486c979b759b6f4f7df3aeef508bad324ef\$lut for cells of type $lut.
Using template $paramod$c6a234b1fd9b047d8452094c01e2bc4b0dcb4298\$lut for cells of type $lut.
Using template $paramod$4fd3428c4b8b1accf8f8fb4bb88555a2b5fa688d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$ad20004ca4cc55e015f230a7d22fd8b3bc00587e\$lut for cells of type $lut.
Using template $paramod$9e354de8d358bf081aa0c089488ea3bc5b7c2fd9\$lut for cells of type $lut.
Using template $paramod$8a66d69b2837a465e64e476402b08b17656b59bb\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$26e699c9c1df8d97c3a0d35de6b3d21951c39a15\$lut for cells of type $lut.
Using template $paramod$e7733fbe7ac59c40cfe6746ba2731034d2521eeb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001011 for cells of type $lut.
Using template $paramod$28ba90bb95963b63750b27cda749dbcd75757c3a\$lut for cells of type $lut.
Using template $paramod$03c88305cc42e97f8bf6f7510c6bc3e8ab0f0172\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$6f4aaf68b847f2ed1b73dd57525b99932e3429ca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod$f32f5870e077b282d01cea7008da51b9ce3bfb87\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$7c3833e617307006af30409ed68b65a011a1121e\$lut for cells of type $lut.
Using template $paramod$58685d136f916910674b7cdb559b8c116c3484e1\$lut for cells of type $lut.
Using template $paramod$a8372e175876cbb66e220516f0b094622c6ad591\$lut for cells of type $lut.
Using template $paramod$19457468c03b53ec09024ada785c6816b7d0407d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$cf1d1b94b6deab15fa56eccf201ab344fada8992\$lut for cells of type $lut.
Using template $paramod$b8c12e9f20286ec99dd92b2fd58c920f7e7cec0f\$lut for cells of type $lut.
Using template $paramod$4b9b235bc4444ff899bef0c648e4109b26737f1a\$lut for cells of type $lut.
Using template $paramod$ba7f31f246a278c41fa0648a6e0512f63185dec0\$lut for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$fcc4c770d778df8a1eb6afe48bd4c202a6c1ff2b\$lut for cells of type $lut.
Using template $paramod$5502a85110dbca29ac631107f0b0635e7fade476\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod$a7c07944e10969b2e1fd563a5b72f89493cb3705\$lut for cells of type $lut.
Using template $paramod$e2d96f36ef28053ecd27167cd95b944485ac3146\$lut for cells of type $lut.
Using template $paramod$4bb876346cbc5d13aef9f873277f12d388c5d51a\$lut for cells of type $lut.
Using template $paramod$d909494d67d7075f17a422f7cb5526f6d6564ea6\$lut for cells of type $lut.
Using template $paramod$18455d4fd1270af2266bf4bb1c44971b2eb6b37a\$lut for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$e134ec2a47a2462a591072e65d34fb15b81c90e0\$lut for cells of type $lut.
Using template $paramod$fcff9a7b1687e357a40264efcefe8443c8b2971a\$lut for cells of type $lut.
Using template $paramod$694c95659b447cef99dd4cdbd49b87dfd5f6c806\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$db08fd84fb3c4d6a41eaec6adfffe445fb7eb17f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod$af0c0e3aea5daa768aac0697b02a2a49301800b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$a7d9b4ab0321c8125e5b895183ee6b84cdb4a31b\$lut for cells of type $lut.
Using template $paramod$25003f26a78bb2f583f23824f1e0b8cc16b88761\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$859290076eb0ab5533d03769d9103e68d9252019\$lut for cells of type $lut.
Using template $paramod$f24ba3ced4b870f8e829f5ac5a8af88573350e6f\$lut for cells of type $lut.
Using template $paramod$37203517188e0e81c6d1574dd1c274ed56646adf\$lut for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$c52228221673cb40e85e683314eb992be6bc9613\$lut for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$e1f6f26c595b714b23aaf5b46e4ff285d7dd2807\$lut for cells of type $lut.
Using template $paramod$da98d9e875932ba6a280d468e3b5f7014491d245\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$5bcf213545ceb6e5402f1cba529c501cefaf8231\$lut for cells of type $lut.
Using template $paramod$8b81775fb73b10ccf3a57c39fc26126ef8a47ddb\$lut for cells of type $lut.
Using template $paramod$66025a043dc2fd71a3ec76ab7ebc4e1daef971ce\$lut for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$52acd744af558b1acd7f06b0e1d721506b042b9b\$lut for cells of type $lut.
Using template $paramod$2bf796e0fd6e6f7f76aac424a34e617ed5d61822\$lut for cells of type $lut.
Using template $paramod$de3406006c16cf7256a0a2fdcbb1597ad8f6cb54\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$79432275bae6ba3c8cd1f392a278d15c8c6d8c77\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$abbf8bd3ea1e19ae98169872eb8a8aa046be4dbb\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$23b135911b7c14b5b19b5329e5903bcf58b44188\$lut for cells of type $lut.
Using template $paramod$18c0af0ab239136c12d03cf9ac659374dfbe1fe6\$lut for cells of type $lut.
Using template $paramod$b68f9800cc1bf69afcfbc0567a25e43ebb01456c\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$8fd8efe0a495790cc9ddc97266933ea8a8cd7b45\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$9506ecf18c91672f3dae4008b6ad1f2863e8019f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$3702268f692b8bf258e428f65d3bca4e1f76d98b\$lut for cells of type $lut.
Using template $paramod$6e4a003583c16edea0ec5c59adadacb8265acf23\$lut for cells of type $lut.
Using template $paramod$feac1814a13647ff95d85e23385825c648d6c2ee\$lut for cells of type $lut.
Using template $paramod$849d013d096d73269ca4beb768f8e399745d37f2\$lut for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$a93a6034991d8b6665d61e2a1776bcb030b4d5aa\$lut for cells of type $lut.
Using template $paramod$aa87f4b44361d4073f55a64babebb83974861eee\$lut for cells of type $lut.
Using template $paramod$fda6887b37f599177ed9cb69271d882b63df7e66\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$9dd298ae76fb41ac94779a83c068607fbc09ce4f\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod$70f68cc10fbeada9b6fa90c3bb75475e348ca467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$9c431b511c06506f9a1ef92ce73352313a62b2bd\$lut for cells of type $lut.
Using template $paramod$35369ee2661bc6f22afa7fd33e082ebba93672ba\$lut for cells of type $lut.
Using template $paramod$8f7210088a40da1859d27e900c288fd298d68bed\$lut for cells of type $lut.
Using template $paramod$ee82f1504b2c48e70160208feb4e1f2a1b612b8d\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$9e394303e290a474880b56f98766417009256d93\$lut for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod$58df2c605746858c7e53492c8f57d6f1fafa12d2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$7491e7206ae8c682d288373efe06a43b67c277cf\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$b45bd408e022071431e9cdef9f4acc7dde296829\$lut for cells of type $lut.
Using template $paramod$b7e76911c408ae6bb5853f61e315a47055c67aa8\$lut for cells of type $lut.
Using template $paramod$aab54572d5ffecd31253b36e73e9cb718d05be34\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$0b3dae0cf9ba4ff0f31b6a740f162807f52296cf\$lut for cells of type $lut.
Using template $paramod$abab4f7b12c284cd2b5c9f1fe25ef0fbdac6c245\$lut for cells of type $lut.
Using template $paramod$7ccb46ee9b56c39e0a7d82a185b08cb026e04fbc\$lut for cells of type $lut.
Using template $paramod$4541c098116f7292d10d7d30a0922be20fa68a41\$lut for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod$4853050665c020c8d21fb1a749196950a09d9df8\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$9cf83e29ae1c8f8c5630302af14d44e670567a7f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$b2192df6f90569fea4015d0a6658bdc192199f95\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod$39825c5ed3d135e502be79829033166f1762d78b\$lut for cells of type $lut.
Using template $paramod$de4edcc8e861a7ccd264ca8b13b276cd87afea77\$lut for cells of type $lut.
Using template $paramod$ea79e410ad0f4fc3326666c891e1f3992816d636\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$338ce46cf7ff44b9974887dd2adee6c4e0530bed\$lut for cells of type $lut.
Using template $paramod$e67f7401ddeed7957ea40cf37767a32ba5d5b941\$lut for cells of type $lut.
Using template $paramod$b7685cb0c8a6753256bc84bc31d36a443c15fab7\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$3ea5168ffa8bd3dc36358a15b7ebacf61f2ed91d\$lut for cells of type $lut.
Using template $paramod$3ccd4e460eeb40194aa88ef0e5239278bde42035\$lut for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$b2e8d279775d333b39e310bd45fd5952acdde290\$lut for cells of type $lut.
Using template $paramod$1644affdabe7f65febd25ca1c4d1e050be54e54f\$lut for cells of type $lut.
Using template $paramod$afdefd64f115cbb578c1cd4bf8426ecfef85ae91\$lut for cells of type $lut.
Using template $paramod$5c36a508e8885449eeca65fa0c02b7154f6a3130\$lut for cells of type $lut.
Using template $paramod$0331e023d83b8009e60defb446ce9fa640b122c7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$eaea85d27cc0950ed001348e061727a194f5cf9c\$lut for cells of type $lut.
Using template $paramod$515ef3a9b5e42bd5d7533bdf444ebd44fa8b3ff0\$lut for cells of type $lut.
Using template $paramod$eff1518ba71ef0ec7d7d7af44718b74e502be9e3\$lut for cells of type $lut.
Using template $paramod$b287726797d0722f64e731f1134f7c05af8f1578\$lut for cells of type $lut.
Using template $paramod$e85b6eba0dacefc5f73f8748159b8b9599212afc\$lut for cells of type $lut.
Using template $paramod$7c1f6afe503c0a9d86df3082e3bb8088dcf2d22b\$lut for cells of type $lut.
Using template $paramod$7d35f3eb4056e6484203c99fe42cfcf1dfaba704\$lut for cells of type $lut.
Using template $paramod$0e7ce19e5da99c6675c7a5220f7cc55270b24ac0\$lut for cells of type $lut.
Using template $paramod$58bd588a49a6a3b9d057d75f907cb4932e1635f6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$5d91ae8bf13f169f64fe2e993cae12295d19d8d3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101100 for cells of type $lut.
No more expansions possible.
<suppressed ~7635 debug messages>
Removed 0 unused cells and 11206 unused wires.

19.46. Executing AUTONAME pass.
Renamed 480575 objects in module ice40hx8k (324 iterations).
<suppressed ~8866 debug messages>

19.47. Executing HIERARCHY pass (managing design hierarchy).

19.47.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

19.47.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

19.48. Printing statistics.

=== ice40hx8k ===

   Number of wires:               2842
   Number of wire bits:          10400
   Number of public wires:        2842
   Number of public wire bits:   10400
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6145
     $scopeinfo                     14
     SB_CARRY                      253
     SB_DFF                         64
     SB_DFFE                       527
     SB_DFFER                     1024
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                         1
     SB_DFFSR                       16
     SB_LUT4                      4226
     SB_PLL40_CORE                   1

19.49. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

19.50. Executing JSON backend.

Warnings: 67 unique messages, 67 total
End of script. Logfile hash: 98cdd4defa, CPU: user 5.92s system 0.05s, MEM: 173.66 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 36% 1x abc9_exe (3 sec), 11% 38x read_verilog (1 sec), ...
