
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv src/top.sv src/top1.sv src/memory_control.sv src/mux.sv src/pc.sv src/ram.sv src/register_file.sv src/request_unit.sv src/request.sv src/ru_ram.sv src/signExtender.sv src/writeToReg.sv src/control.sv src/alu.sv src/ssdec.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/top.sv
Parsing SystemVerilog input from `src/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/top1.sv
Parsing SystemVerilog input from `src/top1.sv' to AST representation.
Generating RTLIL representation for module `\top1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/memory_control.sv
Parsing SystemVerilog input from `src/memory_control.sv' to AST representation.
Generating RTLIL representation for module `\memory_control'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/mux.sv
Parsing SystemVerilog input from `src/mux.sv' to AST representation.
Generating RTLIL representation for module `\mux'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/pc.sv
Parsing SystemVerilog input from `src/pc.sv' to AST representation.
Generating RTLIL representation for module `\pc'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/ram.sv
Parsing SystemVerilog input from `src/ram.sv' to AST representation.
Generating RTLIL representation for module `\ram'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/register_file.sv
Parsing SystemVerilog input from `src/register_file.sv' to AST representation.
Generating RTLIL representation for module `\register_file'.
Warning: Replacing memory \nxt_register with list of registers. See src/register_file.sv:60
Warning: Replacing memory \register with list of registers. See src/register_file.sv:47
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/request_unit.sv
Parsing SystemVerilog input from `src/request_unit.sv' to AST representation.
Generating RTLIL representation for module `\request_unit'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/request.sv
Parsing SystemVerilog input from `src/request.sv' to AST representation.
Generating RTLIL representation for module `\request'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/ru_ram.sv
Parsing SystemVerilog input from `src/ru_ram.sv' to AST representation.
Generating RTLIL representation for module `\ru_ram'.
Warning: Replacing memory \nxt_memory with list of registers. See src/ru_ram.sv:31
Warning: Replacing memory \memory with list of registers. See src/ru_ram.sv:0
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/signExtender.sv
Parsing SystemVerilog input from `src/signExtender.sv' to AST representation.
Generating RTLIL representation for module `\signExtender'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/writeToReg.sv
Parsing SystemVerilog input from `src/writeToReg.sv' to AST representation.
Generating RTLIL representation for module `\writeToReg'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/control.sv
Parsing SystemVerilog input from `src/control.sv' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/alu.sv
Parsing SystemVerilog input from `src/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/ssdec.sv
Parsing SystemVerilog input from `src/ssdec.sv' to AST representation.
Generating RTLIL representation for module `\ssdec'.
Warning: Replacing memory \seg7 with list of registers. See src/ssdec.sv:9
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

20. Executing SYNTH_ICE40 pass.

20.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

20.2. Executing HIERARCHY pass (managing design hierarchy).

20.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

20.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

20.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

20.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

20.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \top1
Used module:             \ru_ram
Used module:             \request
Used module:                 \memory_control
Used module:                 \request_unit
Used module:             \signExtender
Used module:             \writeToReg
Used module:             \pc
Used module:             \control
Used module:             \register_file
Used module:             \alu
Used module:             \mux
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removing unused module `\ram'.
Removed 3 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

20.3. Executing PROC pass (convert processes to netlists).

20.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\memory_control.$proc$src/memory_control.sv:0$27'.
Cleaned up 1 empty switch.

20.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$565 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$554 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$551 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$548 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$545 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$542 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$527 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$516 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$513 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$510 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$507 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$504 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$740 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$712 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Removed 1 dead cases from process $proc$src/ssdec.sv:0$281 in module ssdec.
Marked 1 switch rules as full_case in process $proc$src/ssdec.sv:0$281 in module ssdec.
Marked 11 switch rules as full_case in process $proc$src/alu.sv:0$259 in module alu.
Removed 2 dead cases from process $proc$src/control.sv:0$254 in module control.
Marked 9 switch rules as full_case in process $proc$src/control.sv:0$254 in module control.
Marked 1 switch rules as full_case in process $proc$src/writeToReg.sv:0$250 in module writeToReg.
Marked 4 switch rules as full_case in process $proc$src/signExtender.sv:0$225 in module signExtender.
Removed 1 dead cases from process $proc$src/ru_ram.sv:0$221 in module ru_ram.
Marked 1 switch rules as full_case in process $proc$src/ru_ram.sv:0$221 in module ru_ram.
Removed 2 dead cases from process $proc$src/ru_ram.sv:0$212 in module ru_ram.
Marked 3 switch rules as full_case in process $proc$src/ru_ram.sv:0$212 in module ru_ram.
Marked 1 switch rules as full_case in process $proc$src/ru_ram.sv:16$208 in module ru_ram.
Marked 4 switch rules as full_case in process $proc$src/request_unit.sv:0$187 in module request_unit.
Marked 1 switch rules as full_case in process $proc$src/request_unit.sv:21$185 in module request_unit.
Removed 1 dead cases from process $proc$src/register_file.sv:0$182 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$182 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$179 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:0$179 in module register_file.
Removed 1 dead cases from process $proc$src/register_file.sv:0$171 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/register_file.sv:0$171 in module register_file.
Marked 1 switch rules as full_case in process $proc$src/register_file.sv:43$101 in module register_file.
Marked 2 switch rules as full_case in process $proc$src/pc.sv:0$36 in module pc.
Marked 1 switch rules as full_case in process $proc$src/pc.sv:32$34 in module pc.
Marked 1 switch rules as full_case in process $proc$src/mux.sv:0$33 in module mux.
Marked 3 switch rules as full_case in process $proc$src/memory_control.sv:0$27 in module memory_control.
Marked 1 switch rules as full_case in process $proc$src/memory_control.sv:11$25 in module memory_control.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 9 dead cases.

20.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 52 redundant assignments.
Promoted 201 assignments to connections.

20.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$575'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$571'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$564'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$553'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$547'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$541'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$537'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$526'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$515'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$512'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$509'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$503'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$759'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$758'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$757'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$756'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$755'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$754'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$739'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$738'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$737'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$736'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$735'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$734'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$733'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$732'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$731'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

20.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$551'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$545'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$513'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$507'.
Found async reset \nRst in `\ru_ram.$proc$src/ru_ram.sv:16$208'.
Found async reset \nRST in `\request_unit.$proc$src/request_unit.sv:21$185'.
Found async reset \nRST in `\register_file.$proc$src/register_file.sv:43$101'.
Found async reset \nRST in `\pc.$proc$src/pc.sv:32$34'.
Found async reset \nRST in `\memory_control.$proc$src/memory_control.sv:11$25'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

20.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~84 debug messages>

20.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$575'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$571'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$565'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$564'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$554'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$553'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$551'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$548'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$547'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$545'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$542'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$541'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$540'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$538'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$537'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$527'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$526'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$516'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$515'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$513'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$512'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$510'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$509'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$507'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$504'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$503'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$502'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$500'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$759'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$758'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$757'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$756'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$755'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$754'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$739'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$738'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$737'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$736'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$735'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$734'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$733'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$732'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$731'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$281'.
     1/1: $1$mem2reg_rd$\seg7$src/ssdec.sv:26$278_DATA[6:0]$283
Creating decoders for process `\ssdec.$proc$src/ssdec.sv:0$280'.
Creating decoders for process `\alu.$proc$src/alu.sv:0$259'.
     1/13: $3\ALUResult[31:0]
     2/13: $2\ALUResult[31:0]
     3/13: $9\zero[0:0]
     4/13: $8\zero[0:0]
     5/13: $7\zero[0:0]
     6/13: $6\zero[0:0]
     7/13: $5\zero[0:0]
     8/13: $4\zero[0:0]
     9/13: $3\zero[0:0]
    10/13: $2\zero[0:0]
    11/13: $1\zero[0:0]
    12/13: $1\negative[0:0]
    13/13: $1\ALUResult[31:0]
Creating decoders for process `\control.$proc$src/control.sv:0$254'.
     1/23: $9\cuOP[5:0]
     2/23: $6\aluOP[3:0]
     3/23: $8\cuOP[5:0]
     4/23: $5\aluOP[3:0]
     5/23: $7\cuOP[5:0]
     6/23: $4\aluOP[3:0]
     7/23: $6\cuOP[5:0]
     8/23: $3\aluOP[3:0]
     9/23: $5\cuOP[5:0]
    10/23: $2\aluOP[3:0]
    11/23: $4\cuOP[5:0]
    12/23: $3\cuOP[5:0]
    13/23: $2\cuOP[5:0]
    14/23: $1\regWrite[0:0]
    15/23: $1\rd[4:0]
    16/23: $1\imm[19:0]
    17/23: $1\cuOP[5:0]
    18/23: $1\reg_2[4:0]
    19/23: $1\reg_1[4:0]
    20/23: $1\aluOP[3:0]
    21/23: $1\memRead[0:0]
    22/23: $1\memWrite[0:0]
    23/23: $1\aluSrc[0:0]
Creating decoders for process `\writeToReg.$proc$src/writeToReg.sv:0$250'.
     1/1: $1\writeData[31:0]
Creating decoders for process `\signExtender.$proc$src/signExtender.sv:0$225'.
     1/4: $4\immOut[31:0]
     2/4: $3\immOut[31:0]
     3/4: $2\immOut[31:0]
     4/4: $1\immOut[31:0]
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$221'.
     1/1: $1$mem2reg_rd$\memory$src/ru_ram.sv:54$207_DATA[31:0]$223
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
     1/102: $3\nxt_memory[0][31:0]
     2/102: $3\nxt_memory[31][31:0]
     3/102: $3\nxt_memory[30][31:0]
     4/102: $3\nxt_memory[29][31:0]
     5/102: $3\nxt_memory[28][31:0]
     6/102: $3\nxt_memory[27][31:0]
     7/102: $3\nxt_memory[26][31:0]
     8/102: $3\nxt_memory[25][31:0]
     9/102: $3\nxt_memory[24][31:0]
    10/102: $3\nxt_memory[23][31:0]
    11/102: $3\nxt_memory[22][31:0]
    12/102: $3\nxt_memory[21][31:0]
    13/102: $3\nxt_memory[20][31:0]
    14/102: $3\nxt_memory[19][31:0]
    15/102: $3\nxt_memory[18][31:0]
    16/102: $3\nxt_memory[17][31:0]
    17/102: $3\nxt_memory[16][31:0]
    18/102: $3\nxt_memory[15][31:0]
    19/102: $3\nxt_memory[14][31:0]
    20/102: $3\nxt_memory[13][31:0]
    21/102: $3\nxt_memory[12][31:0]
    22/102: $3\nxt_memory[11][31:0]
    23/102: $3\nxt_memory[10][31:0]
    24/102: $3\nxt_memory[9][31:0]
    25/102: $3\nxt_memory[8][31:0]
    26/102: $3\nxt_memory[7][31:0]
    27/102: $3\nxt_memory[6][31:0]
    28/102: $3\nxt_memory[5][31:0]
    29/102: $3\nxt_memory[4][31:0]
    30/102: $3\nxt_memory[3][31:0]
    31/102: $3\nxt_memory[2][31:0]
    32/102: $3\nxt_memory[1][31:0]
    33/102: $2\nxt_memory[31][31:0]
    34/102: $2\nxt_memory[30][31:0]
    35/102: $2\nxt_memory[29][31:0]
    36/102: $2\nxt_memory[28][31:0]
    37/102: $2\nxt_memory[27][31:0]
    38/102: $2\nxt_memory[26][31:0]
    39/102: $2\nxt_memory[25][31:0]
    40/102: $2\nxt_memory[24][31:0]
    41/102: $2\nxt_memory[23][31:0]
    42/102: $2\nxt_memory[22][31:0]
    43/102: $2\nxt_memory[21][31:0]
    44/102: $2\nxt_memory[20][31:0]
    45/102: $2\nxt_memory[19][31:0]
    46/102: $2\nxt_memory[18][31:0]
    47/102: $2\nxt_memory[17][31:0]
    48/102: $2\nxt_memory[16][31:0]
    49/102: $2\nxt_memory[15][31:0]
    50/102: $2\nxt_memory[14][31:0]
    51/102: $2\nxt_memory[13][31:0]
    52/102: $2\nxt_memory[12][31:0]
    53/102: $2\nxt_memory[11][31:0]
    54/102: $2\nxt_memory[10][31:0]
    55/102: $2\nxt_memory[9][31:0]
    56/102: $2\nxt_memory[8][31:0]
    57/102: $2\nxt_memory[7][31:0]
    58/102: $2\nxt_memory[6][31:0]
    59/102: $2\nxt_memory[5][31:0]
    60/102: $2\nxt_memory[4][31:0]
    61/102: $2\nxt_memory[3][31:0]
    62/102: $2\nxt_memory[2][31:0]
    63/102: $2\nxt_memory[1][31:0]
    64/102: $2\nxt_memory[0][31:0]
    65/102: $2$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_ADDR[4:0]$218
    66/102: $2$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_DATA[31:0]$219
    67/102: $1$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_DATA[31:0]$217
    68/102: $1$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_ADDR[4:0]$216
    69/102: $1\nxt_memory[31][31:0]
    70/102: $1\nxt_memory[30][31:0]
    71/102: $1\nxt_memory[29][31:0]
    72/102: $1\nxt_memory[28][31:0]
    73/102: $1\nxt_memory[27][31:0]
    74/102: $1\nxt_memory[26][31:0]
    75/102: $1\nxt_memory[25][31:0]
    76/102: $1\nxt_memory[24][31:0]
    77/102: $1\nxt_memory[23][31:0]
    78/102: $1\nxt_memory[22][31:0]
    79/102: $1\nxt_memory[21][31:0]
    80/102: $1\nxt_memory[20][31:0]
    81/102: $1\nxt_memory[19][31:0]
    82/102: $1\nxt_memory[18][31:0]
    83/102: $1\nxt_memory[17][31:0]
    84/102: $1\nxt_memory[16][31:0]
    85/102: $1\nxt_memory[15][31:0]
    86/102: $1\nxt_memory[14][31:0]
    87/102: $1\nxt_memory[13][31:0]
    88/102: $1\nxt_memory[12][31:0]
    89/102: $1\nxt_memory[11][31:0]
    90/102: $1\nxt_memory[10][31:0]
    91/102: $1\nxt_memory[9][31:0]
    92/102: $1\nxt_memory[8][31:0]
    93/102: $1\nxt_memory[7][31:0]
    94/102: $1\nxt_memory[6][31:0]
    95/102: $1\nxt_memory[5][31:0]
    96/102: $1\nxt_memory[4][31:0]
    97/102: $1\nxt_memory[3][31:0]
    98/102: $1\nxt_memory[2][31:0]
    99/102: $1\nxt_memory[1][31:0]
   100/102: $1\nxt_memory[0][31:0]
   101/102: $1\next_state[0:0]
   102/102: $1\busy[0:0]
Creating decoders for process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
     1/34: $0\state[0:0]
     2/34: $1$fordecl_block$202.i[31:0]$211
     3/34: $1\memory[4][31:0]
     4/34: $1\memory[3][31:0]
     5/34: $1\memory[2][31:0]
     6/34: $1\memory[1][31:0]
     7/34: $1\memory[0][31:0]
     8/34: $0\memory[31][31:0]
     9/34: $0\memory[30][31:0]
    10/34: $0\memory[29][31:0]
    11/34: $0\memory[28][31:0]
    12/34: $0\memory[27][31:0]
    13/34: $0\memory[26][31:0]
    14/34: $0\memory[25][31:0]
    15/34: $0\memory[24][31:0]
    16/34: $0\memory[23][31:0]
    17/34: $0\memory[22][31:0]
    18/34: $0\memory[21][31:0]
    19/34: $0\memory[20][31:0]
    20/34: $0\memory[19][31:0]
    21/34: $0\memory[18][31:0]
    22/34: $0\memory[17][31:0]
    23/34: $0\memory[16][31:0]
    24/34: $0\memory[15][31:0]
    25/34: $0\memory[14][31:0]
    26/34: $0\memory[13][31:0]
    27/34: $0\memory[12][31:0]
    28/34: $0\memory[11][31:0]
    29/34: $0\memory[10][31:0]
    30/34: $0\memory[9][31:0]
    31/34: $0\memory[8][31:0]
    32/34: $0\memory[7][31:0]
    33/34: $0\memory[6][31:0]
    34/34: $0\memory[5][31:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:0$187'.
     1/8: $4\nxt_dmmWen[0:0]
     2/8: $4\nxt_dmmRen[0:0]
     3/8: $3\nxt_dmmWen[0:0]
     4/8: $3\nxt_dmmRen[0:0]
     5/8: $2\nxt_dmmWen[0:0]
     6/8: $2\nxt_dmmRen[0:0]
     7/8: $1\nxt_dmmWen[0:0]
     8/8: $1\nxt_dmmRen[0:0]
Creating decoders for process `\request_unit.$proc$src/request_unit.sv:21$185'.
     1/2: $0\dmmWen[0:0]
     2/2: $0\dmmRen[0:0]
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$182'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:69$100_DATA[31:0]$184
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$179'.
     1/1: $1$mem2reg_rd$\register$src/register_file.sv:68$99_DATA[31:0]$181
Creating decoders for process `\register_file.$proc$src/register_file.sv:0$171'.
     1/66: $2\nxt_register[0][31:0]
     2/66: $2\nxt_register[31][31:0]
     3/66: $2\nxt_register[30][31:0]
     4/66: $2\nxt_register[29][31:0]
     5/66: $2\nxt_register[28][31:0]
     6/66: $2\nxt_register[27][31:0]
     7/66: $2\nxt_register[26][31:0]
     8/66: $2\nxt_register[25][31:0]
     9/66: $2\nxt_register[24][31:0]
    10/66: $2\nxt_register[23][31:0]
    11/66: $2\nxt_register[22][31:0]
    12/66: $2\nxt_register[21][31:0]
    13/66: $2\nxt_register[20][31:0]
    14/66: $2\nxt_register[19][31:0]
    15/66: $2\nxt_register[18][31:0]
    16/66: $2\nxt_register[17][31:0]
    17/66: $2\nxt_register[16][31:0]
    18/66: $2\nxt_register[15][31:0]
    19/66: $2\nxt_register[14][31:0]
    20/66: $2\nxt_register[13][31:0]
    21/66: $2\nxt_register[12][31:0]
    22/66: $2\nxt_register[11][31:0]
    23/66: $2\nxt_register[10][31:0]
    24/66: $2\nxt_register[9][31:0]
    25/66: $2\nxt_register[8][31:0]
    26/66: $2\nxt_register[7][31:0]
    27/66: $2\nxt_register[6][31:0]
    28/66: $2\nxt_register[5][31:0]
    29/66: $2\nxt_register[4][31:0]
    30/66: $2\nxt_register[3][31:0]
    31/66: $2\nxt_register[2][31:0]
    32/66: $2\nxt_register[1][31:0]
    33/66: $1\nxt_register[31][31:0]
    34/66: $1\nxt_register[30][31:0]
    35/66: $1\nxt_register[29][31:0]
    36/66: $1\nxt_register[28][31:0]
    37/66: $1\nxt_register[27][31:0]
    38/66: $1\nxt_register[26][31:0]
    39/66: $1\nxt_register[25][31:0]
    40/66: $1\nxt_register[24][31:0]
    41/66: $1\nxt_register[23][31:0]
    42/66: $1\nxt_register[22][31:0]
    43/66: $1\nxt_register[21][31:0]
    44/66: $1\nxt_register[20][31:0]
    45/66: $1\nxt_register[19][31:0]
    46/66: $1\nxt_register[18][31:0]
    47/66: $1\nxt_register[17][31:0]
    48/66: $1\nxt_register[16][31:0]
    49/66: $1\nxt_register[15][31:0]
    50/66: $1\nxt_register[14][31:0]
    51/66: $1\nxt_register[13][31:0]
    52/66: $1\nxt_register[12][31:0]
    53/66: $1\nxt_register[11][31:0]
    54/66: $1\nxt_register[10][31:0]
    55/66: $1\nxt_register[9][31:0]
    56/66: $1\nxt_register[8][31:0]
    57/66: $1\nxt_register[7][31:0]
    58/66: $1\nxt_register[6][31:0]
    59/66: $1\nxt_register[5][31:0]
    60/66: $1\nxt_register[4][31:0]
    61/66: $1\nxt_register[3][31:0]
    62/66: $1\nxt_register[2][31:0]
    63/66: $1\nxt_register[1][31:0]
    64/66: $1\nxt_register[0][31:0]
    65/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_ADDR[4:0]$177
    66/66: $1$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_DATA[31:0]$178
Creating decoders for process `\register_file.$proc$src/register_file.sv:43$101'.
     1/66: $1$fordecl_block$94.i[31:0]$170
     2/66: $0\register[31][31:0]
     3/66: $0\register[30][31:0]
     4/66: $0\register[29][31:0]
     5/66: $0\register[28][31:0]
     6/66: $0\register[27][31:0]
     7/66: $0\register[26][31:0]
     8/66: $0\register[25][31:0]
     9/66: $0\register[24][31:0]
    10/66: $0\register[23][31:0]
    11/66: $0\register[22][31:0]
    12/66: $0\register[21][31:0]
    13/66: $0\register[20][31:0]
    14/66: $0\register[19][31:0]
    15/66: $0\register[18][31:0]
    16/66: $0\register[17][31:0]
    17/66: $0\register[16][31:0]
    18/66: $0\register[15][31:0]
    19/66: $0\register[14][31:0]
    20/66: $0\register[13][31:0]
    21/66: $0\register[12][31:0]
    22/66: $0\register[11][31:0]
    23/66: $0\register[10][31:0]
    24/66: $0\register[9][31:0]
    25/66: $0\register[8][31:0]
    26/66: $0\register[7][31:0]
    27/66: $0\register[6][31:0]
    28/66: $0\register[5][31:0]
    29/66: $0\register[4][31:0]
    30/66: $0\register[3][31:0]
    31/66: $0\register[2][31:0]
    32/66: $0\register[1][31:0]
    33/66: $1$fordecl_block$90.$for_loop$91[31].$fordecl_block$92.j[31:0]$169
    34/66: $1$fordecl_block$90.$for_loop$91[30].$fordecl_block$92.j[31:0]$168
    35/66: $1$fordecl_block$90.$for_loop$91[29].$fordecl_block$92.j[31:0]$167
    36/66: $1$fordecl_block$90.$for_loop$91[28].$fordecl_block$92.j[31:0]$166
    37/66: $1$fordecl_block$90.$for_loop$91[27].$fordecl_block$92.j[31:0]$165
    38/66: $1$fordecl_block$90.$for_loop$91[26].$fordecl_block$92.j[31:0]$164
    39/66: $1$fordecl_block$90.$for_loop$91[25].$fordecl_block$92.j[31:0]$163
    40/66: $1$fordecl_block$90.$for_loop$91[24].$fordecl_block$92.j[31:0]$162
    41/66: $1$fordecl_block$90.$for_loop$91[23].$fordecl_block$92.j[31:0]$161
    42/66: $1$fordecl_block$90.$for_loop$91[22].$fordecl_block$92.j[31:0]$160
    43/66: $1$fordecl_block$90.$for_loop$91[21].$fordecl_block$92.j[31:0]$159
    44/66: $1$fordecl_block$90.$for_loop$91[20].$fordecl_block$92.j[31:0]$158
    45/66: $1$fordecl_block$90.$for_loop$91[19].$fordecl_block$92.j[31:0]$157
    46/66: $1$fordecl_block$90.$for_loop$91[18].$fordecl_block$92.j[31:0]$156
    47/66: $1$fordecl_block$90.$for_loop$91[17].$fordecl_block$92.j[31:0]$155
    48/66: $1$fordecl_block$90.$for_loop$91[16].$fordecl_block$92.j[31:0]$154
    49/66: $1$fordecl_block$90.$for_loop$91[15].$fordecl_block$92.j[31:0]$153
    50/66: $1$fordecl_block$90.$for_loop$91[14].$fordecl_block$92.j[31:0]$152
    51/66: $1$fordecl_block$90.$for_loop$91[13].$fordecl_block$92.j[31:0]$151
    52/66: $1$fordecl_block$90.$for_loop$91[12].$fordecl_block$92.j[31:0]$150
    53/66: $1$fordecl_block$90.$for_loop$91[11].$fordecl_block$92.j[31:0]$149
    54/66: $1$fordecl_block$90.$for_loop$91[10].$fordecl_block$92.j[31:0]$148
    55/66: $1$fordecl_block$90.$for_loop$91[9].$fordecl_block$92.j[31:0]$147
    56/66: $1$fordecl_block$90.$for_loop$91[8].$fordecl_block$92.j[31:0]$146
    57/66: $1$fordecl_block$90.$for_loop$91[7].$fordecl_block$92.j[31:0]$145
    58/66: $1$fordecl_block$90.$for_loop$91[6].$fordecl_block$92.j[31:0]$144
    59/66: $1$fordecl_block$90.$for_loop$91[5].$fordecl_block$92.j[31:0]$143
    60/66: $1$fordecl_block$90.$for_loop$91[4].$fordecl_block$92.j[31:0]$142
    61/66: $1$fordecl_block$90.$for_loop$91[3].$fordecl_block$92.j[31:0]$141
    62/66: $1$fordecl_block$90.$for_loop$91[2].$fordecl_block$92.j[31:0]$140
    63/66: $1$fordecl_block$90.$for_loop$91[1].$fordecl_block$92.j[31:0]$139
    64/66: $1$fordecl_block$90.$for_loop$91[0].$fordecl_block$92.j[31:0]$138
    65/66: $1$fordecl_block$90.i[31:0]$137
    66/66: $0\register[0][31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:0$36'.
     1/2: $2\next_pc[31:0]
     2/2: $1\next_pc[31:0]
Creating decoders for process `\pc.$proc$src/pc.sv:32$34'.
     1/1: $0\PC[31:0]
Creating decoders for process `\mux.$proc$src/mux.sv:0$33'.
     1/1: $1\out[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:0$27'.
     1/20: $3\i_wait[0:0]
     2/20: $4\imemload[31:0]
     3/20: $3\Ren[0:0]
     4/20: $3\ramaddr[31:0]
     5/20: $3\Wen[0:0]
     6/20: $2\d_wait[0:0]
     7/20: $2\ramstore[31:0]
     8/20: $2\Wen[0:0]
     9/20: $2\ramaddr[31:0]
    10/20: $2\i_wait[0:0]
    11/20: $2\Ren[0:0]
    12/20: $3\imemload[31:0]
    13/20: $1\d_wait[0:0]
    14/20: $1\dmmload[31:0]
    15/20: $1\Ren[0:0]
    16/20: $1\ramaddr[31:0]
    17/20: $1\i_wait[0:0]
    18/20: $1\Wen[0:0]
    19/20: $1\ramstore[31:0]
    20/20: $2\imemload[31:0]
Creating decoders for process `\memory_control.$proc$src/memory_control.sv:11$25'.
     1/3: $0\prev_imemload[31:0]
     2/3: $0\prev_dmmstore[31:0]
     3/3: $0\prev_dmmaddr[31:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

20.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ssdec.$mem2reg_rd$\seg7$src/ssdec.sv:26$278_DATA' from process `\ssdec.$proc$src/ssdec.sv:0$281'.
No latch inferred for signal `\ssdec.\seg7[0]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[1]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[2]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[3]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[4]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[5]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[6]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[7]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[8]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[9]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[10]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[11]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[12]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[13]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[14]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\ssdec.\seg7[15]' from process `\ssdec.$proc$src/ssdec.sv:0$280'.
No latch inferred for signal `\alu.\zero' from process `\alu.$proc$src/alu.sv:0$259'.
No latch inferred for signal `\alu.\negative' from process `\alu.$proc$src/alu.sv:0$259'.
No latch inferred for signal `\alu.\ALUResult' from process `\alu.$proc$src/alu.sv:0$259'.
No latch inferred for signal `\control.\regWrite' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\aluSrc' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\memWrite' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\memRead' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\aluOP' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\cuOP' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\imm' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\reg_1' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\reg_2' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\control.\rd' from process `\control.$proc$src/control.sv:0$254'.
No latch inferred for signal `\writeToReg.\writeData' from process `\writeToReg.$proc$src/writeToReg.sv:0$250'.
No latch inferred for signal `\signExtender.\immOut' from process `\signExtender.$proc$src/signExtender.sv:0$225'.
No latch inferred for signal `\ru_ram.$mem2reg_rd$\memory$src/ru_ram.sv:54$207_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$221'.
No latch inferred for signal `\ru_ram.\display' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\busy' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\next_state' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.$fordecl_block$204.i' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[0]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[1]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[2]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[3]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[4]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[5]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[6]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[7]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[8]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[9]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[10]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[11]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[12]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[13]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[14]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[15]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[16]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[17]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[18]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[19]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[20]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[21]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[22]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[23]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[24]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[25]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[26]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[27]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[28]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[29]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[30]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.\nxt_memory[31]' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_ADDR' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\ru_ram.$mem2reg_wr$\nxt_memory$src/ru_ram.sv:42$206_DATA' from process `\ru_ram.$proc$src/ru_ram.sv:0$212'.
No latch inferred for signal `\request_unit.\nxt_dmmRen' from process `\request_unit.$proc$src/request_unit.sv:0$187'.
No latch inferred for signal `\request_unit.\nxt_dmmWen' from process `\request_unit.$proc$src/request_unit.sv:0$187'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:69$100_DATA' from process `\register_file.$proc$src/register_file.sv:0$182'.
No latch inferred for signal `\register_file.$mem2reg_rd$\register$src/register_file.sv:68$99_DATA' from process `\register_file.$proc$src/register_file.sv:0$179'.
No latch inferred for signal `\register_file.$fordecl_block$96.i' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[0]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[1]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[2]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[3]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[4]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[5]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[6]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[7]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[8]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[9]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[10]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[11]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[12]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[13]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[14]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[15]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[16]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[17]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[18]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[19]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[20]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[21]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[22]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[23]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[24]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[25]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[26]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[27]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[28]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[29]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[30]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.\nxt_register[31]' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_ADDR' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\register_file.$mem2reg_wr$\nxt_register$src/register_file.sv:64$98_DATA' from process `\register_file.$proc$src/register_file.sv:0$171'.
No latch inferred for signal `\pc.\next_pc' from process `\pc.$proc$src/pc.sv:0$36'.
No latch inferred for signal `\mux.\out' from process `\mux.$proc$src/mux.sv:0$33'.
No latch inferred for signal `\memory_control.\imemload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramaddr' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\ramstore' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Wen' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\dmmload' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\Ren' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\d_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.
No latch inferred for signal `\memory_control.\i_wait' from process `\memory_control.$proc$src/memory_control.sv:0$27'.

20.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572'.
  created $adff cell `$procdff$4577' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$565'.
  created $dff cell `$procdff$4578' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561'.
  created $adff cell `$procdff$4579' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$554'.
  created $dff cell `$procdff$4580' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$551'.
  created $adff cell `$procdff$4581' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$548'.
  created $dff cell `$procdff$4582' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$545'.
  created $adff cell `$procdff$4583' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$542'.
  created $dff cell `$procdff$4584' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$540'.
  created $dff cell `$procdff$4585' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$538'.
  created $dff cell `$procdff$4586' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534'.
  created $adff cell `$procdff$4587' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$527'.
  created $dff cell `$procdff$4588' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523'.
  created $adff cell `$procdff$4589' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$516'.
  created $dff cell `$procdff$4590' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$513'.
  created $adff cell `$procdff$4591' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$510'.
  created $dff cell `$procdff$4592' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$507'.
  created $adff cell `$procdff$4593' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$504'.
  created $dff cell `$procdff$4594' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$502'.
  created $dff cell `$procdff$4595' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$500'.
  created $dff cell `$procdff$4596' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4597' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4598' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4599' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4600' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4601' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
  created $dff cell `$procdff$4602' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4603' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4604' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4605' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4606' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4607' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4608' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4609' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4610' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
  created $dff cell `$procdff$4611' with positive edge clock.
Creating register for signal `\ru_ram.\state' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4612' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.$fordecl_block$202.i' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4615' with positive edge clock.
Creating register for signal `\ru_ram.\memory[0]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4616' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[1]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4617' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[2]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4618' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[3]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4619' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[4]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $adff cell `$procdff$4620' with positive edge clock and negative level reset.
Creating register for signal `\ru_ram.\memory[5]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4623' with positive edge clock.
Creating register for signal `\ru_ram.\memory[6]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4626' with positive edge clock.
Creating register for signal `\ru_ram.\memory[7]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4629' with positive edge clock.
Creating register for signal `\ru_ram.\memory[8]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4632' with positive edge clock.
Creating register for signal `\ru_ram.\memory[9]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4635' with positive edge clock.
Creating register for signal `\ru_ram.\memory[10]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4638' with positive edge clock.
Creating register for signal `\ru_ram.\memory[11]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4641' with positive edge clock.
Creating register for signal `\ru_ram.\memory[12]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4644' with positive edge clock.
Creating register for signal `\ru_ram.\memory[13]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4647' with positive edge clock.
Creating register for signal `\ru_ram.\memory[14]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4650' with positive edge clock.
Creating register for signal `\ru_ram.\memory[15]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4653' with positive edge clock.
Creating register for signal `\ru_ram.\memory[16]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4656' with positive edge clock.
Creating register for signal `\ru_ram.\memory[17]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4659' with positive edge clock.
Creating register for signal `\ru_ram.\memory[18]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4662' with positive edge clock.
Creating register for signal `\ru_ram.\memory[19]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4665' with positive edge clock.
Creating register for signal `\ru_ram.\memory[20]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4668' with positive edge clock.
Creating register for signal `\ru_ram.\memory[21]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4671' with positive edge clock.
Creating register for signal `\ru_ram.\memory[22]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4674' with positive edge clock.
Creating register for signal `\ru_ram.\memory[23]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4677' with positive edge clock.
Creating register for signal `\ru_ram.\memory[24]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4680' with positive edge clock.
Creating register for signal `\ru_ram.\memory[25]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4683' with positive edge clock.
Creating register for signal `\ru_ram.\memory[26]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4686' with positive edge clock.
Creating register for signal `\ru_ram.\memory[27]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4689' with positive edge clock.
Creating register for signal `\ru_ram.\memory[28]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4692' with positive edge clock.
Creating register for signal `\ru_ram.\memory[29]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4695' with positive edge clock.
Creating register for signal `\ru_ram.\memory[30]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4698' with positive edge clock.
Creating register for signal `\ru_ram.\memory[31]' using process `\ru_ram.$proc$src/ru_ram.sv:16$208'.
  created $dff cell `$procdff$4701' with positive edge clock.
Creating register for signal `\request_unit.\dmmRen' using process `\request_unit.$proc$src/request_unit.sv:21$185'.
  created $adff cell `$procdff$4702' with positive edge clock and negative level reset.
Creating register for signal `\request_unit.\dmmWen' using process `\request_unit.$proc$src/request_unit.sv:21$185'.
  created $adff cell `$procdff$4703' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.i' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4704' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[0].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4705' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[1].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4706' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[2].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4707' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[3].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4708' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[4].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4709' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[5].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4710' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[6].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4711' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[7].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4712' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[8].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4713' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[9].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4714' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[10].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4715' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[11].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4716' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[12].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4717' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[13].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4718' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[14].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4719' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[15].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4720' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[16].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4721' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[17].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4722' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[18].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4723' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[19].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4724' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[20].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4725' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[21].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4726' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[22].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4727' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[23].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4728' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[24].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4729' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[25].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4730' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[26].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4731' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[27].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4732' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[28].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4733' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[29].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4734' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[30].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4735' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$90.$for_loop$91[31].$fordecl_block$92.j' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4736' with positive edge clock and negative level reset.
Creating register for signal `\register_file.$fordecl_block$94.i' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $dff cell `$procdff$4739' with positive edge clock.
Creating register for signal `\register_file.\register[0]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4740' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[1]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4741' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[2]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4742' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[3]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4743' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[4]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4744' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[5]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4745' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[6]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4746' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[7]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4747' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[8]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4748' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[9]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4749' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[10]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4750' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[11]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4751' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[12]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4752' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[13]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4753' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[14]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4754' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[15]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4755' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[16]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4756' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[17]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4757' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[18]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4758' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[19]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4759' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[20]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4760' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[21]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4761' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[22]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4762' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[23]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4763' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[24]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4764' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[25]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4765' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[26]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4766' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[27]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4767' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[28]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4768' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[29]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4769' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[30]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4770' with positive edge clock and negative level reset.
Creating register for signal `\register_file.\register[31]' using process `\register_file.$proc$src/register_file.sv:43$101'.
  created $adff cell `$procdff$4771' with positive edge clock and negative level reset.
Creating register for signal `\pc.\PC' using process `\pc.$proc$src/pc.sv:32$34'.
  created $adff cell `$procdff$4772' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmaddr' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4773' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_dmmstore' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4774' with positive edge clock and negative level reset.
Creating register for signal `\memory_control.\prev_imemload' using process `\memory_control.$proc$src/memory_control.sv:11$25'.
  created $adff cell `$procdff$4775' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$4776' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$4777' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$4778' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$4779' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$4780' with positive edge clock.

20.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

20.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$575'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$572'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$571'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$565'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$565'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$564'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$561'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$560'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$554'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$554'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$553'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$551'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$550'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$548'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$548'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$547'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$545'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$544'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$542'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$542'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$541'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$540'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$540'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$539'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$538'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$537'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$534'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$533'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$527'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$527'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$526'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$523'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$522'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$516'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$516'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$515'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$513'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$512'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$510'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$510'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$509'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$507'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$506'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$504'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$504'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$503'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$502'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$502'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$501'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$500'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$759'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$758'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$757'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$756'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$755'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$754'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$740'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$739'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$738'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$737'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$736'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$735'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$734'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$733'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$732'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$731'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$712'.
Found and cleaned up 1 empty switch in `\ssdec.$proc$src/ssdec.sv:0$281'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$281'.
Removing empty process `ssdec.$proc$src/ssdec.sv:0$280'.
Found and cleaned up 11 empty switches in `\alu.$proc$src/alu.sv:0$259'.
Removing empty process `alu.$proc$src/alu.sv:0$259'.
Found and cleaned up 9 empty switches in `\control.$proc$src/control.sv:0$254'.
Removing empty process `control.$proc$src/control.sv:0$254'.
Found and cleaned up 1 empty switch in `\writeToReg.$proc$src/writeToReg.sv:0$250'.
Removing empty process `writeToReg.$proc$src/writeToReg.sv:0$250'.
Found and cleaned up 4 empty switches in `\signExtender.$proc$src/signExtender.sv:0$225'.
Removing empty process `signExtender.$proc$src/signExtender.sv:0$225'.
Found and cleaned up 1 empty switch in `\ru_ram.$proc$src/ru_ram.sv:0$221'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$221'.
Found and cleaned up 3 empty switches in `\ru_ram.$proc$src/ru_ram.sv:0$212'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:0$212'.
Removing empty process `ru_ram.$proc$src/ru_ram.sv:16$208'.
Found and cleaned up 4 empty switches in `\request_unit.$proc$src/request_unit.sv:0$187'.
Removing empty process `request_unit.$proc$src/request_unit.sv:0$187'.
Removing empty process `request_unit.$proc$src/request_unit.sv:21$185'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$182'.
Removing empty process `register_file.$proc$src/register_file.sv:0$182'.
Found and cleaned up 1 empty switch in `\register_file.$proc$src/register_file.sv:0$179'.
Removing empty process `register_file.$proc$src/register_file.sv:0$179'.
Found and cleaned up 2 empty switches in `\register_file.$proc$src/register_file.sv:0$171'.
Removing empty process `register_file.$proc$src/register_file.sv:0$171'.
Removing empty process `register_file.$proc$src/register_file.sv:43$101'.
Found and cleaned up 2 empty switches in `\pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:0$36'.
Removing empty process `pc.$proc$src/pc.sv:32$34'.
Found and cleaned up 1 empty switch in `\mux.$proc$src/mux.sv:0$33'.
Removing empty process `mux.$proc$src/mux.sv:0$33'.
Found and cleaned up 3 empty switches in `\memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:0$27'.
Removing empty process `memory_control.$proc$src/memory_control.sv:11$25'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 84 empty switches.

20.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module ssdec.
<suppressed ~1 debug messages>
Optimizing module alu.
<suppressed ~12 debug messages>
Optimizing module control.
<suppressed ~11 debug messages>
Optimizing module writeToReg.
<suppressed ~1 debug messages>
Optimizing module signExtender.
<suppressed ~1 debug messages>
Optimizing module ru_ram.
<suppressed ~239 debug messages>
Optimizing module request.
Optimizing module request_unit.
Optimizing module register_file.
<suppressed ~35 debug messages>
Optimizing module pc.
<suppressed ~9 debug messages>
Optimizing module mux.
Optimizing module memory_control.
Optimizing module top1.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

20.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module ssdec.
Deleting now unused module alu.
Deleting now unused module control.
Deleting now unused module writeToReg.
Deleting now unused module signExtender.
Deleting now unused module ru_ram.
Deleting now unused module request.
Deleting now unused module request_unit.
Deleting now unused module register_file.
Deleting now unused module pc.
Deleting now unused module mux.
Deleting now unused module memory_control.
Deleting now unused module top1.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~21 debug messages>

20.5. Executing TRIBUF pass.

20.6. Executing DEMINOUT pass (demote inout ports to input or output).

20.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~151 debug messages>

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 262 unused cells and 1388 unused wires.
<suppressed ~292 debug messages>

20.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\right [2] is used but has no driver.
Warning: Wire ice40hx8k.\right [1] is used but has no driver.
Warning: Wire ice40hx8k.\right [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 64 problems.

20.10. Executing OPT pass (performing simple optimizations).

20.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6522 debug messages>
Removed a total of 2174 cells.

20.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\top_inst.\top.\ru.\m1.$procmux$4504: \top_inst.top.ru.r1.dmmWen -> 1'1
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2163.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3459.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3963.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3711.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3243.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1576.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1578.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4251.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2200.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2202.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3495.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3999.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1615.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1617.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3747.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2239.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2241.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4287.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3279.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4035.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1654.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1656.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3531.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2278.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2280.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3783.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4323.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1693.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1695.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2317.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2319.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1064.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1071.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1079.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2356.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2358.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1732.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1734.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1088.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1098.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1109.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1121.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1134.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1148.
    dead port 2/2 on $mux $flatten\top_inst.\top.\arith.$procmux$1163.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2395.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2397.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3315.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1771.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1773.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4071.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2434.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2436.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1205.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1207.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1213.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1810.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1812.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1215.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3567.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1228.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1230.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1243.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1245.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3819.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1257.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2473.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2475.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1849.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1851.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1269.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1276.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1278.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1285.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1287.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3351.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2512.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2514.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1300.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4107.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1888.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1890.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1313.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3603.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1323.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3855.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1336.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2551.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2553.
    dead port 2/2 on $mux $flatten\top_inst.\top.\controller.$procmux$1351.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1927.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1929.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3387.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4143.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2590.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2592.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3639.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3891.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1966.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1968.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2629.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2631.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2005.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2007.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2668.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2670.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2044.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2046.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2707.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2709.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2083.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2085.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2746.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2748.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2754.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2760.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2766.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2772.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2778.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2784.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2790.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2796.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2802.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2808.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2814.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2820.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2826.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2832.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2838.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2844.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2850.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2856.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2862.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2868.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2874.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2880.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2886.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2892.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2898.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2904.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2910.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2916.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2922.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2928.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2934.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2940.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4179.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3423.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2122.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2124.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4450.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4453.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4459.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4462.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4477.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4480.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4486.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4489.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4501.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4507.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4513.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4519.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\m1.$procmux$4531.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3065.
    dead port 2/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3070.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3077.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3079.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3085.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3087.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3093.
    dead port 1/2 on $mux $flatten\top_inst.\top.\ru.\r1.$procmux$3099.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1443.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1446.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1449.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1455.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1458.
    dead port 1/2 on $mux $flatten\top_inst.\top.\signex.$procmux$1464.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3927.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$3675.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1537.
    dead port 1/2 on $mux $flatten\top_inst.\top.\rram.$procmux$1539.
    dead port 1/2 on $mux $flatten\top_inst.\top.\testpc.$procmux$4438.
    dead port 2/2 on $mux $flatten\top_inst.\top.\DUT.$procmux$4215.
    dead port 2/2 on $mux $flatten\top_inst.\top.\rram.$procmux$2161.
Removed 184 multiplexer ports.
<suppressed ~100 debug messages>

20.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2401: { $flatten\top_inst.\top.\rram.$procmux$1492_CMP $auto$opt_reduce.cc:134:opt_pmux$4803 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1777: { $flatten\top_inst.\top.\rram.$procmux$1476_CMP $auto$opt_reduce.cc:134:opt_pmux$4805 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3318: { $flatten\top_inst.\top.\DUT.$procmux$3214_CMP $auto$opt_reduce.cc:134:opt_pmux$4807 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4074: { $flatten\top_inst.\top.\DUT.$procmux$3235_CMP $auto$opt_reduce.cc:134:opt_pmux$4809 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3498: { $flatten\top_inst.\top.\DUT.$procmux$3219_CMP $auto$opt_reduce.cc:134:opt_pmux$4811 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2440: { $flatten\top_inst.\top.\rram.$procmux$1493_CMP $auto$opt_reduce.cc:134:opt_pmux$4813 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4002: { $flatten\top_inst.\top.\DUT.$procmux$3233_CMP $auto$opt_reduce.cc:134:opt_pmux$4815 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1816: { $flatten\top_inst.\top.\rram.$procmux$1477_CMP $auto$opt_reduce.cc:134:opt_pmux$4817 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3966: { $flatten\top_inst.\top.\DUT.$procmux$3232_CMP $auto$opt_reduce.cc:134:opt_pmux$4819 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3570: { $flatten\top_inst.\top.\DUT.$procmux$3221_CMP $auto$opt_reduce.cc:134:opt_pmux$4821 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1621: { $flatten\top_inst.\top.\rram.$procmux$1472_CMP $auto$opt_reduce.cc:134:opt_pmux$4823 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3750: { $flatten\top_inst.\top.\DUT.$procmux$3226_CMP $auto$opt_reduce.cc:134:opt_pmux$4825 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2479: { $flatten\top_inst.\top.\rram.$procmux$1494_CMP $auto$opt_reduce.cc:134:opt_pmux$4827 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3822: { $flatten\top_inst.\top.\DUT.$procmux$3228_CMP $auto$opt_reduce.cc:134:opt_pmux$4829 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1855: { $flatten\top_inst.\top.\rram.$procmux$1478_CMP $auto$opt_reduce.cc:134:opt_pmux$4831 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2245: { $flatten\top_inst.\top.\rram.$procmux$1488_CMP $auto$opt_reduce.cc:134:opt_pmux$4833 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4290: { $flatten\top_inst.\top.\DUT.$procmux$3241_CMP $auto$opt_reduce.cc:134:opt_pmux$4835 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3714: { $flatten\top_inst.\top.\DUT.$procmux$3225_CMP $auto$opt_reduce.cc:134:opt_pmux$4837 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3354: { $flatten\top_inst.\top.\DUT.$procmux$3215_CMP $auto$opt_reduce.cc:134:opt_pmux$4839 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3282: { $flatten\top_inst.\top.\DUT.$procmux$3213_CMP $auto$opt_reduce.cc:134:opt_pmux$4841 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2518: { $flatten\top_inst.\top.\rram.$procmux$1495_CMP $auto$opt_reduce.cc:134:opt_pmux$4843 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4110: { $flatten\top_inst.\top.\DUT.$procmux$3236_CMP $auto$opt_reduce.cc:134:opt_pmux$4845 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1894: { $flatten\top_inst.\top.\rram.$procmux$1479_CMP $auto$opt_reduce.cc:134:opt_pmux$4847 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3606: { $flatten\top_inst.\top.\DUT.$procmux$3222_CMP $auto$opt_reduce.cc:134:opt_pmux$4849 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3858: { $flatten\top_inst.\top.\DUT.$procmux$3229_CMP $auto$opt_reduce.cc:134:opt_pmux$4851 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2557: { $flatten\top_inst.\top.\rram.$procmux$1496_CMP $auto$opt_reduce.cc:134:opt_pmux$4853 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1354: $auto$opt_reduce.cc:134:opt_pmux$4855
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1933: { $flatten\top_inst.\top.\rram.$procmux$1480_CMP $auto$opt_reduce.cc:134:opt_pmux$4857 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1363: $auto$opt_reduce.cc:134:opt_pmux$4859
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3390: { $flatten\top_inst.\top.\DUT.$procmux$3216_CMP $auto$opt_reduce.cc:134:opt_pmux$4861 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1373: { $auto$opt_reduce.cc:134:opt_pmux$4867 $auto$opt_reduce.cc:134:opt_pmux$4865 $auto$opt_reduce.cc:134:opt_pmux$4863 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4146: { $flatten\top_inst.\top.\DUT.$procmux$3237_CMP $auto$opt_reduce.cc:134:opt_pmux$4869 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2596: { $flatten\top_inst.\top.\rram.$procmux$1497_CMP $auto$opt_reduce.cc:134:opt_pmux$4871 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2167: { $flatten\top_inst.\top.\rram.$procmux$1486_CMP $auto$opt_reduce.cc:134:opt_pmux$4873 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4038: { $flatten\top_inst.\top.\DUT.$procmux$3234_CMP $auto$opt_reduce.cc:134:opt_pmux$4875 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1394: $auto$opt_reduce.cc:134:opt_pmux$4877
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3894: { $flatten\top_inst.\top.\DUT.$procmux$3230_CMP $auto$opt_reduce.cc:134:opt_pmux$4879 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3642: { $flatten\top_inst.\top.\DUT.$procmux$3223_CMP $auto$opt_reduce.cc:134:opt_pmux$4881 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3246: { $flatten\top_inst.\top.\DUT.$procmux$3212_CMP $auto$opt_reduce.cc:134:opt_pmux$4883 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1972: { $flatten\top_inst.\top.\rram.$procmux$1481_CMP $auto$opt_reduce.cc:134:opt_pmux$4885 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1399: $auto$opt_reduce.cc:134:opt_pmux$4887
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1660: { $flatten\top_inst.\top.\rram.$procmux$1473_CMP $auto$opt_reduce.cc:134:opt_pmux$4889 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3462: { $flatten\top_inst.\top.\DUT.$procmux$3218_CMP $auto$opt_reduce.cc:134:opt_pmux$4891 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2635: { $flatten\top_inst.\top.\rram.$procmux$1498_CMP $auto$opt_reduce.cc:134:opt_pmux$4893 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1424: $auto$opt_reduce.cc:134:opt_pmux$4895
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3534: { $flatten\top_inst.\top.\DUT.$procmux$3220_CMP $auto$opt_reduce.cc:134:opt_pmux$4897 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2011: { $flatten\top_inst.\top.\rram.$procmux$1482_CMP $auto$opt_reduce.cc:134:opt_pmux$4899 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1582: { $flatten\top_inst.\top.\rram.$procmux$1471_CMP $auto$opt_reduce.cc:134:opt_pmux$4901 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2674: { $flatten\top_inst.\top.\rram.$procmux$1499_CMP $auto$opt_reduce.cc:134:opt_pmux$4903 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2284: { $flatten\top_inst.\top.\rram.$procmux$1489_CMP $auto$opt_reduce.cc:134:opt_pmux$4905 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2050: { $flatten\top_inst.\top.\rram.$procmux$1483_CMP $auto$opt_reduce.cc:134:opt_pmux$4907 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2713: { $flatten\top_inst.\top.\rram.$procmux$1500_CMP $auto$opt_reduce.cc:134:opt_pmux$4909 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2089: { $flatten\top_inst.\top.\rram.$procmux$1484_CMP $auto$opt_reduce.cc:134:opt_pmux$4911 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3786: { $flatten\top_inst.\top.\DUT.$procmux$3227_CMP $auto$opt_reduce.cc:134:opt_pmux$4913 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1699: { $flatten\top_inst.\top.\rram.$procmux$1474_CMP $auto$opt_reduce.cc:134:opt_pmux$4915 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2323: { $flatten\top_inst.\top.\rram.$procmux$1490_CMP $auto$opt_reduce.cc:134:opt_pmux$4917 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1504: { $flatten\top_inst.\top.\rram.$procmux$1501_CMP $auto$opt_reduce.cc:134:opt_pmux$4919 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4182: { $flatten\top_inst.\top.\DUT.$procmux$3238_CMP $auto$opt_reduce.cc:134:opt_pmux$4921 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3426: { $flatten\top_inst.\top.\DUT.$procmux$3217_CMP $auto$opt_reduce.cc:134:opt_pmux$4923 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$3056: $auto$opt_reduce.cc:134:opt_pmux$4925
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2128: { $flatten\top_inst.\top.\rram.$procmux$1485_CMP $auto$opt_reduce.cc:134:opt_pmux$4927 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4254: { $flatten\top_inst.\top.\DUT.$procmux$3240_CMP $auto$opt_reduce.cc:134:opt_pmux$4929 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2362: { $flatten\top_inst.\top.\rram.$procmux$1491_CMP $auto$opt_reduce.cc:134:opt_pmux$4931 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3210: { $auto$opt_reduce.cc:134:opt_pmux$4933 $flatten\top_inst.\top.\DUT.$procmux$3211_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2206: { $flatten\top_inst.\top.\rram.$procmux$1487_CMP $auto$opt_reduce.cc:134:opt_pmux$4935 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3930: { $flatten\top_inst.\top.\DUT.$procmux$3231_CMP $auto$opt_reduce.cc:134:opt_pmux$4937 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3678: { $flatten\top_inst.\top.\DUT.$procmux$3224_CMP $auto$opt_reduce.cc:134:opt_pmux$4939 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1738: { $flatten\top_inst.\top.\rram.$procmux$1475_CMP $auto$opt_reduce.cc:134:opt_pmux$4941 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1543: { $auto$opt_reduce.cc:134:opt_pmux$4943 $flatten\top_inst.\top.\rram.$procmux$1470_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\write.$procmux$1429: { $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$188_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$189_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$191_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$193_Y $flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$195_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$248_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$247_Y $auto$opt_reduce.cc:134:opt_pmux$4945 }
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4218: { $flatten\top_inst.\top.\DUT.$procmux$3239_CMP $auto$opt_reduce.cc:134:opt_pmux$4947 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 71 changes.

20.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

20.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\top_inst.\top.\DUT.$procdff$4740 ($adff) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 9 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 10 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 11 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 12 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 13 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 14 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 15 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 16 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 17 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 18 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 19 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 20 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 21 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 22 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 23 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 24 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 25 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 26 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 27 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 28 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 29 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 30 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 31 on $flatten\top_inst.\top.\DUT.$procdff$4740 ($dlatch) from module ice40hx8k.

20.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2403 unused wires.
<suppressed ~42 debug messages>

20.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

20.10.9. Rerunning OPT passes. (Maybe there is more to do..)

20.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~100 debug messages>

20.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\testpc.$procmux$4429: { $flatten\top_inst.\top.\testpc.$procmux$4437_CMP $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$226_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$227_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $auto$opt_reduce.cc:134:opt_pmux$4951 $auto$opt_reduce.cc:134:opt_pmux$4949 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

20.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\top_inst.\top.\rram.$procdff$4612 ($adff) from module ice40hx8k.

20.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

20.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

20.10.16. Rerunning OPT passes. (Maybe there is more to do..)

20.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2960.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2960.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2963.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2963.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2966.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2966.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2969.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2969.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2972.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2972.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2975.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2975.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2978.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2978.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2981.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2981.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2984.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2984.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2987.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2987.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2990.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2990.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2993.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2993.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2996.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2996.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2999.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$2999.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3002.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3002.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3005.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3005.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3008.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3008.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3011.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3011.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3014.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3014.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3017.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3017.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3020.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3020.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3023.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3023.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3026.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3026.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3029.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3029.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3032.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3032.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3035.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3035.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3038.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3038.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3041.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3041.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3044.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3044.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3047.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3047.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3050.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3050.
    dead port 1/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3053.
    dead port 3/3 on $pmux $flatten\top_inst.\top.\rram.$procmux$3053.
Removed 64 multiplexer ports.
<suppressed ~100 debug messages>

20.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

20.10.20. Executing OPT_DFF pass (perform DFF optimizations).

20.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

20.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.10.23. Rerunning OPT passes. (Maybe there is more to do..)

20.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

20.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.10.27. Executing OPT_DFF pass (perform DFF optimizations).

20.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.10.30. Finished OPT passes. (There is nothing left to do.)

20.11. Executing FSM pass (extract and optimize FSM).

20.11.1. Executing FSM_DETECT pass (finding FSMs in design).

20.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

20.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

20.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

20.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

20.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

20.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

20.12. Executing OPT pass (performing simple optimizations).

20.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

20.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4602 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$869_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4601 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4600 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$810_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4598 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$842_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$4597 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$880_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4986 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$878_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\top.\testpc.$procdff$4772 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0], Q = \top_inst.top.testpc.PC).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4701 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[31][31:0], Q = \top_inst.top.rram.memory[31]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4698 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[30][31:0], Q = \top_inst.top.rram.memory[30]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4695 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[29][31:0], Q = \top_inst.top.rram.memory[29]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4692 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[28][31:0], Q = \top_inst.top.rram.memory[28]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4689 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[27][31:0], Q = \top_inst.top.rram.memory[27]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4686 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[26][31:0], Q = \top_inst.top.rram.memory[26]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4683 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[25][31:0], Q = \top_inst.top.rram.memory[25]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4680 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[24][31:0], Q = \top_inst.top.rram.memory[24]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4677 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[23][31:0], Q = \top_inst.top.rram.memory[23]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4674 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[22][31:0], Q = \top_inst.top.rram.memory[22]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4671 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[21][31:0], Q = \top_inst.top.rram.memory[21]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4668 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[20][31:0], Q = \top_inst.top.rram.memory[20]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4665 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[19][31:0], Q = \top_inst.top.rram.memory[19]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4662 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[18][31:0], Q = \top_inst.top.rram.memory[18]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4659 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[17][31:0], Q = \top_inst.top.rram.memory[17]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4656 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[16][31:0], Q = \top_inst.top.rram.memory[16]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4653 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[15][31:0], Q = \top_inst.top.rram.memory[15]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4650 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[14][31:0], Q = \top_inst.top.rram.memory[14]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4647 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[13][31:0], Q = \top_inst.top.rram.memory[13]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4644 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[12][31:0], Q = \top_inst.top.rram.memory[12]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4641 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[11][31:0], Q = \top_inst.top.rram.memory[11]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4638 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[10][31:0], Q = \top_inst.top.rram.memory[10]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4635 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[9][31:0], Q = \top_inst.top.rram.memory[9]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4632 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[8][31:0], Q = \top_inst.top.rram.memory[8]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4629 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[7][31:0], Q = \top_inst.top.rram.memory[7]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4626 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[6][31:0], Q = \top_inst.top.rram.memory[6]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4623 ($dff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[5][31:0], Q = \top_inst.top.rram.memory[5]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4620 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[4][31:0], Q = \top_inst.top.rram.memory[4]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4619 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[3][31:0], Q = \top_inst.top.rram.memory[3]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4618 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[2][31:0], Q = \top_inst.top.rram.memory[2]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4617 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[1][31:0], Q = \top_inst.top.rram.memory[1]).
Adding EN signal on $flatten\top_inst.\top.\rram.$procdff$4616 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\rram.$3\nxt_memory[0][31:0], Q = \top_inst.top.rram.memory[0]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4771 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[31][31:0], Q = \top_inst.top.DUT.register[31]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4770 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[30][31:0], Q = \top_inst.top.DUT.register[30]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4769 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[29][31:0], Q = \top_inst.top.DUT.register[29]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4768 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[28][31:0], Q = \top_inst.top.DUT.register[28]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4767 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[27][31:0], Q = \top_inst.top.DUT.register[27]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4766 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[26][31:0], Q = \top_inst.top.DUT.register[26]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4765 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[25][31:0], Q = \top_inst.top.DUT.register[25]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4764 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[24][31:0], Q = \top_inst.top.DUT.register[24]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4763 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[23][31:0], Q = \top_inst.top.DUT.register[23]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4762 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[22][31:0], Q = \top_inst.top.DUT.register[22]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4761 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[21][31:0], Q = \top_inst.top.DUT.register[21]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4760 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[20][31:0], Q = \top_inst.top.DUT.register[20]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4759 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[19][31:0], Q = \top_inst.top.DUT.register[19]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4758 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[18][31:0], Q = \top_inst.top.DUT.register[18]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4757 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[17][31:0], Q = \top_inst.top.DUT.register[17]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4756 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[16][31:0], Q = \top_inst.top.DUT.register[16]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4755 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[15][31:0], Q = \top_inst.top.DUT.register[15]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4754 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[14][31:0], Q = \top_inst.top.DUT.register[14]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4753 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[13][31:0], Q = \top_inst.top.DUT.register[13]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4752 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[12][31:0], Q = \top_inst.top.DUT.register[12]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4751 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[11][31:0], Q = \top_inst.top.DUT.register[11]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4750 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[10][31:0], Q = \top_inst.top.DUT.register[10]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4749 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[9][31:0], Q = \top_inst.top.DUT.register[9]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4748 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[8][31:0], Q = \top_inst.top.DUT.register[8]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4747 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[7][31:0], Q = \top_inst.top.DUT.register[7]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4746 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[6][31:0], Q = \top_inst.top.DUT.register[6]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4745 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[5][31:0], Q = \top_inst.top.DUT.register[5]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4744 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[4][31:0], Q = \top_inst.top.DUT.register[4]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4743 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[3][31:0], Q = \top_inst.top.DUT.register[3]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4742 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[2][31:0], Q = \top_inst.top.DUT.register[2]).
Adding EN signal on $flatten\top_inst.\top.\DUT.$procdff$4741 ($adff) from module ice40hx8k (D = $flatten\top_inst.\top.\DUT.$2\nxt_register[1][31:0], Q = \top_inst.top.DUT.register[1]).

20.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 96 unused cells and 96 unused wires.
<suppressed ~161 debug messages>

20.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~67 debug messages>

20.12.9. Rerunning OPT passes. (Maybe there is more to do..)

20.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

20.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3210: $flatten\top_inst.\top.\DUT.$procmux$3211_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3246: $flatten\top_inst.\top.\DUT.$procmux$3212_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3282: $flatten\top_inst.\top.\DUT.$procmux$3213_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3318: $flatten\top_inst.\top.\DUT.$procmux$3214_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3354: $flatten\top_inst.\top.\DUT.$procmux$3215_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3390: $flatten\top_inst.\top.\DUT.$procmux$3216_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3426: $flatten\top_inst.\top.\DUT.$procmux$3217_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3462: $flatten\top_inst.\top.\DUT.$procmux$3218_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3498: $flatten\top_inst.\top.\DUT.$procmux$3219_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3534: $flatten\top_inst.\top.\DUT.$procmux$3220_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3570: $flatten\top_inst.\top.\DUT.$procmux$3221_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3606: $flatten\top_inst.\top.\DUT.$procmux$3222_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3642: $flatten\top_inst.\top.\DUT.$procmux$3223_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3678: $flatten\top_inst.\top.\DUT.$procmux$3224_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3714: $flatten\top_inst.\top.\DUT.$procmux$3225_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3750: $flatten\top_inst.\top.\DUT.$procmux$3226_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3786: $flatten\top_inst.\top.\DUT.$procmux$3227_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3822: $flatten\top_inst.\top.\DUT.$procmux$3228_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3858: $flatten\top_inst.\top.\DUT.$procmux$3229_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3894: $flatten\top_inst.\top.\DUT.$procmux$3230_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3930: $flatten\top_inst.\top.\DUT.$procmux$3231_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$3966: $flatten\top_inst.\top.\DUT.$procmux$3232_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4002: $flatten\top_inst.\top.\DUT.$procmux$3233_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4038: $flatten\top_inst.\top.\DUT.$procmux$3234_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4074: $flatten\top_inst.\top.\DUT.$procmux$3235_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4110: $flatten\top_inst.\top.\DUT.$procmux$3236_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4146: $flatten\top_inst.\top.\DUT.$procmux$3237_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4182: $flatten\top_inst.\top.\DUT.$procmux$3238_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4218: $flatten\top_inst.\top.\DUT.$procmux$3239_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4254: $flatten\top_inst.\top.\DUT.$procmux$3240_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\DUT.$procmux$4290: $flatten\top_inst.\top.\DUT.$procmux$3241_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1504: $flatten\top_inst.\top.\rram.$procmux$1501_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1543: $flatten\top_inst.\top.\rram.$procmux$1470_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1582: $flatten\top_inst.\top.\rram.$procmux$1471_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1621: $flatten\top_inst.\top.\rram.$procmux$1472_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1660: $flatten\top_inst.\top.\rram.$procmux$1473_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1699: $flatten\top_inst.\top.\rram.$procmux$1474_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1738: $flatten\top_inst.\top.\rram.$procmux$1475_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1777: $flatten\top_inst.\top.\rram.$procmux$1476_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1816: $flatten\top_inst.\top.\rram.$procmux$1477_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1855: $flatten\top_inst.\top.\rram.$procmux$1478_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1894: $flatten\top_inst.\top.\rram.$procmux$1479_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1933: $flatten\top_inst.\top.\rram.$procmux$1480_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$1972: $flatten\top_inst.\top.\rram.$procmux$1481_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2011: $flatten\top_inst.\top.\rram.$procmux$1482_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2050: $flatten\top_inst.\top.\rram.$procmux$1483_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2089: $flatten\top_inst.\top.\rram.$procmux$1484_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2128: $flatten\top_inst.\top.\rram.$procmux$1485_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2167: $flatten\top_inst.\top.\rram.$procmux$1486_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2206: $flatten\top_inst.\top.\rram.$procmux$1487_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2245: $flatten\top_inst.\top.\rram.$procmux$1488_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2284: $flatten\top_inst.\top.\rram.$procmux$1489_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2323: $flatten\top_inst.\top.\rram.$procmux$1490_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2362: $flatten\top_inst.\top.\rram.$procmux$1491_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2401: $flatten\top_inst.\top.\rram.$procmux$1492_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2440: $flatten\top_inst.\top.\rram.$procmux$1493_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2479: $flatten\top_inst.\top.\rram.$procmux$1494_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2518: $flatten\top_inst.\top.\rram.$procmux$1495_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2557: $flatten\top_inst.\top.\rram.$procmux$1496_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2596: $flatten\top_inst.\top.\rram.$procmux$1497_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2635: $flatten\top_inst.\top.\rram.$procmux$1498_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2674: $flatten\top_inst.\top.\rram.$procmux$1499_CMP
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\rram.$procmux$2713: $flatten\top_inst.\top.\rram.$procmux$1500_CMP
  Optimizing cells in module \ice40hx8k.
Performed a total of 63 changes.

20.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

20.12.13. Executing OPT_DFF pass (perform DFF optimizations).

20.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

20.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.12.16. Rerunning OPT passes. (Maybe there is more to do..)

20.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

20.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.12.20. Executing OPT_DFF pass (perform DFF optimizations).

20.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.12.23. Finished OPT passes. (There is nothing left to do.)

20.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$747 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$751 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$741 ($gt).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1052_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1053_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1054_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1055_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1056_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1057_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s4.$procmux$1058_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1052_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1053_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1054_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1055_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1056_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1057_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s5.$procmux$1058_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1052_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1053_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1054_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1055_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1056_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1057_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s6.$procmux$1058_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1052_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1053_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1054_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1055_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1056_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1057_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\s7.$procmux$1058_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:20$226 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1164_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1149_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1110_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1099_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1089_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1080_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1069 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1065_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\arith.$procmux$1062 ($mux).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3241_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3240_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3239_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3238_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3237_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3236_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3235_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3234_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3233_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3232_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3231_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3230_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3229_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3228_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3227_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3171_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3170_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3169_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3168_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3167_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3166_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3165_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3164_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3163_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3162_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3161_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3160_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3159_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3158_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3157_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3138_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3137_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3136_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3135_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3134_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3133_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3132_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3131_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3130_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3129_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3128_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3127_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3126_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3125_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\DUT.$procmux$3124_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1361_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1360_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1337_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1324_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1279_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1274 ($mux).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1255_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1254_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1250_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1241 ($mux).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1226 ($mux).
Removed top 1 bits (of 7) from port B of cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1208_CMP0 ($eq).
Removed top 5 bits (of 6) from mux cell ice40hx8k.$flatten\top_inst.\top.\controller.$procmux$1203 ($mux).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$procmux$4437_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
Removed top 5 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:30$248 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$245 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$243 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$241 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$239 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:27$238 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$236 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$234 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$232 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$230 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$227 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$4543 ($mux).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$188 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$189 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$191 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$193 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:33$195 ($eq).
Removed top 2 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$197 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$198 ($eq).
Removed top 1 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\top.\ru.\r1.$eq$src/request_unit.sv:36$200 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1500_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1499_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1498_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1497_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1496_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1495_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1494_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1493_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1492_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1491_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1490_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1489_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1488_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1487_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\top.\rram.$procmux$1486_CMP0 ($eq).
Removed top 25 bits (of 32) from mux cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procmux$4510 ($mux).
Removed top 25 bits (of 32) from FF cell ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$procdff$4773 ($adff).
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$2\ALUResult[31:0].
Removed top 31 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\arith.$3\ALUResult[31:0].
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$5\aluOP[3:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$6\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$8\cuOP[5:0].
Removed top 5 bits (of 6) from wire ice40hx8k.$flatten\top_inst.\top.\controller.$9\cuOP[5:0].
Removed top 25 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\top.\ru.\m1.$2\ramaddr[31:0].
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742_Y.

20.14. Executing PEEPOPT pass (run peephole optimizers).

20.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

20.16. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ice40hx8k that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$sshr$src/alu.sv:37$262 ($sshr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4949 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$227_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\arith.$procmux$1149_CMP $auto$opt_reduce.cc:134:opt_pmux$4951 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shr$src/alu.sv:45$264 ($shr):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4949 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$227_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\arith.$procmux$1135_CMP $auto$opt_reduce.cc:134:opt_pmux$4951 }.
    No candidates found.
  Analyzing resource sharing options for $flatten\top_inst.\top.\arith.$shl$src/alu.sv:29$260 ($shl):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$4949 $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$227_Y $flatten\top_inst.\top.\signex.$eq$src/signExtender.sv:23$228_Y $flatten\top_inst.\top.\arith.$procmux$1164_CMP $auto$opt_reduce.cc:134:opt_pmux$4951 }.
    No candidates found.

20.17. Executing TECHMAP pass (map to technology primitives).

20.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

20.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

20.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

20.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$266 ($add).
  creating $macc model for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$268 ($sub).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39 ($add).
  creating $macc model for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42 ($add).
  creating $macc model for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$251 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748.
  creating $alu model for $macc $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$251.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39.
  creating $alu model for $macc $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$268.
  creating $alu model for $macc $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$266.
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$277 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$276 ($lt): new $alu
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$741 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$741: $auto$alumacc.cc:485:replace_alu$5373
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:93$276: $auto$alumacc.cc:485:replace_alu$5378
  creating $alu cell for $flatten\top_inst.\top.\arith.$lt$src/alu.sv:100$277: $auto$alumacc.cc:485:replace_alu$5391
  creating $alu cell for $flatten\top_inst.\top.\arith.$add$src/alu.sv:53$266: $auto$alumacc.cc:485:replace_alu$5402
  creating $alu cell for $flatten\top_inst.\top.\arith.$sub$src/alu.sv:61$268: $auto$alumacc.cc:485:replace_alu$5405
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:42$37: $auto$alumacc.cc:485:replace_alu$5408
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39: $auto$alumacc.cc:485:replace_alu$5411
  creating $alu cell for $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42: $auto$alumacc.cc:485:replace_alu$5414
  creating $alu cell for $flatten\top_inst.\top.\write.$add$src/writeToReg.sv:24$251: $auto$alumacc.cc:485:replace_alu$5417
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$748: $auto$alumacc.cc:485:replace_alu$5420
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$742: $auto$alumacc.cc:485:replace_alu$5423
  created 11 $alu and 0 $macc cells.

20.21. Executing OPT pass (performing simple optimizations).

20.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5 debug messages>

20.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

20.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\top.\arith.$procmux$1178: { $flatten\top_inst.\top.\arith.$procmux$1164_CMP $flatten\top_inst.\top.\arith.$procmux$1149_CMP $flatten\top_inst.\top.\arith.$procmux$1135_CMP $flatten\top_inst.\top.\arith.$procmux$1122_CMP $flatten\top_inst.\top.\arith.$procmux$1110_CMP $flatten\top_inst.\top.\arith.$procmux$1099_CMP $flatten\top_inst.\top.\arith.$procmux$1089_CMP $flatten\top_inst.\top.\arith.$procmux$1080_CMP }
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

20.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

20.21.6. Executing OPT_DFF pass (perform DFF optimizations).

20.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

20.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.21.9. Rerunning OPT passes. (Maybe there is more to do..)

20.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

20.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.21.13. Executing OPT_DFF pass (perform DFF optimizations).

20.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.21.16. Finished OPT passes. (There is nothing left to do.)

20.22. Executing MEMORY pass.

20.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

20.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

20.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).

20.25. Executing TECHMAP pass (map to technology primitives).

20.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

20.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

20.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

20.26. Executing ICE40_BRAMINIT pass.

20.27. Executing OPT pass (performing simple optimizations).

20.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~166 debug messages>

20.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$4778 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$4952 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$864_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Adding SRST signal on $auto$ff.cc:266:slice$4968 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$805_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4977 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$837_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4988 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [0], Q = \top_inst.top.testpc.PC [0]).
Adding EN signal on $auto$ff.cc:266:slice$4988 ($adffe) from module ice40hx8k (D = $flatten\top_inst.\top.\testpc.$2\next_pc[31:0] [1], Q = \top_inst.top.testpc.PC [1]).
Setting constant 0-bit at position 0 on $procdff$4778 ($dlatch) from module ice40hx8k.

20.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 11 unused cells and 101 unused wires.
<suppressed ~17 debug messages>

20.27.5. Rerunning OPT passes. (Removed registers in this run.)

20.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

20.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

20.27.8. Executing OPT_DFF pass (perform DFF optimizations).

20.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

20.27.10. Finished fast OPT passes.

20.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

20.29. Executing OPT pass (performing simple optimizations).

20.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

20.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\controller.$procmux$1211:
      Old ports: A=4'0110, B=4'1001, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0]
      New ports: A=2'10, B=2'01, Y=$flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1:0]
      New connections: $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [3:2] = { $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [0] $flatten\top_inst.\top.\controller.$3\aluOP[3:0] [1] }
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1248:
      Old ports: A={ 5'01110 $auto$wreduce.cc:461:run$5360 [0] }, B={ 41'01111110000010000110010010010101111010001 $auto$wreduce.cc:461:run$5361 [0] }, Y=$flatten\top_inst.\top.\controller.$7\cuOP[5:0]
      New ports: A={ 4'0110 $auto$wreduce.cc:461:run$5360 [0] }, B={ 34'0111110000100011010010101011101001 $auto$wreduce.cc:461:run$5361 [0] }, Y={ $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [4] = $flatten\top_inst.\top.\controller.$7\cuOP[5:0] [3]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1291:
      Old ports: A=6'010010, B={ 41'01001101010001011001011101100001100101101 $auto$wreduce.cc:461:run$5361 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0]
      New ports: A=4'0010, B={ 27'001101000110011110001001101 $auto$wreduce.cc:461:run$5361 [0] }, Y=$flatten\top_inst.\top.\controller.$5\cuOP[5:0] [3:0]
      New connections: $flatten\top_inst.\top.\controller.$5\cuOP[5:0] [5:4] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1319:
      Old ports: A=6'100110, B=18'001111010000010001, Y=$flatten\top_inst.\top.\controller.$4\cuOP[5:0]
      New ports: A=5'10010, B=15'001110100001001, Y={ $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [5:3] $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1:0] }
      New connections: $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [2] = $flatten\top_inst.\top.\controller.$4\cuOP[5:0] [1]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1330:
      Old ports: A=6'100110, B=30'001010001011001100001101001110, Y=$flatten\top_inst.\top.\controller.$3\cuOP[5:0]
      New ports: A=5'10110, B=25'0101001011011000110101110, Y={ $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$3\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\top.\controller.$procmux$1344:
      Old ports: A=6'100110, B=36'000100000101000110000111001000001001, Y=$flatten\top_inst.\top.\controller.$2\cuOP[5:0]
      New ports: A=5'10110, B=30'001000010100110001110100001001, Y={ $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [5] $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [3:0] }
      New connections: $flatten\top_inst.\top.\controller.$2\cuOP[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1440:
      Old ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm 12'000000000000 }, Y=$flatten\top_inst.\top.\signex.$4\immOut[31:0]
      New ports: A={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, B={ \top_inst.top.signex.imm [19:12] \top_inst.top.signex.imm [10:0] 12'000000000000 }, Y={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$4\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:44$43_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y
      New ports: A=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:45$48_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:46$52_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58:
      Old ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 2'x }, B={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1] 1'x }, Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y
      New ports: A={ $flatten\top_inst.\top.\testpc.$add$src/pc.sv:44$42_Y [31:2] 1'x }, B=$flatten\top_inst.\top.\testpc.$add$src/pc.sv:43$39_Y [31:1], Y=$flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [31:1]
      New connections: $flatten\top_inst.\top.\testpc.$ternary$src/pc.sv:47$58_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$821:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$821_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1452:
      Old ports: A=$flatten\top_inst.\top.\signex.$4\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y=$flatten\top_inst.\top.\signex.$3\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$4\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$4\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11:0] }, Y={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$3\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$826:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$821_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$826_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$821_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$826_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\top.\signex.$procmux$1461:
      Old ports: A=$flatten\top_inst.\top.\signex.$3\immOut[31:0], B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y=$flatten\top_inst.\top.\signex.$2\immOut[31:0]
      New ports: A={ $flatten\top_inst.\top.\signex.$3\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$3\immOut[31:0] [22:0] }, B={ \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [11] \top_inst.top.signex.imm [0] \top_inst.top.signex.imm [10:1] }, Y={ $flatten\top_inst.\top.\signex.$2\immOut[31:0] [31:24] $flatten\top_inst.\top.\signex.$2\immOut[31:0] [22:0] }
      New connections: $flatten\top_inst.\top.\signex.$2\immOut[31:0] [23] = \top_inst.top.signex.imm [11]
  Optimizing cells in module \ice40hx8k.
Performed a total of 15 changes.

20.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.29.6. Executing OPT_DFF pass (perform DFF optimizations).

20.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.29.9. Rerunning OPT passes. (Maybe there is more to do..)

20.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

20.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4961 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:461:run$5366 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

20.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.29.16. Rerunning OPT passes. (Maybe there is more to do..)

20.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

20.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.29.20. Executing OPT_DFF pass (perform DFF optimizations).

20.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.29.23. Finished OPT passes. (There is nothing left to do.)

20.30. Executing ICE40_WRAPCARRY pass (wrap carries).

20.31. Executing TECHMAP pass (map to technology primitives).

20.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

20.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

20.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c83925f608704c3fa34790ddcfce9302bdcd7533\_90_pmux for cells of type $pmux.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$ccbcf9cf459c8d68b04688a9a5245ee9d295a0be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$b8fb36dbb218c8f6b30171c756a8f8357614d906\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$104d3d1e82b09b030a785dad8a5e608a6d4401f7\_90_pmux for cells of type $pmux.
Using template $paramod$aa21a8cfcdb2d038c61c16c25c37cdf209d597be\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$8e2cd9e836d46c40867c8d0d57053a4e1c3bcdbc\_90_pmux for cells of type $pmux.
Using template $paramod$77db613179eb70c5e4e5c5aca72d602a7c6017b6\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$ae63dc3b50d8e8327f3f28c91126b1f0b8c3a12c\_90_pmux for cells of type $pmux.
Using template $paramod$a2dfbfccaf255934df30ecabbf39af44cb16e7a1\_90_pmux for cells of type $pmux.
Using template $paramod$d7d291546b4dfc9bc743ff469017e2c721a2385d\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$bf8e268f26361094a16ad6650df0ad1ca719658a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~2901 debug messages>

20.32. Executing OPT pass (performing simple optimizations).

20.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2742 debug messages>

20.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~9528 debug messages>
Removed a total of 3176 cells.

20.32.3. Executing OPT_DFF pass (perform DFF optimizations).

20.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 199 unused cells and 3221 unused wires.
<suppressed ~200 debug messages>

20.32.5. Finished fast OPT passes.

20.33. Executing ICE40_OPT pass (performing simple optimizations).

20.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5373.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$5373.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5414.slice[0].carry: CO=\top_inst.top.testpc.PC [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5420.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$5423.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

20.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~18 debug messages>

20.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.33.4. Executing OPT_DFF pass (perform DFF optimizations).

20.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

20.33.6. Rerunning OPT passes. (Removed registers in this run.)

20.33.7. Running ICE40 specific optimizations.

20.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.33.10. Executing OPT_DFF pass (perform DFF optimizations).

20.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.33.12. Finished OPT passes. (There is nothing left to do.)

20.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

20.35. Executing TECHMAP pass (map to technology primitives).

20.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

20.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
No more expansions possible.
<suppressed ~2174 debug messages>

20.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5414.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5420.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$5423.slice[0].carry ($lut).

20.38. Executing ICE40_OPT pass (performing simple optimizations).

20.38.1. Running ICE40 specific optimizations.

20.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~269 debug messages>

20.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

20.38.4. Executing OPT_DFF pass (perform DFF optimizations).

20.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 12012 unused wires.
<suppressed ~1 debug messages>

20.38.6. Rerunning OPT passes. (Removed registers in this run.)

20.38.7. Running ICE40 specific optimizations.

20.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.38.10. Executing OPT_DFF pass (perform DFF optimizations).

20.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.38.12. Finished OPT passes. (There is nothing left to do.)

20.39. Executing TECHMAP pass (map to technology primitives).

20.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

20.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

20.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

20.41. Executing ABC9 pass.

20.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ice40hx8k.
Found 0 SCCs.

20.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.5. Executing PROC pass (convert processes to netlists).

20.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

20.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

20.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

20.41.5.4. Executing PROC_INIT pass (extract init attributes).

20.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

20.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

20.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

20.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

20.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

20.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

20.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

20.41.5.12. Executing OPT_EXPR pass (perform const folding).

20.41.6. Executing TECHMAP pass (map to technology primitives).

20.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

20.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~129 debug messages>

20.41.7. Executing OPT pass (performing simple optimizations).

20.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFR.
Optimizing module SB_DFFES.

20.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Removed a total of 0 cells.

20.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

20.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFR.
  Optimizing cells in module \SB_DFFES.
Performed a total of 0 changes.

20.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFES'.
Removed a total of 0 cells.

20.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

20.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFR..
Finding unused cells or wires in module \SB_DFFES..

20.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

20.41.7.9. Finished OPT passes. (There is nothing left to do.)

20.41.8. Executing TECHMAP pass (map to technology primitives).

20.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

20.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFES for cells of type SB_DFFES.
Using template SB_DFFR for cells of type SB_DFFR.
No more expansions possible.
<suppressed ~1260 debug messages>

20.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

20.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~918 debug messages>

20.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

20.41.13. Executing TECHMAP pass (map to technology primitives).

20.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

20.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~150 debug messages>

20.41.14. Executing OPT pass (performing simple optimizations).

20.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

20.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

20.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

20.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

20.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

20.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

20.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

20.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

20.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

20.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

20.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

20.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

20.41.14.16. Finished OPT passes. (There is nothing left to do.)

20.41.15. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

20.41.16. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 5899 cells with 26488 new cells, skipped 9155 cells.
  replaced 3 cell types:
    4935 $_OR_
      66 $_XOR_
     898 $_MUX_
  not replaced 16 cell types:
      21 $scopeinfo
     467 $_NOT_
    4064 $_AND_
       1 SB_PLL40_CORE
     878 SB_DFFE
      71 SB_DFFR
      15 SB_DFFESR
    1135 SB_DFFER
       4 SB_DFFESS
      49 SB_DFFES
    1135 SB_DFFER_$abc9_byp
      71 SB_DFFR_$abc9_byp
      49 SB_DFFES_$abc9_byp
     279 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
      19 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     897 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101

20.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

20.41.16.3. Executing XAIGER backend.
<suppressed ~2163 debug messages>
Extracted 11891 AND gates and 36291 wires from module `ice40hx8k' to a netlist network with 2176 inputs and 1239 outputs.

20.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

20.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1239  and =   11373  lev =   77 (4.46)  mem = 0.30 MB  box = 2450  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2176/   1239  and =   16863  lev =   57 (3.02)  mem = 0.36 MB  ch = 1097  box = 2418  bb = 2171
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   16863.  Ch =   892.  Total mem =    3.79 MB. Peak cut mem =    0.18 MB.
ABC: P:  Del = 17400.00.  Ar =    6079.0.  Edge =    22678.  Cut =   110160.  T =     0.02 sec
ABC: P:  Del = 17358.00.  Ar =    5566.0.  Edge =    21759.  Cut =   107236.  T =     0.02 sec
ABC: P:  Del = 17358.00.  Ar =    4890.0.  Edge =    15312.  Cut =   119465.  T =     0.02 sec
ABC: F:  Del = 17358.00.  Ar =    4185.0.  Edge =    14340.  Cut =    90306.  T =     0.01 sec
ABC: A:  Del = 17358.00.  Ar =    3833.0.  Edge =    13449.  Cut =    89716.  T =     0.03 sec
ABC: A:  Del = 17358.00.  Ar =    3741.0.  Edge =    13299.  Cut =    89468.  T =     0.03 sec
ABC: Total time =     0.12 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   2176/   1239  and =   10125  lev =   58 (3.05)  mem = 0.28 MB  box = 2418  bb = 2171
ABC: Mapping (K=4)  :  lut =   3726  edge =   13233  lev =   28 (1.56)  levB =   53  mem = 0.16 MB
ABC: LUT = 3726 : 2=529 14.2 %  3=613 16.5 %  4=2584 69.4 %  Ave = 3.55
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 15 carries.
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 4.63 seconds, total: 4.63 seconds

20.41.16.6. Executing AIGER frontend.
<suppressed ~6874 debug messages>
Removed 12005 unused cells and 22721 unused wires.

20.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     3747
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:     1135
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:       71
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:       49
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      247
ABC RESULTS:           input signals:     1290
ABC RESULTS:          output signals:     1011
Removing temp directory.

20.41.17. Executing TECHMAP pass (map to technology primitives).

20.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

20.41.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
No more expansions possible.
<suppressed ~1511 debug messages>

20.42. Executing ICE40_WRAPCARRY pass (wrap carries).

20.43. Executing TECHMAP pass (map to technology primitives).

20.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

20.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 154 unused cells and 49601 unused wires.

20.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4047
  1-LUT               21
  2-LUT              534
  3-LUT              863
  4-LUT             2629
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Eliminating LUTs.
Number of LUTs:     4047
  1-LUT               21
  2-LUT              534
  3-LUT              863
  4-LUT             2629
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Combining LUTs.
Number of LUTs:     4044
  1-LUT               21
  2-LUT              532
  3-LUT              859
  4-LUT             2632
  with \SB_CARRY    (#0)  189
  with \SB_CARRY    (#1)  192

Eliminated 0 LUTs.
Combined 3 LUTs.
<suppressed ~27514 debug messages>

20.45. Executing TECHMAP pass (map to technology primitives).

20.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

20.45.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod$3416dacc8eaab1f89b3d6b7398df3da766d29ef2\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod$6b7c9c56fc2a32a479d463d5f3b0d3f4673b67f1\$lut for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$be48d952fcad8a16b8d84daa4c48a3065f343e5e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$219b71aec9a19e7a27754ed85a7d6cdad9e5ec96\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$53d1295e92eea38a512b9ce693445c7190afdb5d\$lut for cells of type $lut.
Using template $paramod$52d96bfa17866bab828b9f1286c638d27fce0ef0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$ec6c71d259df49ae0842190ffaff1179e43a8db4\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$cf1d1b94b6deab15fa56eccf201ab344fada8992\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$e01a027fedb28671a20c130493a89c7afd4e87d3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110010 for cells of type $lut.
Using template $paramod$a5dd9ee10fc2202a29791f7d68d4afcce241aee5\$lut for cells of type $lut.
Using template $paramod$a5788e8bd3559e65ba7c6a1d93529c6fb76569b9\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$7c10da2741b95c679da643f74e8aa9472416631e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$865395c0228487a64a8e4011cecafc2c64b79f2b\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$0d5e420ccfc2dddc13533c0817d1e17e68a2c136\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$efc60783c939ae41b2f3555af407b17c007b27f8\$lut for cells of type $lut.
Using template $paramod$c7754eeb17b54dfe53ea4a973db3714d78ced2f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100111 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$323dbb47a6d14615772fecb6fe7c4bec277e6c6b\$lut for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$9225a1e7171a31391d3103e59bac04fd4b7aa6c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod$daac9b1e7bb2ac018f7132a3fbe0026ddd7b1a71\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod$9e394303e290a474880b56f98766417009256d93\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000111 for cells of type $lut.
Using template $paramod$a7c07944e10969b2e1fd563a5b72f89493cb3705\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$db08fd84fb3c4d6a41eaec6adfffe445fb7eb17f\$lut for cells of type $lut.
Using template $paramod$413d040dcd860cd74ca61a70644516a95d328ae7\$lut for cells of type $lut.
Using template $paramod$d7c634c964a868577f926c0690c937ab5b147f6e\$lut for cells of type $lut.
Using template $paramod$068092ddede495d8462ffe530e6d91711913edbc\$lut for cells of type $lut.
Using template $paramod$728e616c918eb05878d70b2bb240e381ea2847b9\$lut for cells of type $lut.
Using template $paramod$a7d9b4ab0321c8125e5b895183ee6b84cdb4a31b\$lut for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod$6d937d8a77a6356f2f9cc89d5646fb948bb8225e\$lut for cells of type $lut.
Using template $paramod$bacdb2105cbfbe75cfbcc2fb021fd3aba864526b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod$5502a85110dbca29ac631107f0b0635e7fade476\$lut for cells of type $lut.
Using template $paramod$e197e162644f13ba3d6def1b385f7543969ee569\$lut for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod$3331a91b4e24483a258fc0d47474cffbd93ab577\$lut for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$af0c0e3aea5daa768aac0697b02a2a49301800b1\$lut for cells of type $lut.
Using template $paramod$1bb2fc47b457abe7e28b98cfa3441b6432237f90\$lut for cells of type $lut.
Using template $paramod$2f35f125a78690286f0cd2faecbaee9c64828b65\$lut for cells of type $lut.
Using template $paramod$018d71a0fe325d6362687fe53ac13dd6340e400d\$lut for cells of type $lut.
Using template $paramod$15deee21bfb7f6f9f3963bae01e1abc87728ceb1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$889dc7b17c448030eaa05f5eb6c645a7ac00212c\$lut for cells of type $lut.
Using template $paramod$9dfe2a25d99d8640a9f67a2438aaca85b684d257\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$5a490b0e00aeb3aa961ff44c01138435d4948c4d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$edfe6773e2ae95f1f17ad5bea62c0e1b079fa667\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$28c616faf5f033f157ae11b466e19ab28d454f1e\$lut for cells of type $lut.
Using template $paramod$4bb876346cbc5d13aef9f873277f12d388c5d51a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$3f83809cb0f84defec716c206740c2596b07425e\$lut for cells of type $lut.
Using template $paramod$25696d6b21c8ac3da9913114964545779e21cfa5\$lut for cells of type $lut.
Using template $paramod$0a4d85497e20c50068555dd5ad9ad3a7952cab73\$lut for cells of type $lut.
Using template $paramod$169e3ff199948acb6289d60ee69a6cbdb1d4057e\$lut for cells of type $lut.
Using template $paramod$b1c1fcc81573437ec158d7c629938862148f7151\$lut for cells of type $lut.
Using template $paramod$32abbd1d449a67fb913b4733374e345d4c17175b\$lut for cells of type $lut.
Using template $paramod$4f39c5c51c988a41c99a3b4cbb25eb92f8a03c0f\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$085ac6daadd555b0f8cf8f603c7849f876be6cbc\$lut for cells of type $lut.
Using template $paramod$0e7ce19e5da99c6675c7a5220f7cc55270b24ac0\$lut for cells of type $lut.
Using template $paramod$7e8d331d1e06632d29fbdf6c3afc2de1856d3c67\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010010 for cells of type $lut.
Using template $paramod$19f568890ed784cb1efc3ce1b67eed20a6c54d9a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$75d5c453cca75cc7a7ca320c4fb7be0932b6aaa7\$lut for cells of type $lut.
Using template $paramod$6e4272656122ce3af96ff2164934342df91d0a9f\$lut for cells of type $lut.
Using template $paramod$23b135911b7c14b5b19b5329e5903bcf58b44188\$lut for cells of type $lut.
Using template $paramod$de4edcc8e861a7ccd264ca8b13b276cd87afea77\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$fda6887b37f599177ed9cb69271d882b63df7e66\$lut for cells of type $lut.
Using template $paramod$d21d214a5aa271f2d9da3f90f22432c0ecee130f\$lut for cells of type $lut.
Using template $paramod$4fd3428c4b8b1accf8f8fb4bb88555a2b5fa688d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$1644affdabe7f65febd25ca1c4d1e050be54e54f\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$629288805861db2492386648ff94cc9e61d6fd7b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$c8c9645d6f378ad67688dabef3c0249a9ff7abd9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$95405290ab850162780aaf9d904598a9a9ee1d4b\$lut for cells of type $lut.
Using template $paramod$ee82f1504b2c48e70160208feb4e1f2a1b612b8d\$lut for cells of type $lut.
Using template $paramod$6375ab94b303a3f3c8d7ca6946328cb3c0b443a7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111011 for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod$aab54572d5ffecd31253b36e73e9cb718d05be34\$lut for cells of type $lut.
Using template $paramod$191987e4132f69ca46dd53dfa3f15f72d990cc0a\$lut for cells of type $lut.
Using template $paramod$5321e04f7ce32c091123c3570ab562efb1c81402\$lut for cells of type $lut.
Using template $paramod$3258fabf91107b4a007ae89b2246a16c31e8ae28\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$f87bcf1791971b4eaa30f3f28437044fef878a04\$lut for cells of type $lut.
Using template $paramod$0331e023d83b8009e60defb446ce9fa640b122c7\$lut for cells of type $lut.
Using template $paramod$dcf08e3cf5571973d6310a4a5eed682d194e9cfb\$lut for cells of type $lut.
Using template $paramod$0392318cefd9d15f572622bd5a88290120220d9c\$lut for cells of type $lut.
Using template $paramod$afdefd64f115cbb578c1cd4bf8426ecfef85ae91\$lut for cells of type $lut.
Using template $paramod$b69ed7a5b6f8c0acc3913ae9c1063a5bfac099c2\$lut for cells of type $lut.
Using template $paramod$f55f4b90ec8e3e648d5c29eab1fa5ddd64b3f973\$lut for cells of type $lut.
Using template $paramod$50162a76634b2588552bbd6b943dc3daf5b2a25f\$lut for cells of type $lut.
Using template $paramod$fdcae86fcfd036c1880a04306ae771a9d7579c31\$lut for cells of type $lut.
Using template $paramod$325e90edf97670f9dea57833ae1f51a5e8bcddea\$lut for cells of type $lut.
Using template $paramod$34b1f7b459d102c0882dcbac0fbb3f7b1a5a2df4\$lut for cells of type $lut.
Using template $paramod$fcff9a7b1687e357a40264efcefe8443c8b2971a\$lut for cells of type $lut.
Using template $paramod$feac1814a13647ff95d85e23385825c648d6c2ee\$lut for cells of type $lut.
Using template $paramod$58df2c605746858c7e53492c8f57d6f1fafa12d2\$lut for cells of type $lut.
Using template $paramod$cc2c73b4a486d6847dcd620841ed542a241d8998\$lut for cells of type $lut.
Using template $paramod$aa87f4b44361d4073f55a64babebb83974861eee\$lut for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$f5b3437ebe4ad34d6a9170a7a7912d680e6619b8\$lut for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod$9506ecf18c91672f3dae4008b6ad1f2863e8019f\$lut for cells of type $lut.
Using template $paramod$39825c5ed3d135e502be79829033166f1762d78b\$lut for cells of type $lut.
Using template $paramod$6110825fd468c807ec12f31cb5052085a8e6f5a4\$lut for cells of type $lut.
Using template $paramod$66658cbed86a8310f9b7ba1190d35eff90ee749b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111101 for cells of type $lut.
Using template $paramod$f5c23b297b0a8ca096118d63d2c74ddd6cbea134\$lut for cells of type $lut.
Using template $paramod$e277a522d8a930c8c8c8cdb56d33d42914aefec4\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$4b815e6c998e04ad0d0242e44b0c58a7a9d0b3b6\$lut for cells of type $lut.
Using template $paramod$1816ab9d89d34338423e92baed3cee854d70815a\$lut for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$4045162732ff1ef3063f7c74bcf446c45645f6c6\$lut for cells of type $lut.
Using template $paramod$7f8dcbbcc0931c3398304053d9bb53ce1acb1b1f\$lut for cells of type $lut.
Using template $paramod$1b4dd6457d07f8f165ec99061b8d6c5023635c5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod$70f68cc10fbeada9b6fa90c3bb75475e348ca467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod$809e4f306da46522039076103556a5f81b7e0928\$lut for cells of type $lut.
Using template $paramod$0771f43be39b9c54ef7c24c6f1e9f5c46fb320f7\$lut for cells of type $lut.
Using template $paramod$e2ad375dd3349ce9179d4a7f0523cdf60b12cefd\$lut for cells of type $lut.
Using template $paramod$8505085f155bd6c188b05e36b7ab496c27f32cbb\$lut for cells of type $lut.
Using template $paramod$1d029b00755c736bd0aecd6780e981248e8fafe8\$lut for cells of type $lut.
Using template $paramod$bf07b45df98deb85b9934d5e9f1f7e2bcd3411d6\$lut for cells of type $lut.
Using template $paramod$2a6814f63525c562c4d2a8064801a4b4ca555ab4\$lut for cells of type $lut.
Using template $paramod$6d914a6a8dc54f49b4a7dcfda1d0ca3ca27f308e\$lut for cells of type $lut.
Using template $paramod$2f57315134b6f779e7694c56dbd550e8a01a83b3\$lut for cells of type $lut.
Using template $paramod$755dd8c6b516dae2c0a5f17dc582057c265a4793\$lut for cells of type $lut.
Using template $paramod$02dff6fcc5d2991103f95b3b07c64ee97a74450f\$lut for cells of type $lut.
Using template $paramod$ff449a2edf0f2191204ad4ea2ec69b2ed1cf80d7\$lut for cells of type $lut.
Using template $paramod$7798ae5999ac09d10a035fef0208a8c02aa8e843\$lut for cells of type $lut.
Using template $paramod$54e89055655d38747956575ce9272fcf82ea7df3\$lut for cells of type $lut.
Using template $paramod$bcfcccb17b1cb43a18644d6d211ef2e5a77b1888\$lut for cells of type $lut.
Using template $paramod$a3871e39fa72e8f9391192e90c5eed33d8a8f892\$lut for cells of type $lut.
Using template $paramod$f9333290b738a242cb30b0de8879c5396e3e6451\$lut for cells of type $lut.
Using template $paramod$2905a849a71fc9ef1df9254ec01ada641328761c\$lut for cells of type $lut.
Using template $paramod$8422f65b373bb61ce43bc200df5117a517430faa\$lut for cells of type $lut.
Using template $paramod$33e4d9cc3cda842156dd67d86dd5b91148605b58\$lut for cells of type $lut.
Using template $paramod$676e4e60fc871d6408a38b7075a7492c619193e8\$lut for cells of type $lut.
Using template $paramod$2c0b31a68dd1042cab3d89a5739575f612aebef5\$lut for cells of type $lut.
Using template $paramod$2810ddd0789ca93e4086ed4a7af86ecda961198e\$lut for cells of type $lut.
Using template $paramod$c5aff53b80afef72690f7d67cb0ffd15b27c9093\$lut for cells of type $lut.
Using template $paramod$ae7fde25368e507d7585ddc2c2490c9e2f4ff1d4\$lut for cells of type $lut.
Using template $paramod$6963253509465594b5c8e8deb6550bb0f6057c8e\$lut for cells of type $lut.
Using template $paramod$7ab11b76d0f464a34dfe13b6a544798d9a5a8276\$lut for cells of type $lut.
Using template $paramod$849d013d096d73269ca4beb768f8e399745d37f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$1661fd1d8cfb54ddeba09cd7df814e0fd3aae40f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$f3b603d1450c2c61ce732232fcb5fe1f2884aa83\$lut for cells of type $lut.
Using template $paramod$0f19b1c588a47c675d00132b243b5e3308ffab5d\$lut for cells of type $lut.
Using template $paramod$5d91ae8bf13f169f64fe2e993cae12295d19d8d3\$lut for cells of type $lut.
Using template $paramod$833582361e14b3ee2e66ad676022ab35d7aa7e28\$lut for cells of type $lut.
Using template $paramod$f13784ede300b12a5285177c86c7721a54cf9e12\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
No more expansions possible.
<suppressed ~7362 debug messages>
Removed 0 unused cells and 10828 unused wires.

20.46. Executing AUTONAME pass.
Renamed 527325 objects in module ice40hx8k (305 iterations).
<suppressed ~9043 debug messages>

20.47. Executing HIERARCHY pass (managing design hierarchy).

20.47.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

20.47.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

20.48. Printing statistics.

=== ice40hx8k ===

   Number of wires:               2830
   Number of wire bits:          11690
   Number of public wires:        2830
   Number of public wire bits:   11690
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6457
     $scopeinfo                     21
     SB_CARRY                      239
     SB_DFFE                       878
     SB_DFFER                     1135
     SB_DFFES                       49
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        71
     SB_LUT4                      4044
     SB_PLL40_CORE                   1

20.49. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

20.50. Executing JSON backend.

Warnings: 71 unique messages, 71 total
End of script. Logfile hash: aada8cd565, CPU: user 6.75s system 0.08s, MEM: 181.19 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 40% 1x abc9_exe (4 sec), 12% 39x opt_expr (1 sec), ...
